[DEBUG] Trying to get func ty of defid DefId(0:503 ~ libc[a291]::unix::{impl#1}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:511 ~ libc[a291]::unix::{impl#3}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:517 ~ libc[a291]::unix::{impl#5}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:523 ~ libc[a291]::unix::{impl#7}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:529 ~ libc[a291]::unix::{impl#9}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:535 ~ libc[a291]::unix::{impl#11}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:555 ~ libc[a291]::unix::{impl#13}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:561 ~ libc[a291]::unix::{impl#15}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:570 ~ libc[a291]::unix::{impl#17}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:576 ~ libc[a291]::unix::{impl#19}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:583 ~ libc[a291]::unix::{impl#21}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:591 ~ libc[a291]::unix::{impl#23}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:597 ~ libc[a291]::unix::{impl#25}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:602 ~ libc[a291]::unix::{impl#27}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:608 ~ libc[a291]::unix::{impl#29}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:616 ~ libc[a291]::unix::{impl#31}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:624 ~ libc[a291]::unix::{impl#33}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1076 ~ libc[a291]::unix::bsd::{impl#1}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1084 ~ libc[a291]::unix::bsd::{impl#3}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1094 ~ libc[a291]::unix::bsd::{impl#5}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1108 ~ libc[a291]::unix::bsd::{impl#7}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1119 ~ libc[a291]::unix::bsd::{impl#9}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1125 ~ libc[a291]::unix::bsd::{impl#11}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1140 ~ libc[a291]::unix::bsd::{impl#13}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1151 ~ libc[a291]::unix::bsd::{impl#15}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1158 ~ libc[a291]::unix::bsd::{impl#17}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1164 ~ libc[a291]::unix::bsd::{impl#19}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1170 ~ libc[a291]::unix::bsd::{impl#21}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1178 ~ libc[a291]::unix::bsd::{impl#23}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1184 ~ libc[a291]::unix::bsd::{impl#25}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1192 ~ libc[a291]::unix::bsd::{impl#27}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1200 ~ libc[a291]::unix::bsd::{impl#29}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR).5), kind: Cast(Expr { hir_id: HirId(DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR).6), kind: Field(Expr { hir_id: HirId(DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR).7), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:591:14: 591:18 (#0), res: Local(HirId(DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR).2)), segments: [PathSegment { ident: mhdr#0, hir_id: HirId(DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR).9), res: Local(HirId(DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:591:14: 591:18 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:591:12: 591:19 (#0) }, msg_controllen#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:591:12: 591:34 (#0) }, Ty { hir_id: HirId(DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:591:38: 591:43 (#0), res: PrimTy(Uint(Usize)), segments: [PathSegment { ident: usize#0, hir_id: HirId(DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR).11), res: PrimTy(Uint(Usize)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:591:38: 591:43 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:591:12: 591:43 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR).12), kind: Call(Expr { hir_id: HirId(DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:591:47: 591:74 (#0), res: Def(Fn, DefId(1:2158 ~ core[7d5a]::mem::size_of)), segments: [PathSegment { ident: {{root}}#0, hir_id: HirId(DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR).14), res: Err, args: None, infer_args: true }, PathSegment { ident: mem#0, hir_id: HirId(DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR).15), res: Def(Mod, DefId(1:1995 ~ core[7d5a]::mem)), args: None, infer_args: true }, PathSegment { ident: size_of#0, hir_id: HirId(DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR).19), res: Def(Fn, DefId(1:2158 ~ core[7d5a]::mem::size_of)), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId(DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:591:64: 591:73 (#0), res: Def(Struct, DefId(0:1152 ~ libc[a291]::unix::bsd::cmsghdr)), segments: [PathSegment { ident: {{root}}#0, hir_id: HirId(DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR).17), res: Err, args: None, infer_args: false }, PathSegment { ident: cmsghdr#0, hir_id: HirId(DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR).18), res: Def(Struct, DefId(0:1152 ~ libc[a291]::unix::bsd::cmsghdr)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:591:64: 591:73 (#0) })], constraints: [], parenthesized: No, span_ext: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:591:63: 591:74 (#0) }), infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:591:47: 591:74 (#0) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:591:47: 591:76 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:2158 ~ core[7d5a]::mem::size_of)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).7), kind: Call(Expr { hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:599:20: 599:38 (#0), res: Def(Fn, DefId(1:2160 ~ core[7d5a]::mem::size_of_val)), segments: [PathSegment { ident: {{root}}#0, hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).9), res: Err, args: None, infer_args: true }, PathSegment { ident: mem#0, hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).10), res: Def(Mod, DefId(1:1995 ~ core[7d5a]::mem)), args: None, infer_args: true }, PathSegment { ident: size_of_val#0, hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).11), res: Def(Fn, DefId(1:2160 ~ core[7d5a]::mem::size_of_val)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:599:20: 599:38 (#0) }, [Expr { hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).12), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).13), kind: Index(Expr { hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).14), kind: Field(Expr { hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).15), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:599:42: 599:45 (#0), res: Local(HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).4)), segments: [PathSegment { ident: set#0, hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).17), res: Local(HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:599:42: 599:45 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:599:40: 599:46 (#0) }, fds_bits#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:599:40: 599:55 (#0) }, Expr { hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).18), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:599:56: 599:57 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:599:56: 599:57 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:599:55: 599:58 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:599:40: 599:58 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:599:39: 599:58 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:599:20: 599:59 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).19), kind: Lit(Spanned { node: Int(Pu128(8), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:599:62: 599:63 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:599:62: 599:63 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:2160 ~ core[7d5a]::mem::size_of_val)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"libc"}), Specific({"libc"})), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).43), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:601:41: 601:42 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:601:41: 601:42 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).44), kind: Binary(Spanned { node: Rem, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:601:50: 601:51 (#0) }, Expr { hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).45), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:601:47: 601:49 (#0), res: Local(HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).29)), segments: [PathSegment { ident: fd#0, hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).46), res: Local(HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).29)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:601:47: 601:49 (#0) }, Expr { hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).47), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:601:52: 601:56 (#0), res: Local(HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).21)), segments: [PathSegment { ident: bits#0, hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).48), res: Local(HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).21)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:601:52: 601:56 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:601:46: 601:57 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).45), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:601:47: 601:49 (#0), res: Local(HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).29)), segments: [PathSegment { ident: fd#0, hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).46), res: Local(HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).29)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:601:47: 601:49 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).47), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:601:52: 601:56 (#0), res: Local(HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).21)), segments: [PathSegment { ident: bits#0, hir_id: HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).48), res: Local(HirId(DefId(0:1213 ~ libc[a291]::unix::bsd::FD_CLR).21)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:601:52: 601:56 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).7), kind: Call(Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:606:20: 606:38 (#0), res: Def(Fn, DefId(1:2160 ~ core[7d5a]::mem::size_of_val)), segments: [PathSegment { ident: {{root}}#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).9), res: Err, args: None, infer_args: true }, PathSegment { ident: mem#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).10), res: Def(Mod, DefId(1:1995 ~ core[7d5a]::mem)), args: None, infer_args: true }, PathSegment { ident: size_of_val#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).11), res: Def(Fn, DefId(1:2160 ~ core[7d5a]::mem::size_of_val)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:606:20: 606:38 (#0) }, [Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).12), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).13), kind: Index(Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).14), kind: Field(Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).15), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:606:42: 606:45 (#0), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).4)), segments: [PathSegment { ident: set#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).17), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:606:42: 606:45 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:606:40: 606:46 (#0) }, fds_bits#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:606:40: 606:55 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).18), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:606:56: 606:57 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:606:56: 606:57 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:606:55: 606:58 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:606:40: 606:58 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:606:39: 606:58 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:606:20: 606:59 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).19), kind: Lit(Spanned { node: Int(Pu128(8), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:606:62: 606:63 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:606:62: 606:63 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:2160 ~ core[7d5a]::mem::size_of_val)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"libc"}), Specific({"libc"})), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).32), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:44: 608:45 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).33), kind: Index(Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).34), kind: Field(Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).35), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).36), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:19: 608:22 (#0), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).4)), segments: [PathSegment { ident: set#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).37), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:19: 608:22 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:17: 608:23 (#0) }, fds_bits#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:17: 608:32 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).38), kind: Binary(Spanned { node: Div, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:36: 608:37 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:33: 608:35 (#0), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).29)), segments: [PathSegment { ident: fd#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).40), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).29)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:33: 608:35 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).41), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:38: 608:42 (#0), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).21)), segments: [PathSegment { ident: bits#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).42), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).21)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:38: 608:42 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:33: 608:42 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:32: 608:43 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:17: 608:43 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).43), kind: Binary(Spanned { node: Shl, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:49: 608:51 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).44), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:47: 608:48 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:47: 608:48 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).45), kind: Binary(Spanned { node: Rem, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:56: 608:57 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).46), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:53: 608:55 (#0), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).29)), segments: [PathSegment { ident: fd#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).47), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).29)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:53: 608:55 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).48), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:58: 608:62 (#0), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).21)), segments: [PathSegment { ident: bits#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).49), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).21)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:58: 608:62 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:52: 608:63 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:46: 608:64 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:16: 608:65 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).50), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:69: 608:70 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:69: 608:70 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).33), kind: Index(Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).34), kind: Field(Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).35), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).36), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:19: 608:22 (#0), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).4)), segments: [PathSegment { ident: set#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).37), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:19: 608:22 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:17: 608:23 (#0) }, fds_bits#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:17: 608:32 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).38), kind: Binary(Spanned { node: Div, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:36: 608:37 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:33: 608:35 (#0), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).29)), segments: [PathSegment { ident: fd#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).40), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).29)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:33: 608:35 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).41), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:38: 608:42 (#0), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).21)), segments: [PathSegment { ident: bits#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).42), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).21)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:38: 608:42 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:33: 608:42 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:32: 608:43 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:17: 608:43 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).43), kind: Binary(Spanned { node: Shl, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:49: 608:51 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).44), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:47: 608:48 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:47: 608:48 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).45), kind: Binary(Spanned { node: Rem, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:56: 608:57 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).46), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:53: 608:55 (#0), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).29)), segments: [PathSegment { ident: fd#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).47), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).29)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:53: 608:55 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).48), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:58: 608:62 (#0), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).21)), segments: [PathSegment { ident: bits#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).49), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).21)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:58: 608:62 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:52: 608:63 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:46: 608:64 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).44), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:47: 608:48 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:47: 608:48 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).45), kind: Binary(Spanned { node: Rem, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:56: 608:57 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).46), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:53: 608:55 (#0), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).29)), segments: [PathSegment { ident: fd#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).47), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).29)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:53: 608:55 (#0) }, Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).48), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:58: 608:62 (#0), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).21)), segments: [PathSegment { ident: bits#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).49), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).21)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:58: 608:62 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:52: 608:63 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).46), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:53: 608:55 (#0), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).29)), segments: [PathSegment { ident: fd#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).47), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).29)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:53: 608:55 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).48), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:58: 608:62 (#0), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).21)), segments: [PathSegment { ident: bits#0, hir_id: HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).49), res: Local(HirId(DefId(0:1214 ~ libc[a291]::unix::bsd::FD_ISSET).21)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:608:58: 608:62 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).7), kind: Call(Expr { hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:612:20: 612:38 (#0), res: Def(Fn, DefId(1:2160 ~ core[7d5a]::mem::size_of_val)), segments: [PathSegment { ident: {{root}}#0, hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).9), res: Err, args: None, infer_args: true }, PathSegment { ident: mem#0, hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).10), res: Def(Mod, DefId(1:1995 ~ core[7d5a]::mem)), args: None, infer_args: true }, PathSegment { ident: size_of_val#0, hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).11), res: Def(Fn, DefId(1:2160 ~ core[7d5a]::mem::size_of_val)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:612:20: 612:38 (#0) }, [Expr { hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).12), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).13), kind: Index(Expr { hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).14), kind: Field(Expr { hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).15), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:612:42: 612:45 (#0), res: Local(HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).4)), segments: [PathSegment { ident: set#0, hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).17), res: Local(HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:612:42: 612:45 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:612:40: 612:46 (#0) }, fds_bits#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:612:40: 612:55 (#0) }, Expr { hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).18), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:612:56: 612:57 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:612:56: 612:57 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:612:55: 612:58 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:612:40: 612:58 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:612:39: 612:58 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:612:20: 612:59 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).19), kind: Lit(Spanned { node: Int(Pu128(8), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:612:62: 612:63 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:612:62: 612:63 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:2160 ~ core[7d5a]::mem::size_of_val)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"libc"}), Specific({"libc"})), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).42), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:614:39: 614:40 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:614:39: 614:40 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).43), kind: Binary(Spanned { node: Rem, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:614:48: 614:49 (#0) }, Expr { hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).44), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:614:45: 614:47 (#0), res: Local(HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).29)), segments: [PathSegment { ident: fd#0, hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).45), res: Local(HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).29)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:614:45: 614:47 (#0) }, Expr { hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).46), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:614:50: 614:54 (#0), res: Local(HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).21)), segments: [PathSegment { ident: bits#0, hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).47), res: Local(HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).21)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:614:50: 614:54 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:614:44: 614:55 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).44), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:614:45: 614:47 (#0), res: Local(HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).29)), segments: [PathSegment { ident: fd#0, hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).45), res: Local(HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).29)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:614:45: 614:47 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).46), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:614:50: 614:54 (#0), res: Local(HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).21)), segments: [PathSegment { ident: bits#0, hir_id: HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).47), res: Local(HirId(DefId(0:1215 ~ libc[a291]::unix::bsd::FD_SET).21)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:614:50: 614:54 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1216 ~ libc[a291]::unix::bsd::FD_ZERO)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13288 ~ core[7d5a]::slice::{impl#0}::iter_mut)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1217 ~ libc[a291]::unix::bsd::WTERMSIG)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1217 ~ libc[a291]::unix::bsd::WTERMSIG).4), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:627:9: 627:15 (#0), res: Local(HirId(DefId(0:1217 ~ libc[a291]::unix::bsd::WTERMSIG).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:1217 ~ libc[a291]::unix::bsd::WTERMSIG).5), res: Local(HirId(DefId(0:1217 ~ libc[a291]::unix::bsd::WTERMSIG).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:627:9: 627:15 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1217 ~ libc[a291]::unix::bsd::WTERMSIG).6), kind: Lit(Spanned { node: Int(Pu128(127), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:627:18: 627:23 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:627:18: 627:23 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1218 ~ libc[a291]::unix::bsd::WIFEXITED)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1218 ~ libc[a291]::unix::bsd::WIFEXITED).4), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:631:17: 631:18 (#0) }, Expr { hir_id: HirId(DefId(0:1218 ~ libc[a291]::unix::bsd::WIFEXITED).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:631:10: 631:16 (#0), res: Local(HirId(DefId(0:1218 ~ libc[a291]::unix::bsd::WIFEXITED).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:1218 ~ libc[a291]::unix::bsd::WIFEXITED).6), res: Local(HirId(DefId(0:1218 ~ libc[a291]::unix::bsd::WIFEXITED).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:631:10: 631:16 (#0) }, Expr { hir_id: HirId(DefId(0:1218 ~ libc[a291]::unix::bsd::WIFEXITED).7), kind: Lit(Spanned { node: Int(Pu128(127), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:631:19: 631:24 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:631:19: 631:24 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:631:9: 631:25 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1218 ~ libc[a291]::unix::bsd::WIFEXITED).8), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:631:29: 631:30 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:631:29: 631:30 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1218 ~ libc[a291]::unix::bsd::WIFEXITED).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:631:10: 631:16 (#0), res: Local(HirId(DefId(0:1218 ~ libc[a291]::unix::bsd::WIFEXITED).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:1218 ~ libc[a291]::unix::bsd::WIFEXITED).6), res: Local(HirId(DefId(0:1218 ~ libc[a291]::unix::bsd::WIFEXITED).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:631:10: 631:16 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1218 ~ libc[a291]::unix::bsd::WIFEXITED).7), kind: Lit(Spanned { node: Int(Pu128(127), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:631:19: 631:24 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:631:19: 631:24 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1219 ~ libc[a291]::unix::bsd::WEXITSTATUS)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1219 ~ libc[a291]::unix::bsd::WEXITSTATUS).4), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:635:9: 635:15 (#0), res: Local(HirId(DefId(0:1219 ~ libc[a291]::unix::bsd::WEXITSTATUS).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:1219 ~ libc[a291]::unix::bsd::WEXITSTATUS).5), res: Local(HirId(DefId(0:1219 ~ libc[a291]::unix::bsd::WEXITSTATUS).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:635:9: 635:15 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1219 ~ libc[a291]::unix::bsd::WEXITSTATUS).6), kind: Lit(Spanned { node: Int(Pu128(8), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:635:19: 635:20 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:635:19: 635:20 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1220 ~ libc[a291]::unix::bsd::WCOREDUMP)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1220 ~ libc[a291]::unix::bsd::WCOREDUMP).4), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:639:17: 639:18 (#0) }, Expr { hir_id: HirId(DefId(0:1220 ~ libc[a291]::unix::bsd::WCOREDUMP).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:639:10: 639:16 (#0), res: Local(HirId(DefId(0:1220 ~ libc[a291]::unix::bsd::WCOREDUMP).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:1220 ~ libc[a291]::unix::bsd::WCOREDUMP).6), res: Local(HirId(DefId(0:1220 ~ libc[a291]::unix::bsd::WCOREDUMP).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:639:10: 639:16 (#0) }, Expr { hir_id: HirId(DefId(0:1220 ~ libc[a291]::unix::bsd::WCOREDUMP).7), kind: Lit(Spanned { node: Int(Pu128(128), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:639:19: 639:24 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:639:19: 639:24 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:639:9: 639:25 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1220 ~ libc[a291]::unix::bsd::WCOREDUMP).8), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:639:29: 639:30 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:639:29: 639:30 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1220 ~ libc[a291]::unix::bsd::WCOREDUMP).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:639:10: 639:16 (#0), res: Local(HirId(DefId(0:1220 ~ libc[a291]::unix::bsd::WCOREDUMP).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:1220 ~ libc[a291]::unix::bsd::WCOREDUMP).6), res: Local(HirId(DefId(0:1220 ~ libc[a291]::unix::bsd::WCOREDUMP).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:639:10: 639:16 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1220 ~ libc[a291]::unix::bsd::WCOREDUMP).7), kind: Lit(Spanned { node: Int(Pu128(128), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:639:19: 639:24 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:639:19: 639:24 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).6), kind: Binary(Spanned { node: Shl, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:14: 643:16 (#0) }, Expr { hir_id: HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:10: 643:13 (#0), res: Local(HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).2)), segments: [PathSegment { ident: cmd#0, hir_id: HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).8), res: Local(HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:10: 643:13 (#0) }, Expr { hir_id: HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).9), kind: Lit(Spanned { node: Int(Pu128(8), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:17: 643:18 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:17: 643:18 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:9: 643:19 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).10), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:29: 643:30 (#0) }, Expr { hir_id: HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:23: 643:28 (#0), res: Local(HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).4)), segments: [PathSegment { ident: type_#0, hir_id: HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).12), res: Local(HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:23: 643:28 (#0) }, Expr { hir_id: HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).13), kind: Lit(Spanned { node: Int(Pu128(255), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:31: 643:37 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:31: 643:37 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:22: 643:38 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:10: 643:13 (#0), res: Local(HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).2)), segments: [PathSegment { ident: cmd#0, hir_id: HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).8), res: Local(HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:10: 643:13 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).9), kind: Lit(Spanned { node: Int(Pu128(8), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:17: 643:18 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:17: 643:18 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:23: 643:28 (#0), res: Local(HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).4)), segments: [PathSegment { ident: type_#0, hir_id: HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).12), res: Local(HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:23: 643:28 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1221 ~ libc[a291]::unix::bsd::QCMD).13), kind: Lit(Spanned { node: Int(Pu128(255), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:31: 643:37 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/mod.rs:643:31: 643:37 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1361 ~ libc[a291]::unix::bsd::apple::{impl#1}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1383 ~ libc[a291]::unix::bsd::apple::{impl#3}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1459 ~ libc[a291]::unix::bsd::apple::{impl#5}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1478 ~ libc[a291]::unix::bsd::apple::{impl#7}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3699 ~ libc[a291]::unix::bsd::apple::{impl#10}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3705 ~ libc[a291]::unix::bsd::apple::{impl#12}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3712 ~ libc[a291]::unix::bsd::apple::{impl#14}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3719 ~ libc[a291]::unix::bsd::apple::{impl#16}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3730 ~ libc[a291]::unix::bsd::apple::{impl#18}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3745 ~ libc[a291]::unix::bsd::apple::{impl#20}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3757 ~ libc[a291]::unix::bsd::apple::{impl#22}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3763 ~ libc[a291]::unix::bsd::apple::{impl#24}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3790 ~ libc[a291]::unix::bsd::apple::{impl#26}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3797 ~ libc[a291]::unix::bsd::apple::{impl#28}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3804 ~ libc[a291]::unix::bsd::apple::{impl#30}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3811 ~ libc[a291]::unix::bsd::apple::{impl#32}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3824 ~ libc[a291]::unix::bsd::apple::{impl#34}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3831 ~ libc[a291]::unix::bsd::apple::{impl#36}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3838 ~ libc[a291]::unix::bsd::apple::{impl#38}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3847 ~ libc[a291]::unix::bsd::apple::{impl#40}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3855 ~ libc[a291]::unix::bsd::apple::{impl#42}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3861 ~ libc[a291]::unix::bsd::apple::{impl#44}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3869 ~ libc[a291]::unix::bsd::apple::{impl#46}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3875 ~ libc[a291]::unix::bsd::apple::{impl#48}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3890 ~ libc[a291]::unix::bsd::apple::{impl#50}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3898 ~ libc[a291]::unix::bsd::apple::{impl#52}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3908 ~ libc[a291]::unix::bsd::apple::{impl#54}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3920 ~ libc[a291]::unix::bsd::apple::{impl#56}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3935 ~ libc[a291]::unix::bsd::apple::{impl#58}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3946 ~ libc[a291]::unix::bsd::apple::{impl#60}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3957 ~ libc[a291]::unix::bsd::apple::{impl#62}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3967 ~ libc[a291]::unix::bsd::apple::{impl#64}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3978 ~ libc[a291]::unix::bsd::apple::{impl#66}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3995 ~ libc[a291]::unix::bsd::apple::{impl#68}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4011 ~ libc[a291]::unix::bsd::apple::{impl#70}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4027 ~ libc[a291]::unix::bsd::apple::{impl#72}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4039 ~ libc[a291]::unix::bsd::apple::{impl#74}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4048 ~ libc[a291]::unix::bsd::apple::{impl#76}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4056 ~ libc[a291]::unix::bsd::apple::{impl#78}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4084 ~ libc[a291]::unix::bsd::apple::{impl#80}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4106 ~ libc[a291]::unix::bsd::apple::{impl#82}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4134 ~ libc[a291]::unix::bsd::apple::{impl#84}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4140 ~ libc[a291]::unix::bsd::apple::{impl#86}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4149 ~ libc[a291]::unix::bsd::apple::{impl#88}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4158 ~ libc[a291]::unix::bsd::apple::{impl#90}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4169 ~ libc[a291]::unix::bsd::apple::{impl#92}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4181 ~ libc[a291]::unix::bsd::apple::{impl#94}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4197 ~ libc[a291]::unix::bsd::apple::{impl#96}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4213 ~ libc[a291]::unix::bsd::apple::{impl#98}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4219 ~ libc[a291]::unix::bsd::apple::{impl#100}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4232 ~ libc[a291]::unix::bsd::apple::{impl#102}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4243 ~ libc[a291]::unix::bsd::apple::{impl#104}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4254 ~ libc[a291]::unix::bsd::apple::{impl#106}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4261 ~ libc[a291]::unix::bsd::apple::{impl#108}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4267 ~ libc[a291]::unix::bsd::apple::{impl#110}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4278 ~ libc[a291]::unix::bsd::apple::{impl#112}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4285 ~ libc[a291]::unix::bsd::apple::{impl#114}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4294 ~ libc[a291]::unix::bsd::apple::{impl#116}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4299 ~ libc[a291]::unix::bsd::apple::{impl#118}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4307 ~ libc[a291]::unix::bsd::apple::{impl#120}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4316 ~ libc[a291]::unix::bsd::apple::{impl#122}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4337 ~ libc[a291]::unix::bsd::apple::{impl#124}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4346 ~ libc[a291]::unix::bsd::apple::{impl#126}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4351 ~ libc[a291]::unix::bsd::apple::{impl#128}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4356 ~ libc[a291]::unix::bsd::apple::{impl#130}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4364 ~ libc[a291]::unix::bsd::apple::{impl#132}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4369 ~ libc[a291]::unix::bsd::apple::{impl#134}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4374 ~ libc[a291]::unix::bsd::apple::{impl#136}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4379 ~ libc[a291]::unix::bsd::apple::{impl#138}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4384 ~ libc[a291]::unix::bsd::apple::{impl#140}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4389 ~ libc[a291]::unix::bsd::apple::{impl#142}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4397 ~ libc[a291]::unix::bsd::apple::{impl#144}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4406 ~ libc[a291]::unix::bsd::apple::{impl#146}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4412 ~ libc[a291]::unix::bsd::apple::{impl#148}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4419 ~ libc[a291]::unix::bsd::apple::{impl#150}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4445 ~ libc[a291]::unix::bsd::apple::{impl#152}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4453 ~ libc[a291]::unix::bsd::apple::{impl#154}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4461 ~ libc[a291]::unix::bsd::apple::{impl#156}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4467 ~ libc[a291]::unix::bsd::apple::{impl#158}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4486 ~ libc[a291]::unix::bsd::apple::{impl#160}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4492 ~ libc[a291]::unix::bsd::apple::{impl#162}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4508 ~ libc[a291]::unix::bsd::apple::{impl#164}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4530 ~ libc[a291]::unix::bsd::apple::{impl#166}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4554 ~ libc[a291]::unix::bsd::apple::{impl#168}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4587 ~ libc[a291]::unix::bsd::apple::{impl#170}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4628 ~ libc[a291]::unix::bsd::apple::{impl#172}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4634 ~ libc[a291]::unix::bsd::apple::{impl#174}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4645 ~ libc[a291]::unix::bsd::apple::{impl#176}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4651 ~ libc[a291]::unix::bsd::apple::{impl#178}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4657 ~ libc[a291]::unix::bsd::apple::{impl#180}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4666 ~ libc[a291]::unix::bsd::apple::{impl#182}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4672 ~ libc[a291]::unix::bsd::apple::{impl#184}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4678 ~ libc[a291]::unix::bsd::apple::{impl#186}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4721 ~ libc[a291]::unix::bsd::apple::{impl#188}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4731 ~ libc[a291]::unix::bsd::apple::{impl#190}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4744 ~ libc[a291]::unix::bsd::apple::{impl#192}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4757 ~ libc[a291]::unix::bsd::apple::{impl#194}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4773 ~ libc[a291]::unix::bsd::apple::{impl#196}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4798 ~ libc[a291]::unix::bsd::apple::{impl#198}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4809 ~ libc[a291]::unix::bsd::apple::{impl#200}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4816 ~ libc[a291]::unix::bsd::apple::{impl#202}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4823 ~ libc[a291]::unix::bsd::apple::{impl#204}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4830 ~ libc[a291]::unix::bsd::apple::{impl#206}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4841 ~ libc[a291]::unix::bsd::apple::{impl#208}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4858 ~ libc[a291]::unix::bsd::apple::{impl#210}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4867 ~ libc[a291]::unix::bsd::apple::{impl#212}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4873 ~ libc[a291]::unix::bsd::apple::{impl#214}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4882 ~ libc[a291]::unix::bsd::apple::{impl#216}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4888 ~ libc[a291]::unix::bsd::apple::{impl#218}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4896 ~ libc[a291]::unix::bsd::apple::{impl#220}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4902 ~ libc[a291]::unix::bsd::apple::{impl#222}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4914 ~ libc[a291]::unix::bsd::apple::{impl#224}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4921 ~ libc[a291]::unix::bsd::apple::{impl#226}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4937 ~ libc[a291]::unix::bsd::apple::{impl#228}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4966 ~ libc[a291]::unix::bsd::apple::{impl#230}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:4981 ~ libc[a291]::unix::bsd::apple::{impl#232}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5009 ~ libc[a291]::unix::bsd::apple::{impl#234}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5020 ~ libc[a291]::unix::bsd::apple::{impl#236}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5027 ~ libc[a291]::unix::bsd::apple::{impl#238}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5032 ~ libc[a291]::unix::bsd::apple::{impl#240}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5041 ~ libc[a291]::unix::bsd::apple::{impl#242}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5048 ~ libc[a291]::unix::bsd::apple::{impl#244}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5054 ~ libc[a291]::unix::bsd::apple::{impl#246}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5061 ~ libc[a291]::unix::bsd::apple::{impl#248}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5082 ~ libc[a291]::unix::bsd::apple::{impl#250}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5089 ~ libc[a291]::unix::bsd::apple::{impl#252}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1480 ~ libc[a291]::unix::bsd::apple::{impl#8}::si_addr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1481 ~ libc[a291]::unix::bsd::apple::{impl#8}::si_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1491 ~ libc[a291]::unix::bsd::apple::{impl#8}::si_pid)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1492 ~ libc[a291]::unix::bsd::apple::{impl#8}::si_uid)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1493 ~ libc[a291]::unix::bsd::apple::{impl#8}::si_status)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5095 ~ libc[a291]::unix::bsd::apple::{impl#254}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32).5), kind: Binary(Spanned { node: Add, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5474:15: 5474:16 (#0) }, Expr { hir_id: HirId(DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5474:13: 5474:14 (#0), res: Local(HirId(DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32).2)), segments: [PathSegment { ident: p#0, hir_id: HirId(DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32).7), res: Local(HirId(DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5474:13: 5474:14 (#0) }, Expr { hir_id: HirId(DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5474:17: 5474:38 (#0), res: Def(Const, DefId(0:5189 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32::__DARWIN_ALIGNBYTES32)), segments: [PathSegment { ident: __DARWIN_ALIGNBYTES32#0, hir_id: HirId(DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32).9), res: Def(Const, DefId(0:5189 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32::__DARWIN_ALIGNBYTES32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5474:17: 5474:38 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5474:13: 5474:38 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32).10), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5474:42: 5474:63 (#0), res: Def(Const, DefId(0:5189 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32::__DARWIN_ALIGNBYTES32)), segments: [PathSegment { ident: __DARWIN_ALIGNBYTES32#0, hir_id: HirId(DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32).12), res: Def(Const, DefId(0:5189 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32::__DARWIN_ALIGNBYTES32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5474:42: 5474:63 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5474:41: 5474:63 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5474:13: 5474:14 (#0), res: Local(HirId(DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32).2)), segments: [PathSegment { ident: p#0, hir_id: HirId(DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32).7), res: Local(HirId(DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5474:13: 5474:14 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5474:17: 5474:38 (#0), res: Def(Const, DefId(0:5189 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32::__DARWIN_ALIGNBYTES32)), segments: [PathSegment { ident: __DARWIN_ALIGNBYTES32#0, hir_id: HirId(DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32).9), res: Def(Const, DefId(0:5189 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32::__DARWIN_ALIGNBYTES32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5474:17: 5474:38 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2557 ~ core[7d5a]::ptr::const_ptr::{impl#0}::is_null)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1212 ~ libc[a291]::unix::bsd::CMSG_FIRSTHDR)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).34), kind: Cast(Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).35), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5554:20: 5554:24 (#0), res: Local(HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).4)), segments: [PathSegment { ident: cmsg#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).36), res: Local(HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5554:20: 5554:24 (#0) }, Ty { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).37), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5554:28: 5554:33 (#0), res: PrimTy(Uint(Usize)), segments: [PathSegment { ident: usize#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).38), res: PrimTy(Uint(Usize)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5554:28: 5554:33 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5554:20: 5554:33 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).39), kind: Call(Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).40), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5554:36: 5554:52 (#0), res: Def(Fn, DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)), segments: [PathSegment { ident: __DARWIN_ALIGN32#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).41), res: Def(Fn, DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5554:36: 5554:52 (#0) }, [Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).42), kind: Cast(Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).43), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5554:53: 5554:61 (#0), res: Local(HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).31)), segments: [PathSegment { ident: cmsg_len#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).44), res: Local(HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).31)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5554:53: 5554:61 (#0) }, Ty { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).45), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5554:65: 5554:70 (#0), res: PrimTy(Uint(Usize)), segments: [PathSegment { ident: usize#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).46), res: PrimTy(Uint(Usize)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5554:65: 5554:70 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5554:53: 5554:70 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5554:36: 5554:71 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).51), kind: Cast(Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).52), kind: Field(Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).53), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).54), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5555:21: 5555:25 (#0), res: Local(HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).2)), segments: [PathSegment { ident: mhdr#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).55), res: Local(HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5555:21: 5555:25 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5555:19: 5555:26 (#0) }, msg_control#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5555:19: 5555:38 (#0) }, Ty { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).56), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5555:42: 5555:47 (#0), res: PrimTy(Uint(Usize)), segments: [PathSegment { ident: usize#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).57), res: PrimTy(Uint(Usize)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5555:42: 5555:47 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5555:19: 5555:47 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).58), kind: Cast(Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).59), kind: Field(Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).60), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).61), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5556:25: 5556:29 (#0), res: Local(HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).2)), segments: [PathSegment { ident: mhdr#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).62), res: Local(HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5556:25: 5556:29 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5556:23: 5556:30 (#0) }, msg_controllen#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5556:23: 5556:45 (#0) }, Ty { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).63), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5556:49: 5556:54 (#0), res: PrimTy(Uint(Usize)), segments: [PathSegment { ident: usize#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).64), res: PrimTy(Uint(Usize)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5556:49: 5556:54 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5556:23: 5556:54 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).69), kind: Binary(Spanned { node: Add, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:17: 5557:18 (#0) }, Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).70), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:12: 5557:16 (#0), res: Local(HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).48)), segments: [PathSegment { ident: next#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).71), res: Local(HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).48)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:12: 5557:16 (#0) }, Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).72), kind: Call(Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).73), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:19: 5557:35 (#0), res: Def(Fn, DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)), segments: [PathSegment { ident: __DARWIN_ALIGN32#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).74), res: Def(Fn, DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:19: 5557:35 (#0) }, [Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).75), kind: Call(Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).76), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:36: 5557:63 (#0), res: Def(Fn, DefId(1:2158 ~ core[7d5a]::mem::size_of)), segments: [PathSegment { ident: {{root}}#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).77), res: Err, args: None, infer_args: true }, PathSegment { ident: mem#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).78), res: Def(Mod, DefId(1:1995 ~ core[7d5a]::mem)), args: None, infer_args: true }, PathSegment { ident: size_of#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).82), res: Def(Fn, DefId(1:2158 ~ core[7d5a]::mem::size_of)), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).79), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:53: 5557:62 (#0), res: Def(Struct, DefId(0:1152 ~ libc[a291]::unix::bsd::cmsghdr)), segments: [PathSegment { ident: {{root}}#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).80), res: Err, args: None, infer_args: false }, PathSegment { ident: cmsghdr#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).81), res: Def(Struct, DefId(0:1152 ~ libc[a291]::unix::bsd::cmsghdr)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:53: 5557:62 (#0) })], constraints: [], parenthesized: No, span_ext: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:52: 5557:63 (#0) }), infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:36: 5557:63 (#0) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:36: 5557:65 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:19: 5557:66 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:12: 5557:66 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).83), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:69: 5557:72 (#0), res: Local(HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).66)), segments: [PathSegment { ident: max#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).84), res: Local(HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).66)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:69: 5557:72 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).70), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:12: 5557:16 (#0), res: Local(HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).48)), segments: [PathSegment { ident: next#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).71), res: Local(HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).48)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:12: 5557:16 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).72), kind: Call(Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).73), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:19: 5557:35 (#0), res: Def(Fn, DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)), segments: [PathSegment { ident: __DARWIN_ALIGN32#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).74), res: Def(Fn, DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:19: 5557:35 (#0) }, [Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).75), kind: Call(Expr { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).76), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:36: 5557:63 (#0), res: Def(Fn, DefId(1:2158 ~ core[7d5a]::mem::size_of)), segments: [PathSegment { ident: {{root}}#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).77), res: Err, args: None, infer_args: true }, PathSegment { ident: mem#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).78), res: Def(Mod, DefId(1:1995 ~ core[7d5a]::mem)), args: None, infer_args: true }, PathSegment { ident: size_of#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).82), res: Def(Fn, DefId(1:2158 ~ core[7d5a]::mem::size_of)), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).79), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:53: 5557:62 (#0), res: Def(Struct, DefId(0:1152 ~ libc[a291]::unix::bsd::cmsghdr)), segments: [PathSegment { ident: {{root}}#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).80), res: Err, args: None, infer_args: false }, PathSegment { ident: cmsghdr#0, hir_id: HirId(DefId(0:5203 ~ libc[a291]::unix::bsd::apple::CMSG_NXTHDR).81), res: Def(Struct, DefId(0:1152 ~ libc[a291]::unix::bsd::cmsghdr)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:53: 5557:62 (#0) })], constraints: [], parenthesized: No, span_ext: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:52: 5557:63 (#0) }), infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:36: 5557:63 (#0) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:36: 5557:65 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5557:19: 5557:66 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2158 ~ core[7d5a]::mem::size_of)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:5204 ~ libc[a291]::unix::bsd::apple::CMSG_DATA)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2672 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::offset)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2158 ~ core[7d5a]::mem::size_of)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).5), kind: Call(Expr { hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5570:10: 5570:26 (#0), res: Def(Fn, DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)), segments: [PathSegment { ident: __DARWIN_ALIGN32#0, hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).7), res: Def(Fn, DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5570:10: 5570:26 (#0) }, [Expr { hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).8), kind: Call(Expr { hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5570:27: 5570:54 (#0), res: Def(Fn, DefId(1:2158 ~ core[7d5a]::mem::size_of)), segments: [PathSegment { ident: {{root}}#0, hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).10), res: Err, args: None, infer_args: true }, PathSegment { ident: mem#0, hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).11), res: Def(Mod, DefId(1:1995 ~ core[7d5a]::mem)), args: None, infer_args: true }, PathSegment { ident: size_of#0, hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).15), res: Def(Fn, DefId(1:2158 ~ core[7d5a]::mem::size_of)), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5570:44: 5570:53 (#0), res: Def(Struct, DefId(0:1152 ~ libc[a291]::unix::bsd::cmsghdr)), segments: [PathSegment { ident: {{root}}#0, hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).13), res: Err, args: None, infer_args: false }, PathSegment { ident: cmsghdr#0, hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).14), res: Def(Struct, DefId(0:1152 ~ libc[a291]::unix::bsd::cmsghdr)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5570:44: 5570:53 (#0) })], constraints: [], parenthesized: No, span_ext: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5570:43: 5570:54 (#0) }), infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5570:27: 5570:54 (#0) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5570:27: 5570:56 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5570:10: 5570:57 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).16), kind: Call(Expr { hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).17), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5571:15: 5571:31 (#0), res: Def(Fn, DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)), segments: [PathSegment { ident: __DARWIN_ALIGN32#0, hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).18), res: Def(Fn, DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5571:15: 5571:31 (#0) }, [Expr { hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).19), kind: Cast(Expr { hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5571:32: 5571:38 (#0), res: Local(HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).2)), segments: [PathSegment { ident: length#0, hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).21), res: Local(HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5571:32: 5571:38 (#0) }, Ty { hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5571:42: 5571:47 (#0), res: PrimTy(Uint(Usize)), segments: [PathSegment { ident: usize#0, hir_id: HirId(DefId(0:5205 ~ libc[a291]::unix::bsd::apple::CMSG_SPACE).23), res: PrimTy(Uint(Usize)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5571:42: 5571:47 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5571:32: 5571:47 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5571:15: 5571:48 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2158 ~ core[7d5a]::mem::size_of)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).5), kind: Call(Expr { hir_id: HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5576:10: 5576:26 (#0), res: Def(Fn, DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)), segments: [PathSegment { ident: __DARWIN_ALIGN32#0, hir_id: HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).7), res: Def(Fn, DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5576:10: 5576:26 (#0) }, [Expr { hir_id: HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).8), kind: Call(Expr { hir_id: HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5576:27: 5576:54 (#0), res: Def(Fn, DefId(1:2158 ~ core[7d5a]::mem::size_of)), segments: [PathSegment { ident: {{root}}#0, hir_id: HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).10), res: Err, args: None, infer_args: true }, PathSegment { ident: mem#0, hir_id: HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).11), res: Def(Mod, DefId(1:1995 ~ core[7d5a]::mem)), args: None, infer_args: true }, PathSegment { ident: size_of#0, hir_id: HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).15), res: Def(Fn, DefId(1:2158 ~ core[7d5a]::mem::size_of)), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5576:44: 5576:53 (#0), res: Def(Struct, DefId(0:1152 ~ libc[a291]::unix::bsd::cmsghdr)), segments: [PathSegment { ident: {{root}}#0, hir_id: HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).13), res: Err, args: None, infer_args: false }, PathSegment { ident: cmsghdr#0, hir_id: HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).14), res: Def(Struct, DefId(0:1152 ~ libc[a291]::unix::bsd::cmsghdr)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5576:44: 5576:53 (#0) })], constraints: [], parenthesized: No, span_ext: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5576:43: 5576:54 (#0) }), infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5576:27: 5576:54 (#0) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5576:27: 5576:56 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5576:10: 5576:57 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).16), kind: Cast(Expr { hir_id: HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).17), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5576:60: 5576:66 (#0), res: Local(HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).2)), segments: [PathSegment { ident: length#0, hir_id: HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).18), res: Local(HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5576:60: 5576:66 (#0) }, Ty { hir_id: HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).19), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5576:70: 5576:75 (#0), res: PrimTy(Uint(Usize)), segments: [PathSegment { ident: usize#0, hir_id: HirId(DefId(0:5206 ~ libc[a291]::unix::bsd::apple::CMSG_LEN).20), res: PrimTy(Uint(Usize)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5576:70: 5576:75 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5576:60: 5576:75 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:5188 ~ libc[a291]::unix::bsd::apple::__DARWIN_ALIGN32)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2158 ~ core[7d5a]::mem::size_of)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:5207 ~ libc[a291]::unix::bsd::apple::VM_MAKE_TAG)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5207 ~ libc[a291]::unix::bsd::apple::VM_MAKE_TAG).4), kind: Cast(Expr { hir_id: HirId(DefId(0:5207 ~ libc[a291]::unix::bsd::apple::VM_MAKE_TAG).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5581:10: 5581:12 (#0), res: Local(HirId(DefId(0:5207 ~ libc[a291]::unix::bsd::apple::VM_MAKE_TAG).2)), segments: [PathSegment { ident: id#0, hir_id: HirId(DefId(0:5207 ~ libc[a291]::unix::bsd::apple::VM_MAKE_TAG).6), res: Local(HirId(DefId(0:5207 ~ libc[a291]::unix::bsd::apple::VM_MAKE_TAG).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5581:10: 5581:12 (#0) }, Ty { hir_id: HirId(DefId(0:5207 ~ libc[a291]::unix::bsd::apple::VM_MAKE_TAG).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5581:16: 5581:19 (#0), res: PrimTy(Uint(U32)), segments: [PathSegment { ident: u32#0, hir_id: HirId(DefId(0:5207 ~ libc[a291]::unix::bsd::apple::VM_MAKE_TAG).8), res: PrimTy(Uint(U32)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5581:16: 5581:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5581:9: 5581:20 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5207 ~ libc[a291]::unix::bsd::apple::VM_MAKE_TAG).9), kind: Lit(Spanned { node: Int(Pu128(24), Unsigned(U32)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5581:24: 5581:29 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5581:24: 5581:29 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:5208 ~ libc[a291]::unix::bsd::apple::major)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5208 ~ libc[a291]::unix::bsd::apple::major).4), kind: Binary(Spanned { node: Shr, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5585:14: 5585:16 (#0) }, Expr { hir_id: HirId(DefId(0:5208 ~ libc[a291]::unix::bsd::apple::major).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5585:10: 5585:13 (#0), res: Local(HirId(DefId(0:5208 ~ libc[a291]::unix::bsd::apple::major).2)), segments: [PathSegment { ident: dev#0, hir_id: HirId(DefId(0:5208 ~ libc[a291]::unix::bsd::apple::major).6), res: Local(HirId(DefId(0:5208 ~ libc[a291]::unix::bsd::apple::major).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5585:10: 5585:13 (#0) }, Expr { hir_id: HirId(DefId(0:5208 ~ libc[a291]::unix::bsd::apple::major).7), kind: Lit(Spanned { node: Int(Pu128(24), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5585:17: 5585:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5585:17: 5585:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5585:9: 5585:20 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5208 ~ libc[a291]::unix::bsd::apple::major).8), kind: Lit(Spanned { node: Int(Pu128(255), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5585:23: 5585:27 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5585:23: 5585:27 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5208 ~ libc[a291]::unix::bsd::apple::major).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5585:10: 5585:13 (#0), res: Local(HirId(DefId(0:5208 ~ libc[a291]::unix::bsd::apple::major).2)), segments: [PathSegment { ident: dev#0, hir_id: HirId(DefId(0:5208 ~ libc[a291]::unix::bsd::apple::major).6), res: Local(HirId(DefId(0:5208 ~ libc[a291]::unix::bsd::apple::major).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5585:10: 5585:13 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5208 ~ libc[a291]::unix::bsd::apple::major).7), kind: Lit(Spanned { node: Int(Pu128(24), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5585:17: 5585:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5585:17: 5585:19 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:5209 ~ libc[a291]::unix::bsd::apple::minor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5209 ~ libc[a291]::unix::bsd::apple::minor).4), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5589:9: 5589:12 (#0), res: Local(HirId(DefId(0:5209 ~ libc[a291]::unix::bsd::apple::minor).2)), segments: [PathSegment { ident: dev#0, hir_id: HirId(DefId(0:5209 ~ libc[a291]::unix::bsd::apple::minor).5), res: Local(HirId(DefId(0:5209 ~ libc[a291]::unix::bsd::apple::minor).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5589:9: 5589:12 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5209 ~ libc[a291]::unix::bsd::apple::minor).6), kind: Lit(Spanned { node: Int(Pu128(16777215), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5589:15: 5589:23 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5589:15: 5589:23 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:5210 ~ libc[a291]::unix::bsd::apple::makedev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5210 ~ libc[a291]::unix::bsd::apple::makedev).6), kind: Binary(Spanned { node: Shl, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5593:16: 5593:18 (#0) }, Expr { hir_id: HirId(DefId(0:5210 ~ libc[a291]::unix::bsd::apple::makedev).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5593:10: 5593:15 (#0), res: Local(HirId(DefId(0:5210 ~ libc[a291]::unix::bsd::apple::makedev).2)), segments: [PathSegment { ident: major#0, hir_id: HirId(DefId(0:5210 ~ libc[a291]::unix::bsd::apple::makedev).8), res: Local(HirId(DefId(0:5210 ~ libc[a291]::unix::bsd::apple::makedev).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5593:10: 5593:15 (#0) }, Expr { hir_id: HirId(DefId(0:5210 ~ libc[a291]::unix::bsd::apple::makedev).9), kind: Lit(Spanned { node: Int(Pu128(24), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5593:19: 5593:21 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5593:19: 5593:21 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5593:9: 5593:22 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5210 ~ libc[a291]::unix::bsd::apple::makedev).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5593:25: 5593:30 (#0), res: Local(HirId(DefId(0:5210 ~ libc[a291]::unix::bsd::apple::makedev).4)), segments: [PathSegment { ident: minor#0, hir_id: HirId(DefId(0:5210 ~ libc[a291]::unix::bsd::apple::makedev).11), res: Local(HirId(DefId(0:5210 ~ libc[a291]::unix::bsd::apple::makedev).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5593:25: 5593:30 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5210 ~ libc[a291]::unix::bsd::apple::makedev).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5593:10: 5593:15 (#0), res: Local(HirId(DefId(0:5210 ~ libc[a291]::unix::bsd::apple::makedev).2)), segments: [PathSegment { ident: major#0, hir_id: HirId(DefId(0:5210 ~ libc[a291]::unix::bsd::apple::makedev).8), res: Local(HirId(DefId(0:5210 ~ libc[a291]::unix::bsd::apple::makedev).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5593:10: 5593:15 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5210 ~ libc[a291]::unix::bsd::apple::makedev).9), kind: Lit(Spanned { node: Int(Pu128(24), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5593:19: 5593:21 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5593:19: 5593:21 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:5211 ~ libc[a291]::unix::bsd::apple::WSTOPSIG)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5211 ~ libc[a291]::unix::bsd::apple::WSTOPSIG).4), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5599:9: 5599:15 (#0), res: Local(HirId(DefId(0:5211 ~ libc[a291]::unix::bsd::apple::WSTOPSIG).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:5211 ~ libc[a291]::unix::bsd::apple::WSTOPSIG).5), res: Local(HirId(DefId(0:5211 ~ libc[a291]::unix::bsd::apple::WSTOPSIG).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5599:9: 5599:15 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5211 ~ libc[a291]::unix::bsd::apple::WSTOPSIG).6), kind: Lit(Spanned { node: Int(Pu128(8), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5599:19: 5599:20 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5599:19: 5599:20 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS).4), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5603:9: 5603:15 (#0), res: Local(HirId(DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS).5), res: Local(HirId(DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5603:9: 5603:15 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS).6), kind: Lit(Spanned { node: Int(Pu128(127), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5603:18: 5603:22 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5603:18: 5603:22 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).4), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:26: 5607:28 (#0) }, Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).5), kind: Call(Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:9: 5607:17 (#0), res: Def(Fn, DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)), segments: [PathSegment { ident: _WSTATUS#0, hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).7), res: Def(Fn, DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:9: 5607:17 (#0) }, [Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:18: 5607:24 (#0), res: Local(HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).9), res: Local(HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:18: 5607:24 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:9: 5607:25 (#0) }, Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:29: 5607:38 (#0), res: Def(Const, DefId(0:2652 ~ libc[a291]::unix::bsd::apple::_WSTOPPED)), segments: [PathSegment { ident: _WSTOPPED#0, hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).11), res: Def(Const, DefId(0:2652 ~ libc[a291]::unix::bsd::apple::_WSTOPPED)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:29: 5607:38 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:9: 5607:38 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).12), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:59: 5607:61 (#0) }, Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).13), kind: Call(Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:42: 5607:50 (#0), res: Def(Fn, DefId(0:5211 ~ libc[a291]::unix::bsd::apple::WSTOPSIG)), segments: [PathSegment { ident: WSTOPSIG#0, hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).15), res: Def(Fn, DefId(0:5211 ~ libc[a291]::unix::bsd::apple::WSTOPSIG)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:42: 5607:50 (#0) }, [Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:51: 5607:57 (#0), res: Local(HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).17), res: Local(HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:51: 5607:57 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:42: 5607:58 (#0) }, Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).18), kind: Lit(Spanned { node: Int(Pu128(19), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:62: 5607:66 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:62: 5607:66 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:42: 5607:66 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).5), kind: Call(Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:9: 5607:17 (#0), res: Def(Fn, DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)), segments: [PathSegment { ident: _WSTATUS#0, hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).7), res: Def(Fn, DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:9: 5607:17 (#0) }, [Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:18: 5607:24 (#0), res: Local(HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).9), res: Local(HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:18: 5607:24 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:9: 5607:25 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:29: 5607:38 (#0), res: Def(Const, DefId(0:2652 ~ libc[a291]::unix::bsd::apple::_WSTOPPED)), segments: [PathSegment { ident: _WSTOPPED#0, hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).11), res: Def(Const, DefId(0:2652 ~ libc[a291]::unix::bsd::apple::_WSTOPPED)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:29: 5607:38 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).13), kind: Call(Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:42: 5607:50 (#0), res: Def(Fn, DefId(0:5211 ~ libc[a291]::unix::bsd::apple::WSTOPSIG)), segments: [PathSegment { ident: WSTOPSIG#0, hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).15), res: Def(Fn, DefId(0:5211 ~ libc[a291]::unix::bsd::apple::WSTOPSIG)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:42: 5607:50 (#0) }, [Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:51: 5607:57 (#0), res: Local(HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).17), res: Local(HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:51: 5607:57 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:42: 5607:58 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5213 ~ libc[a291]::unix::bsd::apple::WIFCONTINUED).18), kind: Lit(Spanned { node: Int(Pu128(19), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:62: 5607:66 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5607:62: 5607:66 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:5211 ~ libc[a291]::unix::bsd::apple::WSTOPSIG)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).4), kind: Binary(Spanned { node: Ne, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:26: 5611:28 (#0) }, Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).5), kind: Call(Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:9: 5611:17 (#0), res: Def(Fn, DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)), segments: [PathSegment { ident: _WSTATUS#0, hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).7), res: Def(Fn, DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:9: 5611:17 (#0) }, [Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:18: 5611:24 (#0), res: Local(HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).9), res: Local(HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:18: 5611:24 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:9: 5611:25 (#0) }, Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:29: 5611:38 (#0), res: Def(Const, DefId(0:2652 ~ libc[a291]::unix::bsd::apple::_WSTOPPED)), segments: [PathSegment { ident: _WSTOPPED#0, hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).11), res: Def(Const, DefId(0:2652 ~ libc[a291]::unix::bsd::apple::_WSTOPPED)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:29: 5611:38 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:9: 5611:38 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).12), kind: Binary(Spanned { node: Ne, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:59: 5611:61 (#0) }, Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).13), kind: Call(Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:42: 5611:50 (#0), res: Def(Fn, DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)), segments: [PathSegment { ident: _WSTATUS#0, hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).15), res: Def(Fn, DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:42: 5611:50 (#0) }, [Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:51: 5611:57 (#0), res: Local(HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).17), res: Local(HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:51: 5611:57 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:42: 5611:58 (#0) }, Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).18), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:62: 5611:63 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:62: 5611:63 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:42: 5611:63 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).5), kind: Call(Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:9: 5611:17 (#0), res: Def(Fn, DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)), segments: [PathSegment { ident: _WSTATUS#0, hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).7), res: Def(Fn, DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:9: 5611:17 (#0) }, [Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:18: 5611:24 (#0), res: Local(HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).9), res: Local(HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:18: 5611:24 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:9: 5611:25 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:29: 5611:38 (#0), res: Def(Const, DefId(0:2652 ~ libc[a291]::unix::bsd::apple::_WSTOPPED)), segments: [PathSegment { ident: _WSTOPPED#0, hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).11), res: Def(Const, DefId(0:2652 ~ libc[a291]::unix::bsd::apple::_WSTOPPED)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:29: 5611:38 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).13), kind: Call(Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:42: 5611:50 (#0), res: Def(Fn, DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)), segments: [PathSegment { ident: _WSTATUS#0, hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).15), res: Def(Fn, DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:42: 5611:50 (#0) }, [Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:51: 5611:57 (#0), res: Local(HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).17), res: Local(HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:51: 5611:57 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:42: 5611:58 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5214 ~ libc[a291]::unix::bsd::apple::WIFSIGNALED).18), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:62: 5611:63 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5611:62: 5611:63 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).4), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:26: 5615:28 (#0) }, Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).5), kind: Call(Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:9: 5615:17 (#0), res: Def(Fn, DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)), segments: [PathSegment { ident: _WSTATUS#0, hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).7), res: Def(Fn, DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:9: 5615:17 (#0) }, [Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:18: 5615:24 (#0), res: Local(HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).9), res: Local(HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:18: 5615:24 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:9: 5615:25 (#0) }, Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:29: 5615:38 (#0), res: Def(Const, DefId(0:2652 ~ libc[a291]::unix::bsd::apple::_WSTOPPED)), segments: [PathSegment { ident: _WSTOPPED#0, hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).11), res: Def(Const, DefId(0:2652 ~ libc[a291]::unix::bsd::apple::_WSTOPPED)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:29: 5615:38 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:9: 5615:38 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).12), kind: Binary(Spanned { node: Ne, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:59: 5615:61 (#0) }, Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).13), kind: Call(Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:42: 5615:50 (#0), res: Def(Fn, DefId(0:5211 ~ libc[a291]::unix::bsd::apple::WSTOPSIG)), segments: [PathSegment { ident: WSTOPSIG#0, hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).15), res: Def(Fn, DefId(0:5211 ~ libc[a291]::unix::bsd::apple::WSTOPSIG)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:42: 5615:50 (#0) }, [Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:51: 5615:57 (#0), res: Local(HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).17), res: Local(HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:51: 5615:57 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:42: 5615:58 (#0) }, Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).18), kind: Lit(Spanned { node: Int(Pu128(19), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:62: 5615:66 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:62: 5615:66 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:42: 5615:66 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).5), kind: Call(Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:9: 5615:17 (#0), res: Def(Fn, DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)), segments: [PathSegment { ident: _WSTATUS#0, hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).7), res: Def(Fn, DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:9: 5615:17 (#0) }, [Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:18: 5615:24 (#0), res: Local(HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).9), res: Local(HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:18: 5615:24 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:9: 5615:25 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:29: 5615:38 (#0), res: Def(Const, DefId(0:2652 ~ libc[a291]::unix::bsd::apple::_WSTOPPED)), segments: [PathSegment { ident: _WSTOPPED#0, hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).11), res: Def(Const, DefId(0:2652 ~ libc[a291]::unix::bsd::apple::_WSTOPPED)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:29: 5615:38 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:5212 ~ libc[a291]::unix::bsd::apple::_WSTATUS)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).13), kind: Call(Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:42: 5615:50 (#0), res: Def(Fn, DefId(0:5211 ~ libc[a291]::unix::bsd::apple::WSTOPSIG)), segments: [PathSegment { ident: WSTOPSIG#0, hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).15), res: Def(Fn, DefId(0:5211 ~ libc[a291]::unix::bsd::apple::WSTOPSIG)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:42: 5615:50 (#0) }, [Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:51: 5615:57 (#0), res: Local(HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).2)), segments: [PathSegment { ident: status#0, hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).17), res: Local(HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:51: 5615:57 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:42: 5615:58 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:5215 ~ libc[a291]::unix::bsd::apple::WIFSTOPPED).18), kind: Lit(Spanned { node: Int(Pu128(19), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:62: 5615:66 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.161/src/unix/bsd/apple/mod.rs:5615:62: 5615:66 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:5211 ~ libc[a291]::unix::bsd::apple::WSTOPSIG)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3690 ~ libc[a291]::unix::bsd::apple::mach_task_self)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5245 ~ libc[a291]::unix::bsd::apple::b64::{impl#1}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5251 ~ libc[a291]::unix::bsd::apple::b64::{impl#3}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5284 ~ libc[a291]::unix::bsd::apple::b64::{impl#5}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5292 ~ libc[a291]::unix::bsd::apple::b64::{impl#7}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5299 ~ libc[a291]::unix::bsd::apple::b64::{impl#9}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5309 ~ libc[a291]::unix::bsd::apple::b64::aarch64::{impl#1}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5318 ~ libc[a291]::unix::bsd::apple::b64::aarch64::align::{impl#1}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5323 ~ libc[a291]::unix::bsd::apple::b64::aarch64::align::{impl#3}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5333 ~ libc[a291]::unix::bsd::apple::b64::aarch64::align::{impl#5}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5340 ~ libc[a291]::unix::bsd::apple::b64::aarch64::align::{impl#7}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5347 ~ libc[a291]::unix::bsd::apple::b64::aarch64::align::{impl#9}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5359 ~ libc[a291]::unix::bsd::apple::b64::aarch64::align::{impl#11}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5370 ~ libc[a291]::unix::bsd::apple::long_array::{impl#1}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:5382 ~ libc[a291]::unix::align::{impl#1}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
