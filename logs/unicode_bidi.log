[DEBUG] Trying to get func ty of defid DefId(0:430 ~ unicode_bidi[2979]::data_source::{impl#0}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11198 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field2_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:433 ~ unicode_bidi[2979]::data_source::{impl#2}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).8), kind: Field(Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:31:13: 31:17 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).2)), segments: [PathSegment { ident: line#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).10), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:31:13: 31:17 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:31:13: 31:23 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).11), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:31:27: 31:33 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).4)), segments: [PathSegment { ident: levels#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).14), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:31:27: 31:33 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:31:34: 31:39 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:31:27: 31:39 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).28), kind: Field(Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).29), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:32:13: 32:17 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).2)), segments: [PathSegment { ident: line#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).30), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:32:13: 32:17 (#0) }, end#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:32:13: 32:21 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).31), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).32), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).33), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:32:25: 32:31 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).4)), segments: [PathSegment { ident: levels#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).34), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:32:25: 32:31 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:32:32: 32:37 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:32:25: 32:37 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:8934 ~ core[7d5a]::iter::traits::iterator::Iterator::skip)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:8935 ~ core[7d5a]::iter::traits::iterator::Iterator::take)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:8925 ~ core[7d5a]::iter::traits::iterator::Iterator::enumerate)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).91), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:42:74: 42:79 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).58)), segments: [PathSegment { ident: start#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).92), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).58)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:42:74: 42:79 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).93), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:42:82: 42:83 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:42:82: 42:83 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).106), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:43:12: 43:21 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).95)), segments: [PathSegment { ident: new_level#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).107), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).95)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:43:12: 43:21 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).108), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:43:25: 43:34 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).66)), segments: [PathSegment { ident: run_level#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).109), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).66)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:43:25: 43:34 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:3014 ~ core[7d5a]::cmp::min)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:3024 ~ core[7d5a]::cmp::max)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:10418 ~ core[7d5a]::result::{impl#0}::expect)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:58 ~ unicode_bidi[2979]::level::{impl#0}::new_lowest_ge_rtl)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).212), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:63:11: 63:20 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).76)), segments: [PathSegment { ident: max_level#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).213), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).76)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:63:11: 63:20 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).214), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:63:24: 63:33 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).71)), segments: [PathSegment { ident: min_level#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).215), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).71)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:63:24: 63:33 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).223), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:66:15: 66:24 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).220)), segments: [PathSegment { ident: seq_start#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).224), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).220)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:66:15: 66:24 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).225), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:66:27: 66:36 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).198)), segments: [PathSegment { ident: run_count#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).226), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).198)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:66:27: 66:36 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).230), kind: Index(Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).231), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:67:16: 67:22 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).4)), segments: [PathSegment { ident: levels#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).232), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:67:16: 67:22 (#0) }, Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).233), kind: Field(Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).234), kind: Index(Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).235), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:67:23: 67:27 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).52)), segments: [PathSegment { ident: runs#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).236), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).52)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:67:23: 67:27 (#0) }, Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).237), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:67:28: 67:37 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).220)), segments: [PathSegment { ident: seq_start#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).238), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).220)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:67:28: 67:37 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:67:27: 67:38 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:67:23: 67:38 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:67:23: 67:44 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:67:22: 67:45 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:67:16: 67:45 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).239), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:67:48: 67:57 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).76)), segments: [PathSegment { ident: max_level#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).240), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).76)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:67:48: 67:57 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).254), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:73:31: 73:40 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).220)), segments: [PathSegment { ident: seq_start#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).255), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).220)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:73:31: 73:40 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).256), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:73:43: 73:44 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:73:43: 73:44 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).261), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:74:19: 74:26 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).258)), segments: [PathSegment { ident: seq_end#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).262), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).258)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:74:19: 74:26 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).263), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:74:29: 74:38 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).198)), segments: [PathSegment { ident: run_count#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).264), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).198)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:74:29: 74:38 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).268), kind: Index(Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).269), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:75:20: 75:26 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).4)), segments: [PathSegment { ident: levels#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).270), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:75:20: 75:26 (#0) }, Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).271), kind: Field(Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).272), kind: Index(Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).273), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:75:27: 75:31 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).52)), segments: [PathSegment { ident: runs#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).274), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).52)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:75:27: 75:31 (#0) }, Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).275), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:75:32: 75:39 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).258)), segments: [PathSegment { ident: seq_end#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).276), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).258)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:75:32: 75:39 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:75:31: 75:40 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:75:27: 75:40 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:75:27: 75:46 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:75:26: 75:47 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:75:20: 75:47 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).277), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:75:50: 75:59 (#0), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).76)), segments: [PathSegment { ident: max_level#0, hir_id: HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).278), res: Local(HirId(DefId(0:14 ~ unicode_bidi[2979]::deprecated::visual_runs).76)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/deprecated.rs:75:50: 75:59 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:13284 ~ core[7d5a]::slice::{impl#0}::reverse)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:10418 ~ core[7d5a]::result::{impl#0}::expect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:55 ~ unicode_bidi[2979]::level::{impl#0}::lower)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:439 ~ unicode_bidi[2979]::level::{impl#6}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:441 ~ unicode_bidi[2979]::level::{impl#7}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:443 ~ unicode_bidi[2979]::level::{impl#8}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:445 ~ unicode_bidi[2979]::level::{impl#9}::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:448 ~ unicode_bidi[2979]::level::{impl#11}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:448 ~ unicode_bidi[2979]::level::{impl#11}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:448 ~ unicode_bidi[2979]::level::{impl#11}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:33:39: 33:39 (#17), res: Local(HirId(DefId(0:448 ~ unicode_bidi[2979]::level::{impl#11}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:448 ~ unicode_bidi[2979]::level::{impl#11}::eq).8), res: Local(HirId(DefId(0:448 ~ unicode_bidi[2979]::level::{impl#11}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:33:39: 33:48 (#17) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:36:18: 36:20 (#17) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:448 ~ unicode_bidi[2979]::level::{impl#11}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:448 ~ unicode_bidi[2979]::level::{impl#11}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:33:39: 33:48 (#17), res: Local(HirId(DefId(0:448 ~ unicode_bidi[2979]::level::{impl#11}::eq).4)), segments: [PathSegment { ident: other#17, hir_id: HirId(DefId(0:448 ~ unicode_bidi[2979]::level::{impl#11}::eq).11), res: Local(HirId(DefId(0:448 ~ unicode_bidi[2979]::level::{impl#11}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:33:39: 33:48 (#17) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:36:18: 36:20 (#17) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:450 ~ unicode_bidi[2979]::level::{impl#12}::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:3008 ~ core[7d5a]::cmp::PartialOrd::partial_cmp)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:455 ~ unicode_bidi[2979]::level::{impl#13}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11181 ~ core[7d5a]::fmt::{impl#9}::write_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:458 ~ unicode_bidi[2979]::level::{impl#15}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:44 ~ unicode_bidi[2979]::level::{impl#0}::ltr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:45 ~ unicode_bidi[2979]::level::{impl#0}::rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:46 ~ unicode_bidi[2979]::level::{impl#0}::max_implicit_depth)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:47 ~ unicode_bidi[2979]::level::{impl#0}::max_explicit_depth)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ unicode_bidi[2979]::level::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:48 ~ unicode_bidi[2979]::level::{impl#0}::new).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:82:12: 82:18 (#0), res: Local(HirId(DefId(0:48 ~ unicode_bidi[2979]::level::{impl#0}::new).2)), segments: [PathSegment { ident: number#0, hir_id: HirId(DefId(0:48 ~ unicode_bidi[2979]::level::{impl#0}::new).6), res: Local(HirId(DefId(0:48 ~ unicode_bidi[2979]::level::{impl#0}::new).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:82:12: 82:18 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:48 ~ unicode_bidi[2979]::level::{impl#0}::new).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:82:22: 82:40 (#0), res: Def(Const, DefId(0:42 ~ unicode_bidi[2979]::level::MAX_IMPLICIT_DEPTH)), segments: [PathSegment { ident: MAX_IMPLICIT_DEPTH#0, hir_id: HirId(DefId(0:48 ~ unicode_bidi[2979]::level::{impl#0}::new).8), res: Def(Const, DefId(0:42 ~ unicode_bidi[2979]::level::MAX_IMPLICIT_DEPTH)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:82:22: 82:40 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Specific({"unicode_bidi"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:49 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:49 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:92:12: 92:18 (#0), res: Local(HirId(DefId(0:49 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit).2)), segments: [PathSegment { ident: number#0, hir_id: HirId(DefId(0:49 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit).6), res: Local(HirId(DefId(0:49 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:92:12: 92:18 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:49 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:92:22: 92:40 (#0), res: Def(Const, DefId(0:41 ~ unicode_bidi[2979]::level::MAX_EXPLICIT_DEPTH)), segments: [PathSegment { ident: MAX_EXPLICIT_DEPTH#0, hir_id: HirId(DefId(0:49 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit).8), res: Def(Const, DefId(0:41 ~ unicode_bidi[2979]::level::MAX_EXPLICIT_DEPTH)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:92:22: 92:40 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Specific({"unicode_bidi"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:50 ~ unicode_bidi[2979]::level::{impl#0}::number)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr).4), kind: Binary(Spanned { node: Rem, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:110:16: 110:17 (#0) }, Expr { hir_id: HirId(DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr).5), kind: Field(Expr { hir_id: HirId(DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:110:9: 110:13 (#0), res: Local(HirId(DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr).7), res: Local(HirId(DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:110:9: 110:13 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:110:9: 110:15 (#0) }, Expr { hir_id: HirId(DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr).8), kind: Lit(Spanned { node: Int(Pu128(2), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:110:18: 110:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:110:18: 110:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:110:9: 110:19 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr).9), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:110:23: 110:24 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:110:23: 110:24 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr).5), kind: Field(Expr { hir_id: HirId(DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:110:9: 110:13 (#0), res: Local(HirId(DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr).7), res: Local(HirId(DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:110:9: 110:13 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:110:9: 110:15 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr).8), kind: Lit(Spanned { node: Int(Pu128(2), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:110:18: 110:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:110:18: 110:19 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl).4), kind: Binary(Spanned { node: Rem, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:116:16: 116:17 (#0) }, Expr { hir_id: HirId(DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl).5), kind: Field(Expr { hir_id: HirId(DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:116:9: 116:13 (#0), res: Local(HirId(DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl).7), res: Local(HirId(DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:116:9: 116:13 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:116:9: 116:15 (#0) }, Expr { hir_id: HirId(DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl).8), kind: Lit(Spanned { node: Int(Pu128(2), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:116:18: 116:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:116:18: 116:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:116:9: 116:19 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl).9), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:116:23: 116:24 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:116:23: 116:24 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl).5), kind: Field(Expr { hir_id: HirId(DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:116:9: 116:13 (#0), res: Local(HirId(DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl).7), res: Local(HirId(DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:116:9: 116:13 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:116:9: 116:15 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl).8), kind: Lit(Spanned { node: Int(Pu128(2), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:116:18: 116:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:116:18: 116:19 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:53 ~ unicode_bidi[2979]::level::{impl#0}::raise)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:24762 ~ core[7d5a]::num::{impl#6}::checked_add)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:53 ~ unicode_bidi[2979]::level::{impl#0}::raise).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:126:20: 126:26 (#0), res: Local(HirId(DefId(0:53 ~ unicode_bidi[2979]::level::{impl#0}::raise).14)), segments: [PathSegment { ident: number#0, hir_id: HirId(DefId(0:53 ~ unicode_bidi[2979]::level::{impl#0}::raise).21), res: Local(HirId(DefId(0:53 ~ unicode_bidi[2979]::level::{impl#0}::raise).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:126:20: 126:26 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:53 ~ unicode_bidi[2979]::level::{impl#0}::raise).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:126:30: 126:48 (#0), res: Def(Const, DefId(0:42 ~ unicode_bidi[2979]::level::MAX_IMPLICIT_DEPTH)), segments: [PathSegment { ident: MAX_IMPLICIT_DEPTH#0, hir_id: HirId(DefId(0:53 ~ unicode_bidi[2979]::level::{impl#0}::raise).23), res: Def(Const, DefId(0:42 ~ unicode_bidi[2979]::level::MAX_IMPLICIT_DEPTH)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:126:30: 126:48 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:54 ~ unicode_bidi[2979]::level::{impl#0}::raise_explicit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:24762 ~ core[7d5a]::num::{impl#6}::checked_add)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:54 ~ unicode_bidi[2979]::level::{impl#0}::raise_explicit).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:142:20: 142:26 (#0), res: Local(HirId(DefId(0:54 ~ unicode_bidi[2979]::level::{impl#0}::raise_explicit).14)), segments: [PathSegment { ident: number#0, hir_id: HirId(DefId(0:54 ~ unicode_bidi[2979]::level::{impl#0}::raise_explicit).21), res: Local(HirId(DefId(0:54 ~ unicode_bidi[2979]::level::{impl#0}::raise_explicit).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:142:20: 142:26 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:54 ~ unicode_bidi[2979]::level::{impl#0}::raise_explicit).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:142:30: 142:48 (#0), res: Def(Const, DefId(0:41 ~ unicode_bidi[2979]::level::MAX_EXPLICIT_DEPTH)), segments: [PathSegment { ident: MAX_EXPLICIT_DEPTH#0, hir_id: HirId(DefId(0:54 ~ unicode_bidi[2979]::level::{impl#0}::raise_explicit).23), res: Def(Const, DefId(0:41 ~ unicode_bidi[2979]::level::MAX_EXPLICIT_DEPTH)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:142:30: 142:48 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:55 ~ unicode_bidi[2979]::level::{impl#0}::lower)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:24767 ~ core[7d5a]::num::{impl#6}::checked_sub)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:56 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_ltr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:49 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:56 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_ltr).9), kind: Binary(Spanned { node: Add, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:170:37: 170:38 (#0) }, Expr { hir_id: HirId(DefId(0:56 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_ltr).10), kind: Field(Expr { hir_id: HirId(DefId(0:56 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_ltr).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:170:30: 170:34 (#0), res: Local(HirId(DefId(0:56 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_ltr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:56 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_ltr).12), res: Local(HirId(DefId(0:56 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_ltr).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:170:30: 170:34 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:170:30: 170:36 (#0) }, Expr { hir_id: HirId(DefId(0:56 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_ltr).13), kind: Lit(Spanned { node: Int(Pu128(2), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:170:39: 170:40 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:170:39: 170:40 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:170:29: 170:41 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:56 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_ltr).14), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:56 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_ltr).15), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:170:45: 170:46 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:170:45: 170:46 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:170:44: 170:46 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:56 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_ltr).10), kind: Field(Expr { hir_id: HirId(DefId(0:56 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_ltr).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:170:30: 170:34 (#0), res: Local(HirId(DefId(0:56 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_ltr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:56 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_ltr).12), res: Local(HirId(DefId(0:56 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_ltr).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:170:30: 170:34 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:170:30: 170:36 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:56 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_ltr).13), kind: Lit(Spanned { node: Int(Pu128(2), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:170:39: 170:40 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:170:39: 170:40 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:57 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:49 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:57 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_rtl).9), kind: Binary(Spanned { node: Add, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:176:37: 176:38 (#0) }, Expr { hir_id: HirId(DefId(0:57 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_rtl).10), kind: Field(Expr { hir_id: HirId(DefId(0:57 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_rtl).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:176:30: 176:34 (#0), res: Local(HirId(DefId(0:57 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_rtl).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:57 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_rtl).12), res: Local(HirId(DefId(0:57 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_rtl).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:176:30: 176:34 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:176:30: 176:36 (#0) }, Expr { hir_id: HirId(DefId(0:57 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_rtl).13), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:176:39: 176:40 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:176:39: 176:40 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:176:29: 176:41 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:57 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_rtl).14), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:176:44: 176:45 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:176:44: 176:45 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:57 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_rtl).10), kind: Field(Expr { hir_id: HirId(DefId(0:57 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_rtl).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:176:30: 176:34 (#0), res: Local(HirId(DefId(0:57 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_rtl).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:57 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_rtl).12), res: Local(HirId(DefId(0:57 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_rtl).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:176:30: 176:34 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:176:30: 176:36 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:57 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_rtl).13), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:176:39: 176:40 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:176:39: 176:40 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:58 ~ unicode_bidi[2979]::level::{impl#0}::new_lowest_ge_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ unicode_bidi[2979]::level::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:58 ~ unicode_bidi[2979]::level::{impl#0}::new_lowest_ge_rtl).9), kind: Field(Expr { hir_id: HirId(DefId(0:58 ~ unicode_bidi[2979]::level::{impl#0}::new_lowest_ge_rtl).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:183:20: 183:24 (#0), res: Local(HirId(DefId(0:58 ~ unicode_bidi[2979]::level::{impl#0}::new_lowest_ge_rtl).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:58 ~ unicode_bidi[2979]::level::{impl#0}::new_lowest_ge_rtl).11), res: Local(HirId(DefId(0:58 ~ unicode_bidi[2979]::level::{impl#0}::new_lowest_ge_rtl).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:183:20: 183:24 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:183:20: 183:26 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:58 ~ unicode_bidi[2979]::level::{impl#0}::new_lowest_ge_rtl).12), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:183:29: 183:30 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:183:29: 183:30 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:59 ~ unicode_bidi[2979]::level::{impl#0}::bidi_class)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:60 ~ unicode_bidi[2979]::level::{impl#0}::vec)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8953 ~ core[7d5a]::iter::traits::iterator::Iterator::collect)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:8910 ~ core[7d5a]::iter::traits::iterator::Iterator::map)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG] Trying to get func ty of defid DefId(0:62 ~ unicode_bidi[2979]::level::{impl#0}::from_slice_unchecked)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"unicode_bidi"}), Specific({"unicode_bidi"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:2158 ~ core[7d5a]::mem::size_of)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:2158 ~ core[7d5a]::mem::size_of)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:62 ~ unicode_bidi[2979]::level::{impl#0}::from_slice_unchecked).32), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:62 ~ unicode_bidi[2979]::level::{impl#0}::from_slice_unchecked).33), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#23), res: Local(HirId(DefId(0:62 ~ unicode_bidi[2979]::level::{impl#0}::from_slice_unchecked).24)), segments: [PathSegment { ident: left_val#23, hir_id: HirId(DefId(0:62 ~ unicode_bidi[2979]::level::{impl#0}::from_slice_unchecked).34), res: Local(HirId(DefId(0:62 ~ unicode_bidi[2979]::level::{impl#0}::from_slice_unchecked).24)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#23) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:22: 46:31 (#23) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:62 ~ unicode_bidi[2979]::level::{impl#0}::from_slice_unchecked).35), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:62 ~ unicode_bidi[2979]::level::{impl#0}::from_slice_unchecked).36), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#23), res: Local(HirId(DefId(0:62 ~ unicode_bidi[2979]::level::{impl#0}::from_slice_unchecked).25)), segments: [PathSegment { ident: right_val#23, hir_id: HirId(DefId(0:62 ~ unicode_bidi[2979]::level::{impl#0}::from_slice_unchecked).37), res: Local(HirId(DefId(0:62 ~ unicode_bidi[2979]::level::{impl#0}::from_slice_unchecked).25)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#23) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:35: 46:45 (#23) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10038 ~ core[7d5a]::panicking::assert_failed)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:13128 ~ core[7d5a]::slice::raw::from_raw_parts)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG] Trying to get func ty of defid DefId(0:63 ~ unicode_bidi[2979]::level::has_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9015 ~ core[7d5a]::iter::traits::iterator::Iterator::any)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG] Trying to get func ty of defid DefId(0:66 ~ unicode_bidi[2979]::level::{impl#1}::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:50 ~ unicode_bidi[2979]::level::{impl#0}::number)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:68 ~ unicode_bidi[2979]::level::{impl#2}::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:10418 ~ core[7d5a]::result::{impl#0}::expect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ unicode_bidi[2979]::level::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).6), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:12: 242:14 (#0) }, Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).7), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:10: 242:11 (#0), res: Local(HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).4)), segments: [PathSegment { ident: s#0, hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).9), res: Local(HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:10: 242:11 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:9: 242:11 (#0) }, Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).10), kind: Lit(Spanned { node: Str("x", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:15: 242:18 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:15: 242:18 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:9: 242:18 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).11), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:25: 242:27 (#0) }, Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).12), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:23: 242:24 (#0), res: Local(HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).4)), segments: [PathSegment { ident: s#0, hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).14), res: Local(HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:23: 242:24 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:22: 242:24 (#0) }, Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).15), kind: MethodCall(PathSegment { ident: to_string#0, hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).16), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:28: 242:32 (#0), res: Local(HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).19), res: Local(HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:28: 242:32 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:28: 242:34 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:35: 242:46 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:28: 242:46 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:22: 242:46 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).7), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:10: 242:11 (#0), res: Local(HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).4)), segments: [PathSegment { ident: s#0, hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).9), res: Local(HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:10: 242:11 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:9: 242:11 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).10), kind: Lit(Spanned { node: Str("x", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:15: 242:18 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:15: 242:18 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).12), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:23: 242:24 (#0), res: Local(HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).4)), segments: [PathSegment { ident: s#0, hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).14), res: Local(HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:23: 242:24 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:22: 242:24 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).15), kind: MethodCall(PathSegment { ident: to_string#0, hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).16), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:28: 242:32 (#0), res: Local(HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).19), res: Local(HirId(DefId(0:71 ~ unicode_bidi[2979]::level::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:28: 242:32 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:28: 242:34 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:35: 242:46 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:242:28: 242:46 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:6152 ~ alloc[5873]::string::ToString::to_string)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:74 ~ unicode_bidi[2979]::level::{impl#4}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:74 ~ unicode_bidi[2979]::level::{impl#4}::eq).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:250:9: 250:13 (#0), res: Local(HirId(DefId(0:74 ~ unicode_bidi[2979]::level::{impl#4}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:74 ~ unicode_bidi[2979]::level::{impl#4}::eq).7), res: Local(HirId(DefId(0:74 ~ unicode_bidi[2979]::level::{impl#4}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:250:9: 250:13 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:74 ~ unicode_bidi[2979]::level::{impl#4}::eq).8), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:74 ~ unicode_bidi[2979]::level::{impl#4}::eq).9), kind: MethodCall(PathSegment { ident: as_str#0, hir_id: HirId(DefId(0:74 ~ unicode_bidi[2979]::level::{impl#4}::eq).10), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:74 ~ unicode_bidi[2979]::level::{impl#4}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:250:18: 250:19 (#0), res: Local(HirId(DefId(0:74 ~ unicode_bidi[2979]::level::{impl#4}::eq).4)), segments: [PathSegment { ident: s#0, hir_id: HirId(DefId(0:74 ~ unicode_bidi[2979]::level::{impl#4}::eq).12), res: Local(HirId(DefId(0:74 ~ unicode_bidi[2979]::level::{impl#4}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:250:18: 250:19 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:250:20: 250:28 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:250:18: 250:28 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/level.rs:250:17: 250:28 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:5988 ~ alloc[5873]::string::{impl#0}::as_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).6), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:36:5: 36:41 (#24) }, Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).7), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:32:5: 32:27 (#24) }, Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).8), kind: Field(Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:10 (#24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).10), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:32:5: 32:27 (#24) }, Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).11), kind: Field(Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).4)), segments: [PathSegment { ident: other#24, hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).13), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:32:5: 32:27 (#24) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:32:5: 32:27 (#24) }, Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).14), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:36:5: 36:41 (#24) }, Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).15), kind: Field(Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:10 (#24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).17), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:36:5: 36:41 (#24) }, Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).18), kind: Field(Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).19), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).4)), segments: [PathSegment { ident: other#24, hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).20), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:36:5: 36:41 (#24) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:36:5: 36:41 (#24) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:36:5: 36:41 (#24) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).21), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:39:5: 39:39 (#24) }, Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).22), kind: Field(Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).23), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:10 (#24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24) }, paragraphs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:39:5: 39:39 (#24) }, Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).25), kind: Field(Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).4)), segments: [PathSegment { ident: other#24, hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).27), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24) }, paragraphs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:39:5: 39:39 (#24) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:39:5: 39:39 (#24) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).7), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:32:5: 32:27 (#24) }, Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).8), kind: Field(Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:10 (#24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).10), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:32:5: 32:27 (#24) }, Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).11), kind: Field(Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).4)), segments: [PathSegment { ident: other#24, hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).13), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:32:5: 32:27 (#24) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:32:5: 32:27 (#24) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).14), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:36:5: 36:41 (#24) }, Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).15), kind: Field(Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:10 (#24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).17), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:36:5: 36:41 (#24) }, Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).18), kind: Field(Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).19), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).4)), segments: [PathSegment { ident: other#24, hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).20), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:36:5: 36:41 (#24) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:36:5: 36:41 (#24) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).8), kind: Field(Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:10 (#24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).10), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:32:5: 32:27 (#24) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).11), kind: Field(Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).4)), segments: [PathSegment { ident: other#24, hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).13), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:32:5: 32:27 (#24) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).15), kind: Field(Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:10 (#24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).17), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:36:5: 36:41 (#24) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).18), kind: Field(Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).19), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).4)), segments: [PathSegment { ident: other#24, hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).20), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:36:5: 36:41 (#24) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).22), kind: Field(Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).23), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:10 (#24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24) }, paragraphs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:39:5: 39:39 (#24) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).25), kind: Field(Expr { hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).4)), segments: [PathSegment { ident: other#24, hir_id: HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).27), res: Local(HirId(DefId(0:468 ~ unicode_bidi[2979]::utf16::{impl#14}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:29:10: 29:19 (#24) }, paragraphs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:39:5: 39:39 (#24) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:471 ~ unicode_bidi[2979]::utf16::{impl#15}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11200 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field3_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:99 ~ unicode_bidi[2979]::utf16::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:100 ~ unicode_bidi[2979]::utf16::{impl#0}::new_with_data_source)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:100 ~ unicode_bidi[2979]::utf16::{impl#0}::new_with_data_source)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:105 ~ unicode_bidi[2979]::utf16::{impl#1}::new_with_data_source)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).6), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:81:5: 81:29 (#26) }, Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).7), kind: Field(Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:78:10: 78:10 (#26), res: Local(HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).9), res: Local(HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:78:10: 78:19 (#26) }, base#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:81:5: 81:29 (#26) }, Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).10), kind: Field(Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:78:10: 78:19 (#26), res: Local(HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).4)), segments: [PathSegment { ident: other#26, hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).12), res: Local(HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:78:10: 78:19 (#26) }, base#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:81:5: 81:29 (#26) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:81:5: 81:29 (#26) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).13), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:86:5: 86:24 (#26) }, Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).14), kind: Field(Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:78:10: 78:10 (#26), res: Local(HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).16), res: Local(HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:78:10: 78:19 (#26) }, pure_ltr#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:86:5: 86:24 (#26) }, Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:78:10: 78:19 (#26), res: Local(HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).4)), segments: [PathSegment { ident: other#26, hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).19), res: Local(HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:78:10: 78:19 (#26) }, pure_ltr#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:86:5: 86:24 (#26) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:86:5: 86:24 (#26) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).7), kind: Field(Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:78:10: 78:10 (#26), res: Local(HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).9), res: Local(HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:78:10: 78:19 (#26) }, base#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:81:5: 81:29 (#26) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).10), kind: Field(Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:78:10: 78:19 (#26), res: Local(HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).4)), segments: [PathSegment { ident: other#26, hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).12), res: Local(HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:78:10: 78:19 (#26) }, base#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:81:5: 81:29 (#26) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).14), kind: Field(Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:78:10: 78:10 (#26), res: Local(HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).16), res: Local(HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:78:10: 78:19 (#26) }, pure_ltr#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:86:5: 86:24 (#26) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:78:10: 78:19 (#26), res: Local(HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).4)), segments: [PathSegment { ident: other#26, hir_id: HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).19), res: Local(HirId(DefId(0:480 ~ unicode_bidi[2979]::utf16::{impl#17}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:78:10: 78:19 (#26) }, pure_ltr#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:86:5: 86:24 (#26) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:483 ~ unicode_bidi[2979]::utf16::{impl#18}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11198 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field2_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:105 ~ unicode_bidi[2979]::utf16::{impl#1}::new_with_data_source)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:492 ~ unicode_bidi[2979]::utf16::{impl#19}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11202 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field4_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).6), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:140:5: 140:27 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).7), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).8), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:134:5: 134:27 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:17 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).11), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:134:5: 134:27 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).12), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), segments: [PathSegment { ident: other#29, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).14), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:134:5: 134:27 (#29) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:134:5: 134:27 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).15), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).16), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).17), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:17 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).18), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).19), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), segments: [PathSegment { ident: other#29, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).21), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).22), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:140:5: 140:27 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).23), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:17 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).25), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:140:5: 140:27 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).26), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), segments: [PathSegment { ident: other#29, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).28), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:140:5: 140:27 (#29) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:140:5: 140:27 (#29) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:140:5: 140:27 (#29) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).29), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:146:5: 146:39 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).30), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).31), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:17 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).32), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, paragraphs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:146:5: 146:39 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).33), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).34), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), segments: [PathSegment { ident: other#29, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).35), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, paragraphs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:146:5: 146:39 (#29) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:146:5: 146:39 (#29) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).7), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).8), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:134:5: 134:27 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:17 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).11), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:134:5: 134:27 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).12), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), segments: [PathSegment { ident: other#29, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).14), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:134:5: 134:27 (#29) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:134:5: 134:27 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).15), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).16), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).17), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:17 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).18), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).19), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), segments: [PathSegment { ident: other#29, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).21), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).22), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:140:5: 140:27 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).23), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:17 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).25), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:140:5: 140:27 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).26), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), segments: [PathSegment { ident: other#29, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).28), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:140:5: 140:27 (#29) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:140:5: 140:27 (#29) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).8), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:134:5: 134:27 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:17 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).11), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:134:5: 134:27 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).12), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), segments: [PathSegment { ident: other#29, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).14), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:134:5: 134:27 (#29) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:134:5: 134:27 (#29) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).15), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).16), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).17), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:17 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).18), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }, Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).19), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), segments: [PathSegment { ident: other#29, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).21), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:17 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).11), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:134:5: 134:27 (#29) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).12), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), segments: [PathSegment { ident: other#29, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).14), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:134:5: 134:27 (#29) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).16), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).17), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:17 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).18), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).19), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), segments: [PathSegment { ident: other#29, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).21), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:137:5: 137:41 (#29) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).23), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:17 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).25), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:140:5: 140:27 (#29) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).26), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), segments: [PathSegment { ident: other#29, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).28), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:140:5: 140:27 (#29) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).30), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).31), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:17 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).32), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, paragraphs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:146:5: 146:39 (#29) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).33), kind: Field(Expr { hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).34), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), segments: [PathSegment { ident: other#29, hir_id: HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).35), res: Local(HirId(DefId(0:497 ~ unicode_bidi[2979]::utf16::{impl#21}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:131:17: 131:26 (#29) }, paragraphs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:146:5: 146:39 (#29) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:110 ~ unicode_bidi[2979]::utf16::{impl#2}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:111 ~ unicode_bidi[2979]::utf16::{impl#2}::new_with_data_source)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:111 ~ unicode_bidi[2979]::utf16::{impl#2}::new_with_data_source)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:105 ~ unicode_bidi[2979]::utf16::{impl#1}::new_with_data_source)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7425 ~ alloc[5873]::vec::{impl#0}::with_capacity)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:8905 ~ core[7d5a]::iter::traits::iterator::Iterator::zip)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).10), kind: Field(Expr { hir_id: HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:224:17: 224:21 (#0), res: Local(HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).6)), segments: [PathSegment { ident: line#0, hir_id: HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).12), res: Local(HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:224:17: 224:21 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:224:17: 224:27 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).13), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).14), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).15), kind: Field(Expr { hir_id: HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:224:31: 224:35 (#0), res: Local(HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).17), res: Local(HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:224:31: 224:35 (#0) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:224:31: 224:42 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:224:43: 224:48 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:224:31: 224:48 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).31), kind: Field(Expr { hir_id: HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).32), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:225:17: 225:21 (#0), res: Local(HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).6)), segments: [PathSegment { ident: line#0, hir_id: HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).33), res: Local(HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:225:17: 225:21 (#0) }, end#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:225:17: 225:25 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).34), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).35), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).36), kind: Field(Expr { hir_id: HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).37), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:225:29: 225:33 (#0), res: Local(HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).38), res: Local(HirId(DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:225:29: 225:33 (#0) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:225:29: 225:40 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:225:41: 225:46 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:225:29: 225:46 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:379 ~ unicode_bidi[2979]::reorder_levels)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:115 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels_per_char)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8953 ~ core[7d5a]::iter::traits::iterator::Iterator::collect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8910 ~ core[7d5a]::iter::traits::iterator::Iterator::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:317 ~ unicode_bidi[2979]::TextSource::char_indices)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:117 ~ unicode_bidi[2979]::utf16::{impl#2}::reorder_line)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:63 ~ unicode_bidi[2979]::level::has_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:119 ~ unicode_bidi[2979]::utf16::{impl#2}::visual_runs)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:135 ~ unicode_bidi[2979]::utf16::reorder_line)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:118 ~ unicode_bidi[2979]::utf16::{impl#2}::reorder_visual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:372 ~ unicode_bidi[2979]::reorder_visual)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:119 ~ unicode_bidi[2979]::utf16::{impl#2}::visual_runs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:114 ~ unicode_bidi[2979]::utf16::{impl#2}::reordered_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:120 ~ unicode_bidi[2979]::utf16::{impl#2}::has_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:63 ~ unicode_bidi[2979]::level::has_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:507 ~ unicode_bidi[2979]::utf16::{impl#22}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11204 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field5_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).6), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:377:5: 377:31 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).7), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).8), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).9), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).10), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).12), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).13), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).15), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).16), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).19), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).20), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).21), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).22), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).23), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).24), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).25), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).26), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).27), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).29), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).30), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:377:5: 377:31 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).31), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).32), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).33), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, paragraph_level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:377:5: 377:31 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).34), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).35), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).36), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, paragraph_level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:377:5: 377:31 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:377:5: 377:31 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:377:5: 377:31 (#35) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).37), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:380:5: 380:26 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).38), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).40), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, is_pure_ltr#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:380:5: 380:26 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).41), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).42), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).43), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, is_pure_ltr#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:380:5: 380:26 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:380:5: 380:26 (#35) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).7), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).8), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).9), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).10), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).12), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).13), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).15), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).16), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).19), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).20), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).21), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).22), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).23), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).24), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).25), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).26), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).27), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).29), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).30), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:377:5: 377:31 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).31), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).32), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).33), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, paragraph_level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:377:5: 377:31 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).34), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).35), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).36), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, paragraph_level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:377:5: 377:31 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:377:5: 377:31 (#35) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).8), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).9), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).10), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).12), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).13), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).15), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).16), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).19), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).20), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).21), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).22), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).23), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).24), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).25), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).26), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).27), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).29), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).9), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).10), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).12), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).13), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).15), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).16), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).19), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }, Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).20), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).21), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).22), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).10), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).12), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).13), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).15), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:368:5: 368:27 (#35) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).19), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).20), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).21), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).22), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:371:5: 371:41 (#35) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).24), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).25), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).26), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).27), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).29), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:374:5: 374:27 (#35) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).31), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).32), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).33), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, paragraph_level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:377:5: 377:31 (#35) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).34), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).35), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).36), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, paragraph_level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:377:5: 377:31 (#35) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).38), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:17 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).40), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, is_pure_ltr#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:380:5: 380:26 (#35) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).41), kind: Field(Expr { hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).42), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), segments: [PathSegment { ident: other#35, hir_id: HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).43), res: Local(HirId(DefId(0:512 ~ unicode_bidi[2979]::utf16::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:365:17: 365:26 (#35) }, is_pure_ltr#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:380:5: 380:26 (#35) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:123 ~ unicode_bidi[2979]::utf16::{impl#3}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:124 ~ unicode_bidi[2979]::utf16::{impl#3}::new_with_data_source)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:124 ~ unicode_bidi[2979]::utf16::{impl#3}::new_with_data_source)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7425 ~ alloc[5873]::vec::{impl#0}::with_capacity)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).8), kind: Field(Expr { hir_id: HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:456:17: 456:21 (#0), res: Local(HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).4)), segments: [PathSegment { ident: line#0, hir_id: HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).10), res: Local(HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:456:17: 456:21 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:456:17: 456:27 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).11), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).13), kind: Field(Expr { hir_id: HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:456:31: 456:35 (#0), res: Local(HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).15), res: Local(HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:456:31: 456:35 (#0) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:456:31: 456:42 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:456:43: 456:48 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:456:31: 456:48 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).29), kind: Field(Expr { hir_id: HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).30), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:457:17: 457:21 (#0), res: Local(HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).4)), segments: [PathSegment { ident: line#0, hir_id: HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).31), res: Local(HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:457:17: 457:21 (#0) }, end#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:457:17: 457:25 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).32), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).33), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).34), kind: Field(Expr { hir_id: HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).35), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:457:29: 457:33 (#0), res: Local(HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).36), res: Local(HirId(DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:457:29: 457:33 (#0) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:457:29: 457:40 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:457:41: 457:46 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:457:29: 457:46 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:379 ~ unicode_bidi[2979]::reorder_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:315 ~ unicode_bidi[2979]::TextSource::subrange)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:128 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels_per_char)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8953 ~ core[7d5a]::iter::traits::iterator::Iterator::collect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8910 ~ core[7d5a]::iter::traits::iterator::Iterator::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:317 ~ unicode_bidi[2979]::TextSource::char_indices)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:130 ~ unicode_bidi[2979]::utf16::{impl#3}::reorder_line)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:63 ~ unicode_bidi[2979]::level::has_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:132 ~ unicode_bidi[2979]::utf16::{impl#3}::visual_runs)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:135 ~ unicode_bidi[2979]::utf16::reorder_line)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:131 ~ unicode_bidi[2979]::utf16::{impl#3}::reorder_visual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:372 ~ unicode_bidi[2979]::reorder_visual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:132 ~ unicode_bidi[2979]::utf16::{impl#3}::visual_runs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:127 ~ unicode_bidi[2979]::utf16::{impl#3}::reordered_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:133 ~ unicode_bidi[2979]::utf16::{impl#3}::has_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:134 ~ unicode_bidi[2979]::utf16::{impl#3}::direction)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:388 ~ unicode_bidi[2979]::para_direction)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:135 ~ unicode_bidi[2979]::utf16::reorder_line)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9008 ~ core[7d5a]::iter::traits::iterator::Iterator::all)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7425 ~ alloc[5873]::vec::{impl#0}::with_capacity)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8837 ~ core[7d5a]::iter::traits::exact_size::ExactSizeIterator::len)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:9103 ~ core[7d5a]::iter::traits::iterator::Iterator::rev)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:316 ~ unicode_bidi[2979]::TextSource::chars)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5307 ~ core[7d5a]::char::methods::{impl#0}::encode_utf16)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:521 ~ unicode_bidi[2979]::utf16::{impl#25}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11198 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field2_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:142 ~ unicode_bidi[2979]::utf16::{impl#4}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:143 ~ unicode_bidi[2979]::utf16::{impl#4}::direction)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:388 ~ unicode_bidi[2979]::para_direction)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:144 ~ unicode_bidi[2979]::utf16::{impl#4}::level_at)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:144 ~ unicode_bidi[2979]::utf16::{impl#4}::level_at).7), kind: Field(Expr { hir_id: HirId(DefId(0:144 ~ unicode_bidi[2979]::utf16::{impl#4}::level_at).8), kind: Field(Expr { hir_id: HirId(DefId(0:144 ~ unicode_bidi[2979]::utf16::{impl#4}::level_at).9), kind: Field(Expr { hir_id: HirId(DefId(0:144 ~ unicode_bidi[2979]::utf16::{impl#4}::level_at).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:603:31: 603:35 (#0), res: Local(HirId(DefId(0:144 ~ unicode_bidi[2979]::utf16::{impl#4}::level_at).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:144 ~ unicode_bidi[2979]::utf16::{impl#4}::level_at).11), res: Local(HirId(DefId(0:144 ~ unicode_bidi[2979]::utf16::{impl#4}::level_at).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:603:31: 603:35 (#0) }, para#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:603:31: 603:40 (#0) }, range#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:603:31: 603:46 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:603:31: 603:52 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:144 ~ unicode_bidi[2979]::utf16::{impl#4}::level_at).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:603:55: 603:58 (#0), res: Local(HirId(DefId(0:144 ~ unicode_bidi[2979]::utf16::{impl#4}::level_at).4)), segments: [PathSegment { ident: pos#0, hir_id: HirId(DefId(0:144 ~ unicode_bidi[2979]::utf16::{impl#4}::level_at).13), res: Local(HirId(DefId(0:144 ~ unicode_bidi[2979]::utf16::{impl#4}::level_at).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:603:55: 603:58 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:145 ~ unicode_bidi[2979]::utf16::is_high_surrogate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:145 ~ unicode_bidi[2979]::utf16::is_high_surrogate).4), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:614:11: 614:12 (#0) }, Expr { hir_id: HirId(DefId(0:145 ~ unicode_bidi[2979]::utf16::is_high_surrogate).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:614:6: 614:10 (#0), res: Local(HirId(DefId(0:145 ~ unicode_bidi[2979]::utf16::is_high_surrogate).2)), segments: [PathSegment { ident: code#0, hir_id: HirId(DefId(0:145 ~ unicode_bidi[2979]::utf16::is_high_surrogate).6), res: Local(HirId(DefId(0:145 ~ unicode_bidi[2979]::utf16::is_high_surrogate).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:614:6: 614:10 (#0) }, Expr { hir_id: HirId(DefId(0:145 ~ unicode_bidi[2979]::utf16::is_high_surrogate).7), kind: Lit(Spanned { node: Int(Pu128(64512), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:614:13: 614:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:614:13: 614:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:614:5: 614:20 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:145 ~ unicode_bidi[2979]::utf16::is_high_surrogate).8), kind: Lit(Spanned { node: Int(Pu128(55296), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:614:24: 614:30 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:614:24: 614:30 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:145 ~ unicode_bidi[2979]::utf16::is_high_surrogate).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:614:6: 614:10 (#0), res: Local(HirId(DefId(0:145 ~ unicode_bidi[2979]::utf16::is_high_surrogate).2)), segments: [PathSegment { ident: code#0, hir_id: HirId(DefId(0:145 ~ unicode_bidi[2979]::utf16::is_high_surrogate).6), res: Local(HirId(DefId(0:145 ~ unicode_bidi[2979]::utf16::is_high_surrogate).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:614:6: 614:10 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:145 ~ unicode_bidi[2979]::utf16::is_high_surrogate).7), kind: Lit(Spanned { node: Int(Pu128(64512), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:614:13: 614:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:614:13: 614:19 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate).4), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:618:11: 618:12 (#0) }, Expr { hir_id: HirId(DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:618:6: 618:10 (#0), res: Local(HirId(DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate).2)), segments: [PathSegment { ident: code#0, hir_id: HirId(DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate).6), res: Local(HirId(DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:618:6: 618:10 (#0) }, Expr { hir_id: HirId(DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate).7), kind: Lit(Spanned { node: Int(Pu128(64512), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:618:13: 618:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:618:13: 618:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:618:5: 618:20 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate).8), kind: Lit(Spanned { node: Int(Pu128(56320), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:618:24: 618:30 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:618:24: 618:30 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:618:6: 618:10 (#0), res: Local(HirId(DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate).2)), segments: [PathSegment { ident: code#0, hir_id: HirId(DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate).6), res: Local(HirId(DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:618:6: 618:10 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate).7), kind: Lit(Spanned { node: Int(Pu128(64512), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:618:13: 618:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:618:13: 618:19 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:152 ~ unicode_bidi[2979]::utf16::{impl#5}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:631:12: 631:17 (#0), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).4)), segments: [PathSegment { ident: index#0, hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).8), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:631:12: 631:17 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).9), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).10), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:631:21: 631:25 (#0), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).12), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:631:21: 631:25 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:631:26: 631:31 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:631:21: 631:31 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:5374 ~ core[7d5a]::char::from_u32)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).56), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:32: 642:34 (#0) }, Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).57), kind: Call(Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).58), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:12: 642:28 (#0), res: Def(Fn, DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate)), segments: [PathSegment { ident: is_low_surrogate#0, hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).59), res: Def(Fn, DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:12: 642:28 (#0) }, [Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).60), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:29: 642:30 (#0), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).28)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).61), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).28)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:29: 642:30 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:12: 642:31 (#0) }, Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).62), kind: Binary(Spanned { node: Gt, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:41: 642:42 (#0) }, Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).63), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:35: 642:40 (#0), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).4)), segments: [PathSegment { ident: index#0, hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).64), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:35: 642:40 (#0) }, Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).65), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:43: 642:44 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:43: 642:44 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:35: 642:44 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:12: 642:44 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).66), kind: Call(Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).67), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:48: 642:65 (#0), res: Def(Fn, DefId(0:145 ~ unicode_bidi[2979]::utf16::is_high_surrogate)), segments: [PathSegment { ident: is_high_surrogate#0, hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).68), res: Def(Fn, DefId(0:145 ~ unicode_bidi[2979]::utf16::is_high_surrogate)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:48: 642:65 (#0) }, [Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).69), kind: Index(Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).70), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:66: 642:70 (#0), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).71), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:66: 642:70 (#0) }, Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).72), kind: Binary(Spanned { node: Sub, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:77: 642:78 (#0) }, Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).73), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:71: 642:76 (#0), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).4)), segments: [PathSegment { ident: index#0, hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).74), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:71: 642:76 (#0) }, Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).75), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:79: 642:80 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:79: 642:80 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:71: 642:80 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:70: 642:81 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:66: 642:81 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:48: 642:82 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).57), kind: Call(Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).58), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:12: 642:28 (#0), res: Def(Fn, DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate)), segments: [PathSegment { ident: is_low_surrogate#0, hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).59), res: Def(Fn, DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:12: 642:28 (#0) }, [Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).60), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:29: 642:30 (#0), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).28)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).61), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).28)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:29: 642:30 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:12: 642:31 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).62), kind: Binary(Spanned { node: Gt, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:41: 642:42 (#0) }, Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).63), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:35: 642:40 (#0), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).4)), segments: [PathSegment { ident: index#0, hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).64), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:35: 642:40 (#0) }, Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).65), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:43: 642:44 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:43: 642:44 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:35: 642:44 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:146 ~ unicode_bidi[2979]::utf16::is_low_surrogate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).63), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:35: 642:40 (#0), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).4)), segments: [PathSegment { ident: index#0, hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).64), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:35: 642:40 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).65), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:43: 642:44 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:642:43: 642:44 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Specific({"unicode_bidi"})), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:145 ~ unicode_bidi[2979]::utf16::is_high_surrogate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:5372 ~ core[7d5a]::char::decode_utf16)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:9112 ~ core[7d5a]::iter::traits::iterator::Iterator::cloned)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).119), kind: MethodCall(PathSegment { ident: len_utf16#0, hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).120), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).121), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:650:31: 650:33 (#0), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).109)), segments: [PathSegment { ident: ch#0, hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).122), res: Local(HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).109)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:650:31: 650:33 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:650:34: 650:45 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:650:31: 650:45 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:153 ~ unicode_bidi[2979]::utf16::{impl#5}::char_at).123), kind: Lit(Spanned { node: Int(Pu128(2), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:650:49: 650:50 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:650:49: 650:50 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:5305 ~ core[7d5a]::char::methods::{impl#0}::len_utf16)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:5305 ~ core[7d5a]::char::methods::{impl#0}::len_utf16)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:154 ~ unicode_bidi[2979]::utf16::{impl#5}::subrange)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:155 ~ unicode_bidi[2979]::utf16::{impl#5}::chars)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:173 ~ unicode_bidi[2979]::utf16::{impl#10}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:156 ~ unicode_bidi[2979]::utf16::{impl#5}::char_indices)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:167 ~ unicode_bidi[2979]::utf16::{impl#8}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:157 ~ unicode_bidi[2979]::utf16::{impl#5}::indices_lengths)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:161 ~ unicode_bidi[2979]::utf16::{impl#6}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:158 ~ unicode_bidi[2979]::utf16::{impl#5}::char_len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5305 ~ core[7d5a]::char::methods::{impl#0}::len_utf16)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:528 ~ unicode_bidi[2979]::utf16::{impl#26}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11198 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field2_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:161 ~ unicode_bidi[2979]::utf16::{impl#6}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:164 ~ unicode_bidi[2979]::utf16::{impl#7}::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:314 ~ unicode_bidi[2979]::TextSource::char_at)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:535 ~ unicode_bidi[2979]::utf16::{impl#27}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11198 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field2_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:167 ~ unicode_bidi[2979]::utf16::{impl#8}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:170 ~ unicode_bidi[2979]::utf16::{impl#9}::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:314 ~ unicode_bidi[2979]::TextSource::char_at)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:543 ~ unicode_bidi[2979]::utf16::{impl#28}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11200 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field3_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:173 ~ unicode_bidi[2979]::utf16::{impl#10}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:176 ~ unicode_bidi[2979]::utf16::{impl#11}::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:314 ~ unicode_bidi[2979]::TextSource::char_at)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).5), kind: Field(Expr { hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:774:12: 774:16 (#0), res: Local(HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).7), res: Local(HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:774:12: 774:16 (#0) }, end_pos#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:774:12: 774:24 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).8), kind: Field(Expr { hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:774:28: 774:32 (#0), res: Local(HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).10), res: Local(HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:774:28: 774:32 (#0) }, cur_pos#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:774:28: 774:40 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:5374 ~ core[7d5a]::char::from_u32)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).56), kind: Field(Expr { hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).57), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:781:12: 781:16 (#0), res: Local(HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).58), res: Local(HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:781:12: 781:16 (#0) }, end_pos#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:781:12: 781:24 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).59), kind: Field(Expr { hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).60), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:781:27: 781:31 (#0), res: Local(HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).61), res: Local(HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:781:27: 781:31 (#0) }, cur_pos#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:781:27: 781:39 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:314 ~ unicode_bidi[2979]::TextSource::char_at)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).76), kind: Field(Expr { hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).77), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:782:61: 782:65 (#0), res: Local(HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).78), res: Local(HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:782:61: 782:65 (#0) }, end_pos#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:782:61: 782:73 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).79), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:782:76: 782:77 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:782:76: 782:77 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).82), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:783:20: 783:28 (#0), res: Local(HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).67)), segments: [PathSegment { ident: char_len#0, hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).83), res: Local(HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).67)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:783:20: 783:28 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:178 ~ unicode_bidi[2979]::utf16::{impl#12}::next_back).84), kind: Lit(Spanned { node: Int(Pu128(2), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:783:32: 783:33 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/utf16.rs:783:32: 783:33 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:592 ~ unicode_bidi[2979]::char_data::tables::{impl#0}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:595 ~ unicode_bidi[2979]::char_data::tables::{impl#2}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11181 ~ core[7d5a]::fmt::{impl#9}::write_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:598 ~ unicode_bidi[2979]::char_data::tables::{impl#4}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:598 ~ unicode_bidi[2979]::char_data::tables::{impl#4}::eq).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/tables.rs:11:30: 11:39 (#60), res: Local(HirId(DefId(0:598 ~ unicode_bidi[2979]::char_data::tables::{impl#4}::eq).14)), segments: [PathSegment { ident: __self_discr#60, hir_id: HirId(DefId(0:598 ~ unicode_bidi[2979]::char_data::tables::{impl#4}::eq).27), res: Local(HirId(DefId(0:598 ~ unicode_bidi[2979]::char_data::tables::{impl#4}::eq).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/tables.rs:11:30: 11:39 (#60) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:598 ~ unicode_bidi[2979]::char_data::tables::{impl#4}::eq).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/tables.rs:11:30: 11:39 (#60), res: Local(HirId(DefId(0:598 ~ unicode_bidi[2979]::char_data::tables::{impl#4}::eq).24)), segments: [PathSegment { ident: __arg1_discr#60, hir_id: HirId(DefId(0:598 ~ unicode_bidi[2979]::char_data::tables::{impl#4}::eq).29), res: Local(HirId(DefId(0:598 ~ unicode_bidi[2979]::char_data::tables::{impl#4}::eq).24)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/tables.rs:11:30: 11:39 (#60) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:600 ~ unicode_bidi[2979]::char_data::tables::{impl#5}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:200 ~ unicode_bidi[2979]::char_data::{impl#0}::bidi_class)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:201 ~ unicode_bidi[2979]::char_data::bidi_class)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).16), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:19: 50:21 (#0) }, Expr { hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).17), kind: Field(Expr { hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:12: 50:16 (#0), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).7)), segments: [PathSegment { ident: pair#0, hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).19), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:12: 50:16 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:12: 50:18 (#0) }, Expr { hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:22: 50:23 (#0), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).2)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).21), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:22: 50:23 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:12: 50:23 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).22), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:34: 50:36 (#0) }, Expr { hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).23), kind: Field(Expr { hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:27: 50:31 (#0), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).7)), segments: [PathSegment { ident: pair#0, hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).25), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:27: 50:31 (#0) }, 1#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:27: 50:33 (#0) }, Expr { hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:37: 50:38 (#0), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).2)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).27), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:37: 50:38 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:27: 50:38 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).17), kind: Field(Expr { hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:12: 50:16 (#0), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).7)), segments: [PathSegment { ident: pair#0, hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).19), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:12: 50:16 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:12: 50:18 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:22: 50:23 (#0), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).2)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).21), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:22: 50:23 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).23), kind: Field(Expr { hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:27: 50:31 (#0), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).7)), segments: [PathSegment { ident: pair#0, hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).25), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:27: 50:31 (#0) }, 1#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:27: 50:33 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:37: 50:38 (#0), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).2)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).27), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:50:37: 50:38 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:9671 ~ core[7d5a]::option::{impl#0}::unwrap_or)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).51), kind: Field(Expr { hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).52), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:54:26: 54:30 (#0), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).7)), segments: [PathSegment { ident: pair#0, hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).53), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:54:26: 54:30 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:54:26: 54:32 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).54), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:54:36: 54:37 (#0), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).2)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).55), res: Local(HirId(DefId(0:202 ~ unicode_bidi[2979]::char_data::bidi_matched_opening_bracket).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:54:36: 54:37 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:203 ~ unicode_bidi[2979]::char_data::is_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13365 ~ core[7d5a]::slice::{impl#0}::binary_search_by)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).20), kind: Binary(Spanned { node: Le, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:15: 71:17 (#0) }, Expr { hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).21), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:12: 71:14 (#0), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).12)), segments: [PathSegment { ident: lo#0, hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).22), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:12: 71:14 (#0) }, Expr { hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).23), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:18: 71:19 (#0), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).2)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).24), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:18: 71:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:12: 71:19 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).25), kind: Binary(Spanned { node: Le, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:25: 71:27 (#0) }, Expr { hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:23: 71:24 (#0), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).2)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).27), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:23: 71:24 (#0) }, Expr { hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:28: 71:30 (#0), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).13)), segments: [PathSegment { ident: hi#0, hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).29), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).13)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:28: 71:30 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:23: 71:30 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).21), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:12: 71:14 (#0), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).12)), segments: [PathSegment { ident: lo#0, hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).22), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:12: 71:14 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).23), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:18: 71:19 (#0), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).2)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).24), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:18: 71:19 (#0) }
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Specific({"unicode_bidi"})), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:23: 71:24 (#0), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).2)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).27), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:23: 71:24 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:28: 71:30 (#0), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).13)), segments: [PathSegment { ident: hi#0, hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).29), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).13)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:71:28: 71:30 (#0) }
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Specific({"unicode_bidi"})), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).37), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:73:19: 73:21 (#0), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).13)), segments: [PathSegment { ident: hi#0, hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).38), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).13)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:73:19: 73:21 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:73:24: 73:25 (#0), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).2)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).40), res: Local(HirId(DefId(0:204 ~ unicode_bidi[2979]::char_data::bsearch_range_value_table).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/char_data/mod.rs:73:24: 73:25 (#0) }
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG] Trying to get func ty of defid DefId(0:215 ~ unicode_bidi[2979]::explicit::compute)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:313 ~ unicode_bidi[2979]::TextSource::len)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).31), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).32), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#62), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).23)), segments: [PathSegment { ident: left_val#62, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).33), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).23)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#62) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:22: 46:31 (#62) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).34), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).35), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#62), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).24)), segments: [PathSegment { ident: right_val#62, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).36), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).24)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#62) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:35: 46:45 (#62) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10038 ~ core[7d5a]::panicking::assert_failed)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:224 ~ unicode_bidi[2979]::explicit::{impl#0}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:225 ~ unicode_bidi[2979]::explicit::{impl#0}::push)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:318 ~ unicode_bidi[2979]::TextSource::indices_lengths)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:226 ~ unicode_bidi[2979]::explicit::{impl#0}::last)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:226 ~ unicode_bidi[2979]::explicit::{impl#0}::last)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:203 ~ unicode_bidi[2979]::char_data::is_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:57 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:56 ~ unicode_bidi[2979]::level::{impl#0}::new_explicit_next_ltr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).243), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:38: 74:40 (#0) }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).244), kind: MethodCall(PathSegment { ident: is_ok#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).245), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).246), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:20: 74:29 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).240)), segments: [PathSegment { ident: new_level#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).247), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).240)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:20: 74:29 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:30: 74:37 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:20: 74:37 (#0) }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).248), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:64: 74:66 (#0) }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).249), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:41: 74:63 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).92)), segments: [PathSegment { ident: overflow_isolate_count#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).250), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).92)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:41: 74:63 (#0) }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).251), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:67: 74:68 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:67: 74:68 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:41: 74:68 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:20: 74:68 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).252), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:97: 74:99 (#0) }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).253), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:72: 74:96 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).96)), segments: [PathSegment { ident: overflow_embedding_count#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).254), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).96)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:72: 74:96 (#0) }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).255), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:100: 74:101 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:100: 74:101 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:72: 74:101 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).244), kind: MethodCall(PathSegment { ident: is_ok#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).245), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).246), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:20: 74:29 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).240)), segments: [PathSegment { ident: new_level#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).247), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).240)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:20: 74:29 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:30: 74:37 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:20: 74:37 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).248), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:64: 74:66 (#0) }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).249), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:41: 74:63 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).92)), segments: [PathSegment { ident: overflow_isolate_count#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).250), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).92)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:41: 74:63 (#0) }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).251), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:67: 74:68 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:67: 74:68 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:41: 74:68 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:10385 ~ core[7d5a]::result::{impl#0}::is_ok)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).249), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:41: 74:63 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).92)), segments: [PathSegment { ident: overflow_isolate_count#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).250), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).92)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:41: 74:63 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).251), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:67: 74:68 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:67: 74:68 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).253), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:72: 74:96 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).96)), segments: [PathSegment { ident: overflow_embedding_count#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).254), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).96)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:72: 74:96 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).255), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:100: 74:101 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:74:100: 74:101 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10419 ~ core[7d5a]::result::{impl#0}::unwrap)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:225 ~ unicode_bidi[2979]::explicit::{impl#0}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).342), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:95:27: 95:49 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).92)), segments: [PathSegment { ident: overflow_isolate_count#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).343), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).92)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:95:27: 95:49 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).344), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:95:53: 95:54 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:95:53: 95:54 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).377), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:109:20: 109:42 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).92)), segments: [PathSegment { ident: overflow_isolate_count#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).378), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).92)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:109:20: 109:42 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).379), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:109:45: 109:46 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:109:45: 109:46 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).390), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:111:27: 111:46 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).100)), segments: [PathSegment { ident: valid_isolate_count#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).391), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).100)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:111:27: 111:46 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).392), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:111:49: 111:50 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:111:49: 111:50 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7504 ~ alloc[5873]::vec::{impl#1}::pop)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:226 ~ unicode_bidi[2979]::explicit::{impl#0}::last)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).488), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:137:20: 137:42 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).92)), segments: [PathSegment { ident: overflow_isolate_count#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).489), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).92)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:137:20: 137:42 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).490), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:137:45: 137:46 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:137:45: 137:46 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).496), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:139:27: 139:51 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).96)), segments: [PathSegment { ident: overflow_embedding_count#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).497), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).96)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:139:27: 139:51 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).498), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:139:54: 139:55 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:139:54: 139:55 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).509), kind: Binary(Spanned { node: Ne, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:47: 141:49 (#0) }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).510), kind: Field(Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).511), kind: MethodCall(PathSegment { ident: last#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).512), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).513), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:27: 141:32 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).78)), segments: [PathSegment { ident: stack#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).514), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).78)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:27: 141:32 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:33: 141:39 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:27: 141:39 (#0) }, status#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:27: 141:46 (#0) }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).515), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:50: 141:73 (#0), res: Def(Ctor(Variant, Const), DefId(0:609 ~ unicode_bidi[2979]::explicit::OverrideStatus::Isolate::{constructor#0})), segments: [PathSegment { ident: OverrideStatus#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).516), res: Def(Enum, DefId(0:601 ~ unicode_bidi[2979]::explicit::OverrideStatus)), args: None, infer_args: true }, PathSegment { ident: Isolate#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).517), res: Def(Ctor(Variant, Const), DefId(0:609 ~ unicode_bidi[2979]::explicit::OverrideStatus::Isolate::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:50: 141:73 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:27: 141:73 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).518), kind: Binary(Spanned { node: Ge, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:93: 141:95 (#0) }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).519), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).520), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).521), kind: Field(Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).522), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:77: 141:82 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).78)), segments: [PathSegment { ident: stack#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).523), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).78)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:77: 141:82 (#0) }, vec#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:77: 141:86 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:87: 141:92 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:77: 141:92 (#0) }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).524), kind: Lit(Spanned { node: Int(Pu128(2), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:96: 141:97 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:96: 141:97 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:77: 141:97 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).510), kind: Field(Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).511), kind: MethodCall(PathSegment { ident: last#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).512), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).513), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:27: 141:32 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).78)), segments: [PathSegment { ident: stack#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).514), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).78)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:27: 141:32 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:33: 141:39 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:27: 141:39 (#0) }, status#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:27: 141:46 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).515), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:50: 141:73 (#0), res: Def(Ctor(Variant, Const), DefId(0:609 ~ unicode_bidi[2979]::explicit::OverrideStatus::Isolate::{constructor#0})), segments: [PathSegment { ident: OverrideStatus#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).516), res: Def(Enum, DefId(0:601 ~ unicode_bidi[2979]::explicit::OverrideStatus)), args: None, infer_args: true }, PathSegment { ident: Isolate#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).517), res: Def(Ctor(Variant, Const), DefId(0:609 ~ unicode_bidi[2979]::explicit::OverrideStatus::Isolate::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:50: 141:73 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:226 ~ unicode_bidi[2979]::explicit::{impl#0}::last)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).519), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).520), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).521), kind: Field(Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).522), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:77: 141:82 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).78)), segments: [PathSegment { ident: stack#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).523), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).78)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:77: 141:82 (#0) }, vec#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:77: 141:86 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:87: 141:92 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:77: 141:92 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).524), kind: Lit(Spanned { node: Int(Pu128(2), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:96: 141:97 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:141:96: 141:97 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7504 ~ alloc[5873]::vec::{impl#1}::pop)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:226 ~ unicode_bidi[2979]::explicit::{impl#0}::last)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:226 ~ unicode_bidi[2979]::explicit::{impl#0}::last)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).584), kind: Index(Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).585), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:160:20: 160:36 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).6)), segments: [PathSegment { ident: original_classes#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).586), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:160:20: 160:36 (#0) }, Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).587), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:160:37: 160:38 (#0), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).105)), segments: [PathSegment { ident: i#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).588), res: Local(HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).105)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:160:37: 160:38 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:160:36: 160:39 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:160:20: 160:39 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).589), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:160:43: 160:45 (#0), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), segments: [PathSegment { ident: BN#0, hir_id: HirId(DefId(0:215 ~ unicode_bidi[2979]::explicit::compute).590), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:160:43: 160:45 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:612 ~ unicode_bidi[2979]::explicit::{impl#2}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:612 ~ unicode_bidi[2979]::explicit::{impl#2}::eq).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:184:10: 184:19 (#63), res: Local(HirId(DefId(0:612 ~ unicode_bidi[2979]::explicit::{impl#2}::eq).14)), segments: [PathSegment { ident: __self_discr#63, hir_id: HirId(DefId(0:612 ~ unicode_bidi[2979]::explicit::{impl#2}::eq).27), res: Local(HirId(DefId(0:612 ~ unicode_bidi[2979]::explicit::{impl#2}::eq).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:184:10: 184:19 (#63) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:612 ~ unicode_bidi[2979]::explicit::{impl#2}::eq).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:184:10: 184:19 (#63), res: Local(HirId(DefId(0:612 ~ unicode_bidi[2979]::explicit::{impl#2}::eq).24)), segments: [PathSegment { ident: __arg1_discr#63, hir_id: HirId(DefId(0:612 ~ unicode_bidi[2979]::explicit::{impl#2}::eq).29), res: Local(HirId(DefId(0:612 ~ unicode_bidi[2979]::explicit::{impl#2}::eq).24)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:184:10: 184:19 (#63) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:224 ~ unicode_bidi[2979]::explicit::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7425 ~ alloc[5873]::vec::{impl#0}::with_capacity)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:224 ~ unicode_bidi[2979]::explicit::{impl#0}::new).10), kind: Cast(Expr { hir_id: HirId(DefId(0:224 ~ unicode_bidi[2979]::explicit::{impl#0}::new).11), kind: Call(Expr { hir_id: HirId(DefId(0:224 ~ unicode_bidi[2979]::explicit::{impl#0}::new).12), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:224 ~ unicode_bidi[2979]::explicit::{impl#0}::new).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:199:37: 199:42 (#0), res: Def(Struct, DefId(0:434 ~ unicode_bidi[2979]::level::Level)), segments: [PathSegment { ident: Level#0, hir_id: HirId(DefId(0:224 ~ unicode_bidi[2979]::explicit::{impl#0}::new).13), res: Def(Struct, DefId(0:434 ~ unicode_bidi[2979]::level::Level)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:199:37: 199:42 (#0) }, PathSegment { ident: max_explicit_depth#0, hir_id: HirId(DefId(0:224 ~ unicode_bidi[2979]::explicit::{impl#0}::new).15), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:199:37: 199:62 (#0) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:199:37: 199:64 (#0) }, Ty { hir_id: HirId(DefId(0:224 ~ unicode_bidi[2979]::explicit::{impl#0}::new).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:199:68: 199:73 (#0), res: PrimTy(Uint(Usize)), segments: [PathSegment { ident: usize#0, hir_id: HirId(DefId(0:224 ~ unicode_bidi[2979]::explicit::{impl#0}::new).17), res: PrimTy(Uint(Usize)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:199:68: 199:73 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:199:37: 199:73 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:224 ~ unicode_bidi[2979]::explicit::{impl#0}::new).18), kind: Lit(Spanned { node: Int(Pu128(2), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:199:76: 199:77 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/explicit.rs:199:76: 199:77 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:47 ~ unicode_bidi[2979]::level::{impl#0}::max_explicit_depth)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:225 ~ unicode_bidi[2979]::explicit::{impl#0}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:226 ~ unicode_bidi[2979]::explicit::{impl#0}::last)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9670 ~ core[7d5a]::option::{impl#0}::unwrap)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13236 ~ core[7d5a]::slice::{impl#0}::last)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:8925 ~ core[7d5a]::iter::traits::iterator::Iterator::enumerate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).75), kind: Index(Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).76), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:47:16: 47:34 (#0), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).6)), segments: [PathSegment { ident: processing_classes#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).77), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:47:16: 47:34 (#0) }, Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).78), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:47:35: 47:36 (#0), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).66)), segments: [PathSegment { ident: i#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).79), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).66)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:47:35: 47:36 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:47:34: 47:37 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:47:16: 47:37 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).80), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:47:41: 47:43 (#0), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), segments: [PathSegment { ident: BN#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).81), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:47:41: 47:43 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).105), kind: Index(Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).106), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:63:16: 63:34 (#0), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).6)), segments: [PathSegment { ident: processing_classes#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).107), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:63:16: 63:34 (#0) }, Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).108), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:63:35: 63:36 (#0), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).66)), segments: [PathSegment { ident: i#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).109), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).66)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:63:35: 63:36 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:63:34: 63:37 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:63:16: 63:37 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).110), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:63:41: 63:44 (#0), res: Def(Ctor(Variant, Const), DefId(0:572 ~ unicode_bidi[2979]::char_data::tables::BidiClass::NSM::{constructor#0})), segments: [PathSegment { ident: NSM#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).111), res: Def(Ctor(Variant, Const), DefId(0:572 ~ unicode_bidi[2979]::char_data::tables::BidiClass::NSM::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:63:41: 63:44 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7511 ~ alloc[5873]::vec::{impl#1}::clear)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:314 ~ unicode_bidi[2979]::TextSource::char_at)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:9671 ~ core[7d5a]::option::{impl#0}::unwrap_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9022 ~ core[7d5a]::iter::traits::iterator::Iterator::find)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:8910 ~ core[7d5a]::iter::traits::iterator::Iterator::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).327), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:125:49: 125:50 (#0), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).66)), segments: [PathSegment { ident: i#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).328), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).66)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:125:49: 125:50 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).329), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:125:53: 125:61 (#0), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).306)), segments: [PathSegment { ident: char_len#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).330), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).306)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:125:53: 125:61 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:285 ~ unicode_bidi[2979]::prepare::not_removed_by_x9)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).351), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:130:39: 130:41 (#0) }, Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).352), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:130:28: 130:38 (#0), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).348)), segments: [PathSegment { ident: next_class#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).353), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).348)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:130:28: 130:38 (#0) }, Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).354), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:130:42: 130:44 (#0), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), segments: [PathSegment { ident: EN#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).355), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:130:42: 130:44 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:130:28: 130:44 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).356), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:130:48: 130:65 (#0), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).28)), segments: [PathSegment { ident: last_strong_is_al#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).357), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).28)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:130:48: 130:65 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).352), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:130:28: 130:38 (#0), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).348)), segments: [PathSegment { ident: next_class#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).353), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).348)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:130:28: 130:38 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).354), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:130:42: 130:44 (#0), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), segments: [PathSegment { ident: EN#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).355), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:130:42: 130:44 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).423), kind: Index(Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).424), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:151:28: 151:46 (#0), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).6)), segments: [PathSegment { ident: processing_classes#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).425), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:151:28: 151:46 (#0) }, Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).426), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:151:47: 151:48 (#0), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).66)), segments: [PathSegment { ident: i#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).427), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).66)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:151:47: 151:48 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:151:46: 151:49 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:151:28: 151:49 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).428), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:151:53: 151:55 (#0), res: Def(Ctor(Variant, Const), DefId(0:574 ~ unicode_bidi[2979]::char_data::tables::BidiClass::ON::{constructor#0})), segments: [PathSegment { ident: ON#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).429), res: Def(Ctor(Variant, Const), DefId(0:574 ~ unicode_bidi[2979]::char_data::tables::BidiClass::ON::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:151:53: 151:55 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).457), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).458), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:154:37: 154:42 (#0), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).454)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).459), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).454)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:154:37: 154:42 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:154:36: 154:42 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).460), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:154:46: 154:48 (#0), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), segments: [PathSegment { ident: BN#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).461), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:154:46: 154:48 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).498), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:159:68: 159:69 (#0), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).66)), segments: [PathSegment { ident: i#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).499), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).66)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:159:68: 159:69 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).500), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:159:72: 159:80 (#0), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).306)), segments: [PathSegment { ident: char_len#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).501), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).306)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:159:72: 159:80 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).522), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).523), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:161:37: 161:42 (#0), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).519)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).524), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).519)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:161:37: 161:42 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:161:36: 161:42 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).525), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:161:46: 161:48 (#0), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), segments: [PathSegment { ident: BN#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).526), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:161:46: 161:48 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7511 ~ alloc[5873]::vec::{impl#1}::clear)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).637), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:204:16: 204:36 (#0), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).18)), segments: [PathSegment { ident: prev_class_before_w5#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).638), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).18)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:204:16: 204:36 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).639), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:204:40: 204:42 (#0), res: Def(Ctor(Variant, Const), DefId(0:560 ~ unicode_bidi[2979]::char_data::tables::BidiClass::ET::{constructor#0})), segments: [PathSegment { ident: ET#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).640), res: Def(Ctor(Variant, Const), DefId(0:560 ~ unicode_bidi[2979]::char_data::tables::BidiClass::ET::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:204:40: 204:42 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7511 ~ alloc[5873]::vec::{impl#1}::clear)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7511 ~ alloc[5873]::vec::{impl#1}::clear)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).774), kind: Field(Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).775), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:226:32: 226:40 (#0), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).4)), segments: [PathSegment { ident: sequence#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).776), res: Local(HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:226:32: 226:40 (#0) }, sos#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:226:32: 226:44 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).777), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:226:48: 226:49 (#0), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), segments: [PathSegment { ident: L#0, hir_id: HirId(DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak).778), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:226:48: 226:49 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:59 ~ unicode_bidi[2979]::level::{impl#0}::bidi_class)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).32), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:261:20: 261:21 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).28)), segments: [PathSegment { ident: e#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).33), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).28)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:261:20: 261:21 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).34), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:261:25: 261:37 (#0), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).35), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: L#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).36), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:261:25: 261:37 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).79), kind: Field(Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).80), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:279:13: 279:17 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).66)), segments: [PathSegment { ident: pair#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).81), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).66)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:279:13: 279:17 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:279:13: 279:23 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).82), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).83), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).84), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:279:26: 279:44 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), segments: [PathSegment { ident: processing_classes#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).85), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:279:26: 279:44 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:279:45: 279:50 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:279:26: 279:50 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).105), kind: Field(Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).106), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:284:13: 284:17 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).66)), segments: [PathSegment { ident: pair#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).107), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).66)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:284:13: 284:17 (#0) }, end#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:284:13: 284:21 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).108), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).109), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).110), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:284:24: 284:42 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), segments: [PathSegment { ident: processing_classes#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).111), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:284:24: 284:42 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:284:43: 284:48 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:284:24: 284:48 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:319 ~ unicode_bidi[2979]::TextSource::char_len)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:9670 ~ core[7d5a]::option::{impl#0}::unwrap)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:316 ~ unicode_bidi[2979]::TextSource::chars)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:315 ~ unicode_bidi[2979]::TextSource::subrange)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).170), kind: Field(Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).171), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:297:55: 297:59 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).66)), segments: [PathSegment { ident: pair#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).172), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).66)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:297:55: 297:59 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:297:55: 297:65 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).173), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:297:68: 297:82 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).164)), segments: [PathSegment { ident: start_char_len#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).174), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).164)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:297:68: 297:82 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).187), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:298:16: 298:26 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).178)), segments: [PathSegment { ident: enclosed_i#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).188), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).178)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:298:16: 298:26 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).189), kind: Field(Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).190), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:298:30: 298:34 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).66)), segments: [PathSegment { ident: pair#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).191), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).66)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:298:30: 298:34 (#0) }, end#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:298:30: 298:38 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).199), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:301:21: 301:31 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).178)), segments: [PathSegment { ident: enclosed_i#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).200), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).178)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:301:21: 301:31 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).201), kind: Field(Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).202), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:301:35: 301:39 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).66)), segments: [PathSegment { ident: pair#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).203), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).66)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:301:35: 301:39 (#0) }, end#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:301:35: 301:43 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).232), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:307:16: 307:21 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).229)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).233), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).229)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:307:16: 307:21 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).234), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:307:25: 307:26 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).28)), segments: [PathSegment { ident: e#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).235), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).28)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:307:25: 307:26 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).246), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:309:23: 309:28 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).229)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).247), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).229)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:309:23: 309:28 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).248), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:309:32: 309:37 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).49)), segments: [PathSegment { ident: not_e#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).249), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).49)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:309:32: 309:37 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).260), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:29: 311:31 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).261), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:23: 311:28 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).229)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).262), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).229)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:23: 311:28 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).263), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:32: 311:45 (#0), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).264), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: EN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).265), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:32: 311:45 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:23: 311:45 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).266), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:55: 311:57 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).267), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:49: 311:54 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).229)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).268), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).229)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:49: 311:54 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).269), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:58: 311:71 (#0), res: Def(Ctor(Variant, Const), DefId(0:548 ~ unicode_bidi[2979]::char_data::tables::BidiClass::AN::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).270), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: AN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).271), res: Def(Ctor(Variant, Const), DefId(0:548 ~ unicode_bidi[2979]::char_data::tables::BidiClass::AN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:58: 311:71 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:49: 311:71 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).261), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:23: 311:28 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).229)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).262), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).229)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:23: 311:28 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).263), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:32: 311:45 (#0), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).264), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: EN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).265), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:32: 311:45 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).267), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:49: 311:54 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).229)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).268), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).229)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:49: 311:54 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).269), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:58: 311:71 (#0), res: Def(Ctor(Variant, Const), DefId(0:548 ~ unicode_bidi[2979]::char_data::tables::BidiClass::AN::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).270), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: AN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).271), res: Def(Ctor(Variant, Const), DefId(0:548 ~ unicode_bidi[2979]::char_data::tables::BidiClass::AN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:311:58: 311:71 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).275), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:313:20: 313:21 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).28)), segments: [PathSegment { ident: e#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).276), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).28)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:313:20: 313:21 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).277), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:313:25: 313:37 (#0), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).278), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: L#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).279), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:313:25: 313:37 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:9671 ~ core[7d5a]::option::{impl#0}::unwrap_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9022 ~ core[7d5a]::iter::traits::iterator::Iterator::find)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8910 ~ core[7d5a]::iter::traits::iterator::Iterator::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).374), kind: Binary(Spanned { node: Or, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:25: 342:27 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).375), kind: Binary(Spanned { node: Or, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:25: 341:27 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).376), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:28: 340:30 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).377), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).378), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:22: 340:27 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).379), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:22: 340:27 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:21: 340:27 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).380), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:31: 340:43 (#0), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).381), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: L#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).382), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:31: 340:43 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:21: 340:43 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).383), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:35: 341:37 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).384), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).385), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:29: 341:34 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).386), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:29: 341:34 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:28: 341:34 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).387), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:38: 341:50 (#0), res: Def(Ctor(Variant, Const), DefId(0:580 ~ unicode_bidi[2979]::char_data::tables::BidiClass::R::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).388), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: R#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).389), res: Def(Ctor(Variant, Const), DefId(0:580 ~ unicode_bidi[2979]::char_data::tables::BidiClass::R::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:38: 341:50 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:28: 341:50 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:21: 341:50 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).390), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:35: 342:37 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).391), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).392), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:29: 342:34 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).393), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:29: 342:34 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:28: 342:34 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).394), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:38: 342:51 (#0), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).395), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: EN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).396), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:38: 342:51 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:28: 342:51 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:21: 342:51 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).397), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:343:35: 343:37 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).398), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).399), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:343:29: 343:34 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).400), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:343:29: 343:34 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:343:28: 343:34 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).401), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:343:38: 343:51 (#0), res: Def(Ctor(Variant, Const), DefId(0:548 ~ unicode_bidi[2979]::char_data::tables::BidiClass::AN::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).402), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: AN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).403), res: Def(Ctor(Variant, Const), DefId(0:548 ~ unicode_bidi[2979]::char_data::tables::BidiClass::AN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:343:38: 343:51 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:343:28: 343:51 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).375), kind: Binary(Spanned { node: Or, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:25: 341:27 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).376), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:28: 340:30 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).377), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).378), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:22: 340:27 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).379), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:22: 340:27 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:21: 340:27 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).380), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:31: 340:43 (#0), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).381), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: L#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).382), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:31: 340:43 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:21: 340:43 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).383), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:35: 341:37 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).384), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).385), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:29: 341:34 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).386), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:29: 341:34 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:28: 341:34 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).387), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:38: 341:50 (#0), res: Def(Ctor(Variant, Const), DefId(0:580 ~ unicode_bidi[2979]::char_data::tables::BidiClass::R::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).388), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: R#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).389), res: Def(Ctor(Variant, Const), DefId(0:580 ~ unicode_bidi[2979]::char_data::tables::BidiClass::R::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:38: 341:50 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:28: 341:50 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:21: 341:50 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).390), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:35: 342:37 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).391), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).392), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:29: 342:34 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).393), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:29: 342:34 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:28: 342:34 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).394), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:38: 342:51 (#0), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).395), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: EN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).396), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:38: 342:51 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:28: 342:51 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).376), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:28: 340:30 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).377), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).378), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:22: 340:27 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).379), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:22: 340:27 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:21: 340:27 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).380), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:31: 340:43 (#0), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).381), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: L#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).382), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:31: 340:43 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:21: 340:43 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).383), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:35: 341:37 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).384), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).385), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:29: 341:34 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).386), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:29: 341:34 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:28: 341:34 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).387), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:38: 341:50 (#0), res: Def(Ctor(Variant, Const), DefId(0:580 ~ unicode_bidi[2979]::char_data::tables::BidiClass::R::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).388), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: R#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).389), res: Def(Ctor(Variant, Const), DefId(0:580 ~ unicode_bidi[2979]::char_data::tables::BidiClass::R::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:38: 341:50 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:28: 341:50 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).377), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).378), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:22: 340:27 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).379), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:22: 340:27 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:21: 340:27 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).380), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:31: 340:43 (#0), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).381), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: L#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).382), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:340:31: 340:43 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).384), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).385), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:29: 341:34 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).386), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:29: 341:34 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:28: 341:34 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).387), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:38: 341:50 (#0), res: Def(Ctor(Variant, Const), DefId(0:580 ~ unicode_bidi[2979]::char_data::tables::BidiClass::R::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).388), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: R#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).389), res: Def(Ctor(Variant, Const), DefId(0:580 ~ unicode_bidi[2979]::char_data::tables::BidiClass::R::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:341:38: 341:50 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).391), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).392), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:29: 342:34 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).393), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:29: 342:34 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:28: 342:34 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).394), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:38: 342:51 (#0), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).395), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: EN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).396), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:342:38: 342:51 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).398), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).399), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:343:29: 343:34 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).400), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).371)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:343:29: 343:34 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:343:28: 343:34 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).401), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:343:38: 343:51 (#0), res: Def(Ctor(Variant, Const), DefId(0:548 ~ unicode_bidi[2979]::char_data::tables::BidiClass::AN::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).402), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: AN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).403), res: Def(Ctor(Variant, Const), DefId(0:548 ~ unicode_bidi[2979]::char_data::tables::BidiClass::AN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:343:38: 343:51 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).413), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:32: 348:34 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).414), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:16: 348:31 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).410)), segments: [PathSegment { ident: previous_strong#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).415), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).410)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:16: 348:31 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).416), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:35: 348:48 (#0), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).417), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: EN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).418), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:35: 348:48 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:16: 348:48 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).419), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:68: 348:70 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).420), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:52: 348:67 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).410)), segments: [PathSegment { ident: previous_strong#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).421), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).410)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:52: 348:67 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).422), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:71: 348:84 (#0), res: Def(Ctor(Variant, Const), DefId(0:548 ~ unicode_bidi[2979]::char_data::tables::BidiClass::AN::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).423), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: AN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).424), res: Def(Ctor(Variant, Const), DefId(0:548 ~ unicode_bidi[2979]::char_data::tables::BidiClass::AN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:71: 348:84 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:52: 348:84 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).414), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:16: 348:31 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).410)), segments: [PathSegment { ident: previous_strong#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).415), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).410)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:16: 348:31 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).416), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:35: 348:48 (#0), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).417), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: EN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).418), res: Def(Ctor(Variant, Const), DefId(0:556 ~ unicode_bidi[2979]::char_data::tables::BidiClass::EN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:35: 348:48 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).420), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:52: 348:67 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).410)), segments: [PathSegment { ident: previous_strong#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).421), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).410)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:52: 348:67 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).422), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:71: 348:84 (#0), res: Def(Ctor(Variant, Const), DefId(0:548 ~ unicode_bidi[2979]::char_data::tables::BidiClass::AN::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).423), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: AN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).424), res: Def(Ctor(Variant, Const), DefId(0:548 ~ unicode_bidi[2979]::char_data::tables::BidiClass::AN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:348:71: 348:84 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:319 ~ unicode_bidi[2979]::TextSource::char_len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9670 ~ core[7d5a]::option::{impl#0}::unwrap)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:316 ~ unicode_bidi[2979]::TextSource::chars)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:315 ~ unicode_bidi[2979]::TextSource::subrange)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:313 ~ unicode_bidi[2979]::TextSource::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:313 ~ unicode_bidi[2979]::TextSource::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).607), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).608), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:377:21: 377:26 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).604)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).609), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).604)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:377:21: 377:26 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:377:20: 377:26 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).610), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:377:30: 377:32 (#0), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), segments: [PathSegment { ident: BN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).611), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:377:30: 377:32 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).645), kind: Field(Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).646), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:387:29: 387:33 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).66)), segments: [PathSegment { ident: pair#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).647), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).66)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:387:29: 387:33 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:387:29: 387:39 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).648), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:387:42: 387:56 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).164)), segments: [PathSegment { ident: start_char_len#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).649), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).164)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:387:42: 387:56 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).678), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:26: 390:28 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).679), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:20: 390:25 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).675)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).680), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).675)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:20: 390:25 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).681), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:29: 390:43 (#0), res: Def(Ctor(Variant, Const), DefId(0:572 ~ unicode_bidi[2979]::char_data::tables::BidiClass::NSM::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).682), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: NSM#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).683), res: Def(Ctor(Variant, Const), DefId(0:572 ~ unicode_bidi[2979]::char_data::tables::BidiClass::NSM::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:29: 390:43 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:20: 390:43 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).684), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:71: 390:73 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).685), kind: Index(Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).686), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:47: 390:65 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), segments: [PathSegment { ident: processing_classes#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).687), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:47: 390:65 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).688), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:66: 390:69 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).661)), segments: [PathSegment { ident: idx#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).689), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).661)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:66: 390:69 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:65: 390:70 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:47: 390:70 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).690), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:74: 390:76 (#0), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), segments: [PathSegment { ident: BN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).691), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:74: 390:76 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:47: 390:76 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).679), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:20: 390:25 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).675)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).680), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).675)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:20: 390:25 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).681), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:29: 390:43 (#0), res: Def(Ctor(Variant, Const), DefId(0:572 ~ unicode_bidi[2979]::char_data::tables::BidiClass::NSM::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).682), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: NSM#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).683), res: Def(Ctor(Variant, Const), DefId(0:572 ~ unicode_bidi[2979]::char_data::tables::BidiClass::NSM::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:29: 390:43 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).685), kind: Index(Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).686), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:47: 390:65 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), segments: [PathSegment { ident: processing_classes#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).687), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:47: 390:65 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).688), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:66: 390:69 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).661)), segments: [PathSegment { ident: idx#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).689), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).661)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:66: 390:69 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:65: 390:70 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:47: 390:70 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).690), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:74: 390:76 (#0), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), segments: [PathSegment { ident: BN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).691), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:390:74: 390:76 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).728), kind: Field(Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).729), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:396:27: 396:31 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).66)), segments: [PathSegment { ident: pair#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).730), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).66)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:396:27: 396:31 (#0) }, end#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:396:27: 396:35 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).731), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:396:38: 396:50 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).482)), segments: [PathSegment { ident: end_char_len#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).732), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).482)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:396:38: 396:50 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).761), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:26: 399:28 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).762), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:20: 399:25 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).758)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).763), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).758)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:20: 399:25 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).764), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:29: 399:43 (#0), res: Def(Ctor(Variant, Const), DefId(0:572 ~ unicode_bidi[2979]::char_data::tables::BidiClass::NSM::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).765), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: NSM#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).766), res: Def(Ctor(Variant, Const), DefId(0:572 ~ unicode_bidi[2979]::char_data::tables::BidiClass::NSM::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:29: 399:43 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:20: 399:43 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).767), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:71: 399:73 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).768), kind: Index(Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).769), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:47: 399:65 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), segments: [PathSegment { ident: processing_classes#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).770), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:47: 399:65 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).771), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:66: 399:69 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).744)), segments: [PathSegment { ident: idx#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).772), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).744)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:66: 399:69 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:65: 399:70 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:47: 399:70 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).773), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:74: 399:76 (#0), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), segments: [PathSegment { ident: BN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).774), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:74: 399:76 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:47: 399:76 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).762), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:20: 399:25 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).758)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).763), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).758)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:20: 399:25 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).764), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:29: 399:43 (#0), res: Def(Ctor(Variant, Const), DefId(0:572 ~ unicode_bidi[2979]::char_data::tables::BidiClass::NSM::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).765), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: NSM#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).766), res: Def(Ctor(Variant, Const), DefId(0:572 ~ unicode_bidi[2979]::char_data::tables::BidiClass::NSM::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:29: 399:43 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).768), kind: Index(Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).769), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:47: 399:65 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), segments: [PathSegment { ident: processing_classes#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).770), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:47: 399:65 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).771), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:66: 399:69 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).744)), segments: [PathSegment { ident: idx#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).772), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).744)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:66: 399:69 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:65: 399:70 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:47: 399:70 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).773), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:74: 399:76 (#0), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), segments: [PathSegment { ident: BN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).774), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:399:74: 399:76 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:8940 ~ core[7d5a]::iter::traits::iterator::Iterator::flat_map)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).866), kind: Call(Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).867), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:12: 418:17 (#0), res: Def(Fn, DefId(0:261 ~ unicode_bidi[2979]::implicit::is_NI)), segments: [PathSegment { ident: is_NI#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).868), res: Def(Fn, DefId(0:261 ~ unicode_bidi[2979]::implicit::is_NI)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:12: 418:17 (#0) }, [Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).869), kind: Index(Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).870), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:18: 418:36 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), segments: [PathSegment { ident: processing_classes#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).871), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:18: 418:36 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).872), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:37: 418:38 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).850)), segments: [PathSegment { ident: i#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).873), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).850)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:37: 418:38 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:36: 418:39 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:18: 418:39 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:12: 418:40 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).874), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:66: 418:68 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).875), kind: Index(Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).876), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:44: 418:62 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), segments: [PathSegment { ident: processing_classes#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).877), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:44: 418:62 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).878), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:63: 418:64 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).850)), segments: [PathSegment { ident: i#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).879), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).850)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:63: 418:64 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:62: 418:65 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:44: 418:65 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).880), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:69: 418:71 (#0), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), segments: [PathSegment { ident: BN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).881), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:69: 418:71 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:44: 418:71 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:261 ~ unicode_bidi[2979]::implicit::is_NI)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).875), kind: Index(Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).876), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:44: 418:62 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), segments: [PathSegment { ident: processing_classes#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).877), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:44: 418:62 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).878), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:63: 418:64 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).850)), segments: [PathSegment { ident: i#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).879), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).850)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:63: 418:64 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:62: 418:65 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:44: 418:65 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).880), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:69: 418:71 (#0), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), segments: [PathSegment { ident: BN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).881), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:418:69: 418:71 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).921), kind: Call(Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).922), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:428:28: 428:33 (#0), res: Def(Fn, DefId(0:261 ~ unicode_bidi[2979]::implicit::is_NI)), segments: [PathSegment { ident: is_NI#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).923), res: Def(Fn, DefId(0:261 ~ unicode_bidi[2979]::implicit::is_NI)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:428:28: 428:33 (#0) }, [Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).924), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:428:34: 428:44 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).892)), segments: [PathSegment { ident: next_class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).925), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).892)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:428:34: 428:44 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:428:28: 428:45 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).926), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:428:60: 428:62 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).927), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:428:49: 428:59 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).892)), segments: [PathSegment { ident: next_class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).928), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).892)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:428:49: 428:59 (#0) }, Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).929), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:428:63: 428:65 (#0), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), segments: [PathSegment { ident: BN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).930), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:428:63: 428:65 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:428:49: 428:65 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:261 ~ unicode_bidi[2979]::implicit::is_NI)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).927), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:428:49: 428:59 (#0), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).892)), segments: [PathSegment { ident: next_class#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).928), res: Local(HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).892)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:428:49: 428:59 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).929), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:428:63: 428:65 (#0), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), segments: [PathSegment { ident: BN#0, hir_id: HirId(DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral).930), res: Def(Ctor(Variant, Const), DefId(0:552 ~ unicode_bidi[2979]::char_data::tables::BidiClass::BN::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:428:63: 428:65 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7511 ~ alloc[5873]::vec::{impl#1}::clear)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:8925 ~ core[7d5a]::iter::traits::iterator::Iterator::enumerate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:317 ~ unicode_bidi[2979]::TextSource::char_indices)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:315 ~ unicode_bidi[2979]::TextSource::subrange)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).66), kind: Field(Expr { hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).67), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:493:32: 493:41 (#0), res: Local(HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).37)), segments: [PathSegment { ident: level_run#0, hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).68), res: Local(HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).37)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:493:32: 493:41 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:493:32: 493:47 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).69), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:493:50: 493:51 (#0), res: Local(HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).55)), segments: [PathSegment { ident: i#0, hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).70), res: Local(HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).55)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:493:50: 493:51 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).75), kind: Index(Expr { hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).76), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:499:16: 499:32 (#0), res: Local(HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).8)), segments: [PathSegment { ident: original_classes#0, hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).77), res: Local(HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).8)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:499:16: 499:32 (#0) }, Expr { hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).78), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:499:33: 499:45 (#0), res: Local(HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).72)), segments: [PathSegment { ident: actual_index#0, hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).79), res: Local(HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).72)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:499:33: 499:45 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:499:32: 499:46 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:499:16: 499:46 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).80), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:499:50: 499:63 (#0), res: Def(Ctor(Variant, Const), DefId(0:574 ~ unicode_bidi[2979]::char_data::tables::BidiClass::ON::{constructor#0})), segments: [PathSegment { ident: BidiClass#0, hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).81), res: Def(Enum, DefId(0:544 ~ unicode_bidi[2979]::char_data::tables::BidiClass)), args: None, infer_args: true }, PathSegment { ident: ON#0, hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).82), res: Def(Ctor(Variant, Const), DefId(0:574 ~ unicode_bidi[2979]::char_data::tables::BidiClass::ON::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:499:50: 499:63 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:10 ~ unicode_bidi[2979]::data_source::BidiDataSource::bidi_matched_opening_bracket)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).107), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).108), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).109), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:509:24: 509:29 (#0), res: Local(HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).28)), segments: [PathSegment { ident: stack#0, hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).110), res: Local(HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).28)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:509:24: 509:29 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:509:30: 509:35 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:509:24: 509:35 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).111), kind: Lit(Spanned { node: Int(Pu128(63), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:509:39: 509:41 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:509:39: 509:41 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9103 ~ core[7d5a]::iter::traits::iterator::Iterator::rev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8925 ~ core[7d5a]::iter::traits::iterator::Iterator::enumerate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).152), kind: Field(Expr { hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).153), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:524:28: 524:35 (#0), res: Local(HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).142)), segments: [PathSegment { ident: element#0, hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).154), res: Local(HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).142)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:524:28: 524:35 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:524:28: 524:37 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).155), kind: Field(Expr { hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).156), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:524:41: 524:48 (#0), res: Local(HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).92)), segments: [PathSegment { ident: matched#0, hir_id: HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).157), res: Local(HirId(DefId(0:255 ~ unicode_bidi[2979]::implicit::identify_bracket_pairs).92)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:524:41: 524:48 (#0) }, opening#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/implicit.rs:524:41: 524:56 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7447 ~ alloc[5873]::vec::{impl#1}::truncate)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(5:5726 ~ alloc[5873]::slice::{impl#0}::sort_by_key)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:260 ~ unicode_bidi[2979]::implicit::resolve_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:44 ~ unicode_bidi[2979]::level::{impl#0}::ltr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:260 ~ unicode_bidi[2979]::implicit::resolve_levels).33), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:260 ~ unicode_bidi[2979]::implicit::resolve_levels).34), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#84), res: Local(HirId(DefId(0:260 ~ unicode_bidi[2979]::implicit::resolve_levels).25)), segments: [PathSegment { ident: left_val#84, hir_id: HirId(DefId(0:260 ~ unicode_bidi[2979]::implicit::resolve_levels).35), res: Local(HirId(DefId(0:260 ~ unicode_bidi[2979]::implicit::resolve_levels).25)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#84) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:22: 46:31 (#84) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:260 ~ unicode_bidi[2979]::implicit::resolve_levels).36), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:260 ~ unicode_bidi[2979]::implicit::resolve_levels).37), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#84), res: Local(HirId(DefId(0:260 ~ unicode_bidi[2979]::implicit::resolve_levels).26)), segments: [PathSegment { ident: right_val#84, hir_id: HirId(DefId(0:260 ~ unicode_bidi[2979]::implicit::resolve_levels).38), res: Local(HirId(DefId(0:260 ~ unicode_bidi[2979]::implicit::resolve_levels).26)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#84) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:35: 46:45 (#84) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10038 ~ core[7d5a]::panicking::assert_failed)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:10418 ~ core[7d5a]::result::{impl#0}::expect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:53 ~ unicode_bidi[2979]::level::{impl#0}::raise)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:10418 ~ core[7d5a]::result::{impl#0}::expect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:53 ~ unicode_bidi[2979]::level::{impl#0}::raise)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:3024 ~ core[7d5a]::cmp::max)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:261 ~ unicode_bidi[2979]::implicit::is_NI)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:618 ~ unicode_bidi[2979]::prepare::{impl#1}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11200 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field3_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).6), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:30:5: 30:23 (#86) }, Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).7), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:29:5: 29:28 (#86) }, Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).8), kind: Field(Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:17 (#86), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).10), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86) }, runs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:29:5: 29:28 (#86) }, Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).11), kind: Field(Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).4)), segments: [PathSegment { ident: other#86, hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).13), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86) }, runs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:29:5: 29:28 (#86) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:29:5: 29:28 (#86) }, Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).14), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:30:5: 30:23 (#86) }, Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).15), kind: Field(Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:17 (#86), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).17), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86) }, sos#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:30:5: 30:23 (#86) }, Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).18), kind: Field(Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).19), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).4)), segments: [PathSegment { ident: other#86, hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).20), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86) }, sos#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:30:5: 30:23 (#86) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:30:5: 30:23 (#86) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:30:5: 30:23 (#86) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).21), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:31:5: 31:23 (#86) }, Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).22), kind: Field(Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).23), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:17 (#86), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).24), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86) }, eos#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:31:5: 31:23 (#86) }, Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).25), kind: Field(Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).4)), segments: [PathSegment { ident: other#86, hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).27), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86) }, eos#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:31:5: 31:23 (#86) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:31:5: 31:23 (#86) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).7), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:29:5: 29:28 (#86) }, Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).8), kind: Field(Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:17 (#86), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).10), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86) }, runs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:29:5: 29:28 (#86) }, Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).11), kind: Field(Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).4)), segments: [PathSegment { ident: other#86, hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).13), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86) }, runs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:29:5: 29:28 (#86) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:29:5: 29:28 (#86) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).14), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:30:5: 30:23 (#86) }, Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).15), kind: Field(Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:17 (#86), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).17), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86) }, sos#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:30:5: 30:23 (#86) }, Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).18), kind: Field(Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).19), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).4)), segments: [PathSegment { ident: other#86, hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).20), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86) }, sos#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:30:5: 30:23 (#86) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:30:5: 30:23 (#86) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).8), kind: Field(Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:17 (#86), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).10), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86) }, runs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:29:5: 29:28 (#86) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).11), kind: Field(Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).4)), segments: [PathSegment { ident: other#86, hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).13), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86) }, runs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:29:5: 29:28 (#86) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).15), kind: Field(Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:17 (#86), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).17), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86) }, sos#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:30:5: 30:23 (#86) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).18), kind: Field(Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).19), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).4)), segments: [PathSegment { ident: other#86, hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).20), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86) }, sos#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:30:5: 30:23 (#86) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).22), kind: Field(Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).23), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:17 (#86), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).24), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86) }, eos#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:31:5: 31:23 (#86) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).25), kind: Field(Expr { hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).4)), segments: [PathSegment { ident: other#86, hir_id: HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).27), res: Local(HirId(DefId(0:621 ~ unicode_bidi[2979]::prepare::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:27:17: 27:26 (#86) }, eos#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:31:5: 31:23 (#86) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7425 ~ alloc[5873]::vec::{impl#0}::with_capacity)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:5738 ~ alloc[5873]::slice::{impl#0}::into_vec)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(5:336 ~ alloc[5873]::boxed::{impl#0}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).62), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).63), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).64), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:58:17: 58:20 (#0), res: Local(HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).52)), segments: [PathSegment { ident: run#0, hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).65), res: Local(HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).52)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:58:17: 58:20 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:58:21: 58:26 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:58:17: 58:26 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).66), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:58:29: 58:30 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:58:29: 58:30 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:8837 ~ core[7d5a]::iter::traits::exact_size::ExactSizeIterator::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7513 ~ alloc[5873]::vec::{impl#1}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:9671 ~ core[7d5a]::option::{impl#0}::unwrap_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8920 ~ core[7d5a]::iter::traits::iterator::Iterator::filter)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:9103 ~ core[7d5a]::iter::traits::iterator::Iterator::rev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9109 ~ core[7d5a]::iter::traits::iterator::Iterator::copied)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:285 ~ unicode_bidi[2979]::prepare::not_removed_by_x9)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).137), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:43: 74:45 (#0) }, Expr { hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).138), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:31: 74:42 (#0), res: Local(HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).102)), segments: [PathSegment { ident: start_class#0, hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).139), res: Local(HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).102)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:31: 74:42 (#0) }, Expr { hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).140), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:46: 74:49 (#0), res: Def(Ctor(Variant, Const), DefId(0:578 ~ unicode_bidi[2979]::char_data::tables::BidiClass::PDI::{constructor#0})), segments: [PathSegment { ident: PDI#0, hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).141), res: Def(Ctor(Variant, Const), DefId(0:578 ~ unicode_bidi[2979]::char_data::tables::BidiClass::PDI::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:46: 74:49 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:31: 74:49 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).142), kind: Binary(Spanned { node: Gt, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:65: 74:66 (#0) }, Expr { hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).143), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).144), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).145), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:53: 74:58 (#0), res: Local(HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).49)), segments: [PathSegment { ident: stack#0, hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).146), res: Local(HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).49)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:53: 74:58 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:59: 74:64 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:53: 74:64 (#0) }, Expr { hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).147), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:67: 74:68 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:67: 74:68 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:53: 74:68 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).138), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:31: 74:42 (#0), res: Local(HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).102)), segments: [PathSegment { ident: start_class#0, hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).139), res: Local(HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).102)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:31: 74:42 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).140), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:46: 74:49 (#0), res: Def(Ctor(Variant, Const), DefId(0:578 ~ unicode_bidi[2979]::char_data::tables::BidiClass::PDI::{constructor#0})), segments: [PathSegment { ident: PDI#0, hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).141), res: Def(Ctor(Variant, Const), DefId(0:578 ~ unicode_bidi[2979]::char_data::tables::BidiClass::PDI::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:46: 74:49 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).143), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).144), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).145), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:53: 74:58 (#0), res: Local(HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).49)), segments: [PathSegment { ident: stack#0, hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).146), res: Local(HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).49)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:53: 74:58 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:59: 74:64 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:53: 74:64 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).147), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:67: 74:68 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:74:67: 74:68 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:9670 ~ core[7d5a]::option::{impl#0}::unwrap)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7504 ~ alloc[5873]::vec::{impl#1}::pop)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8920 ~ core[7d5a]::iter::traits::iterator::Iterator::filter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9103 ~ core[7d5a]::iter::traits::iterator::Iterator::rev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8709 ~ core[7d5a]::iter::traits::collect::IntoIterator::into_iter)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(5:7513 ~ alloc[5873]::vec::{impl#1}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8953 ~ core[7d5a]::iter::traits::iterator::Iterator::collect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8910 ~ core[7d5a]::iter::traits::iterator::Iterator::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8709 ~ core[7d5a]::iter::traits::collect::IntoIterator::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7513 ~ alloc[5873]::vec::{impl#1}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9671 ~ core[7d5a]::option::{impl#0}::unwrap_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8910 ~ core[7d5a]::iter::traits::iterator::Iterator::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8920 ~ core[7d5a]::iter::traits::iterator::Iterator::filter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:285 ~ unicode_bidi[2979]::prepare::not_removed_by_x9)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:9671 ~ core[7d5a]::option::{impl#0}::unwrap_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8910 ~ core[7d5a]::iter::traits::iterator::Iterator::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8920 ~ core[7d5a]::iter::traits::iterator::Iterator::filter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).376), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:123:50: 123:58 (#0), res: Local(HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).301)), segments: [PathSegment { ident: runs_len#0, hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).377), res: Local(HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).301)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:123:50: 123:58 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences).378), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:123:61: 123:62 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:123:61: 123:62 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:285 ~ unicode_bidi[2979]::prepare::not_removed_by_x9)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:9056 ~ core[7d5a]::iter::traits::iterator::Iterator::rposition)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:285 ~ unicode_bidi[2979]::prepare::not_removed_by_x9)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9671 ~ core[7d5a]::option::{impl#0}::unwrap_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9022 ~ core[7d5a]::iter::traits::iterator::Iterator::find)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9103 ~ core[7d5a]::iter::traits::iterator::Iterator::rev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9109 ~ core[7d5a]::iter::traits::iterator::Iterator::copied)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:285 ~ unicode_bidi[2979]::prepare::not_removed_by_x9)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:9048 ~ core[7d5a]::iter::traits::iterator::Iterator::position)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:285 ~ unicode_bidi[2979]::prepare::not_removed_by_x9)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:59 ~ unicode_bidi[2979]::level::{impl#0}::bidi_class)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:3024 ~ core[7d5a]::cmp::max)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:59 ~ unicode_bidi[2979]::level::{impl#0}::bidi_class)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:3024 ~ core[7d5a]::cmp::max)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"unicode_bidi"}), Specific({"unicode_bidi"})), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).25), kind: Binary(Spanned { node: Le, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:37: 192:39 (#0) }, Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).26), kind: Field(Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).27), kind: Index(Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:23: 192:27 (#0), res: Local(HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).18)), segments: [PathSegment { ident: runs#0, hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).29), res: Local(HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).18)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:23: 192:27 (#0) }, Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).30), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:28: 192:29 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:28: 192:29 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:27: 192:30 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:23: 192:30 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:23: 192:36 (#0) }, Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).31), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:40: 192:43 (#0), res: Local(HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).4)), segments: [PathSegment { ident: pos#0, hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).32), res: Local(HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:40: 192:43 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:23: 192:43 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).33), kind: Binary(Spanned { node: Le, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:51: 192:53 (#0) }, Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).34), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:47: 192:50 (#0), res: Local(HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).4)), segments: [PathSegment { ident: pos#0, hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).35), res: Local(HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:47: 192:50 (#0) }, Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).36), kind: Field(Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).37), kind: Index(Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).38), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:54: 192:58 (#0), res: Local(HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).18)), segments: [PathSegment { ident: runs#0, hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).39), res: Local(HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).18)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:54: 192:58 (#0) }, Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).40), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:59: 192:60 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:59: 192:60 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:58: 192:61 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:54: 192:61 (#0) }, end#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:54: 192:65 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:47: 192:65 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).26), kind: Field(Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).27), kind: Index(Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:23: 192:27 (#0), res: Local(HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).18)), segments: [PathSegment { ident: runs#0, hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).29), res: Local(HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).18)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:23: 192:27 (#0) }, Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).30), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:28: 192:29 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:28: 192:29 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:27: 192:30 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:23: 192:30 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:23: 192:36 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).31), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:40: 192:43 (#0), res: Local(HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).4)), segments: [PathSegment { ident: pos#0, hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).32), res: Local(HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:40: 192:43 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).34), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:47: 192:50 (#0), res: Local(HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).4)), segments: [PathSegment { ident: pos#0, hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).35), res: Local(HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:47: 192:50 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).36), kind: Field(Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).37), kind: Index(Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).38), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:54: 192:58 (#0), res: Local(HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).18)), segments: [PathSegment { ident: runs#0, hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).39), res: Local(HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).18)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:54: 192:58 (#0) }, Expr { hir_id: HirId(DefId(0:279 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_forwards_from).40), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:59: 192:60 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:59: 192:60 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:58: 192:61 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:54: 192:61 (#0) }, end#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:192:54: 192:65 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:8903 ~ core[7d5a]::iter::traits::iterator::Iterator::chain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:8940 ~ core[7d5a]::iter::traits::iterator::Iterator::flat_map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"unicode_bidi"}), Specific({"unicode_bidi"})), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).35), kind: Binary(Spanned { node: Le, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:37: 211:39 (#0) }, Expr { hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).36), kind: Field(Expr { hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).37), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:23: 211:30 (#0), res: Local(HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).28)), segments: [PathSegment { ident: current#0, hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).38), res: Local(HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).28)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:23: 211:30 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:23: 211:36 (#0) }, Expr { hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:40: 211:43 (#0), res: Local(HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).4)), segments: [PathSegment { ident: pos#0, hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).40), res: Local(HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:40: 211:43 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:23: 211:43 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).41), kind: Binary(Spanned { node: Le, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:51: 211:53 (#0) }, Expr { hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).42), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:47: 211:50 (#0), res: Local(HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).4)), segments: [PathSegment { ident: pos#0, hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).43), res: Local(HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:47: 211:50 (#0) }, Expr { hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).44), kind: Field(Expr { hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).45), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:54: 211:61 (#0), res: Local(HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).28)), segments: [PathSegment { ident: current#0, hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).46), res: Local(HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).28)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:54: 211:61 (#0) }, end#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:54: 211:65 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:47: 211:65 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).36), kind: Field(Expr { hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).37), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:23: 211:30 (#0), res: Local(HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).28)), segments: [PathSegment { ident: current#0, hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).38), res: Local(HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).28)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:23: 211:30 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:23: 211:36 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:40: 211:43 (#0), res: Local(HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).4)), segments: [PathSegment { ident: pos#0, hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).40), res: Local(HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:40: 211:43 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).42), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:47: 211:50 (#0), res: Local(HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).4)), segments: [PathSegment { ident: pos#0, hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).43), res: Local(HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:47: 211:50 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).44), kind: Field(Expr { hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).45), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:54: 211:61 (#0), res: Local(HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).28)), segments: [PathSegment { ident: current#0, hir_id: HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).46), res: Local(HirId(DefId(0:281 ~ unicode_bidi[2979]::prepare::{impl#0}::iter_backwards_from).28)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:54: 211:61 (#0) }, end#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:211:54: 211:65 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:8903 ~ core[7d5a]::iter::traits::iterator::Iterator::chain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9103 ~ core[7d5a]::iter::traits::iterator::Iterator::rev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8940 ~ core[7d5a]::iter::traits::iterator::Iterator::flat_map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9103 ~ core[7d5a]::iter::traits::iterator::Iterator::rev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).25), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#102), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).17)), segments: [PathSegment { ident: left_val#102, hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).27), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).17)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#102) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:22: 46:31 (#102) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).28), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).29), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#102), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).18)), segments: [PathSegment { ident: right_val#102, hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).30), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).18)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#102) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:35: 46:45 (#102) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10038 ~ core[7d5a]::panicking::assert_failed)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:13229 ~ core[7d5a]::slice::{impl#0}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).114), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).115), kind: Call(Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).116), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:13: 233:26 (#0), res: Def(Fn, DefId(0:284 ~ unicode_bidi[2979]::prepare::removed_by_x9)), segments: [PathSegment { ident: removed_by_x9#0, hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).117), res: Def(Fn, DefId(0:284 ~ unicode_bidi[2979]::prepare::removed_by_x9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:13: 233:26 (#0) }, [Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).118), kind: Index(Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).119), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:27: 233:43 (#0), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).4)), segments: [PathSegment { ident: original_classes#0, hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).120), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:27: 233:43 (#0) }, Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).121), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:44: 233:45 (#0), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).105)), segments: [PathSegment { ident: i#0, hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).122), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).105)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:44: 233:45 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:43: 233:46 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:27: 233:46 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:13: 233:47 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:12: 233:47 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).123), kind: Binary(Spanned { node: Ne, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:61: 233:63 (#0) }, Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).124), kind: Index(Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).125), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:51: 233:57 (#0), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).2)), segments: [PathSegment { ident: levels#0, hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).126), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:51: 233:57 (#0) }, Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).127), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:58: 233:59 (#0), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).105)), segments: [PathSegment { ident: i#0, hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).128), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).105)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:58: 233:59 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:57: 233:60 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:51: 233:60 (#0) }, Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).129), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:64: 233:81 (#0), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).92)), segments: [PathSegment { ident: current_run_level#0, hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).130), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).92)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:64: 233:81 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:51: 233:81 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:284 ~ unicode_bidi[2979]::prepare::removed_by_x9)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).124), kind: Index(Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).125), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:51: 233:57 (#0), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).2)), segments: [PathSegment { ident: levels#0, hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).126), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:51: 233:57 (#0) }, Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).127), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:58: 233:59 (#0), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).105)), segments: [PathSegment { ident: i#0, hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).128), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).105)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:58: 233:59 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:57: 233:60 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:51: 233:60 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).129), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:64: 233:81 (#0), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).92)), segments: [PathSegment { ident: current_run_level#0, hir_id: HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).130), res: Local(HirId(DefId(0:283 ~ unicode_bidi[2979]::prepare::level_runs).92)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/prepare.rs:233:64: 233:81 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:284 ~ unicode_bidi[2979]::prepare::removed_by_x9)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:285 ~ unicode_bidi[2979]::prepare::not_removed_by_x9)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:284 ~ unicode_bidi[2979]::prepare::removed_by_x9)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:631 ~ unicode_bidi[2979]::{impl#10}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:631 ~ unicode_bidi[2979]::{impl#10}::eq).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:160:10: 160:19 (#103), res: Local(HirId(DefId(0:631 ~ unicode_bidi[2979]::{impl#10}::eq).14)), segments: [PathSegment { ident: __self_discr#103, hir_id: HirId(DefId(0:631 ~ unicode_bidi[2979]::{impl#10}::eq).27), res: Local(HirId(DefId(0:631 ~ unicode_bidi[2979]::{impl#10}::eq).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:160:10: 160:19 (#103) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:631 ~ unicode_bidi[2979]::{impl#10}::eq).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:160:10: 160:19 (#103), res: Local(HirId(DefId(0:631 ~ unicode_bidi[2979]::{impl#10}::eq).24)), segments: [PathSegment { ident: __arg1_discr#103, hir_id: HirId(DefId(0:631 ~ unicode_bidi[2979]::{impl#10}::eq).29), res: Local(HirId(DefId(0:631 ~ unicode_bidi[2979]::{impl#10}::eq).24)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:160:10: 160:19 (#103) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:633 ~ unicode_bidi[2979]::{impl#11}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11181 ~ core[7d5a]::fmt::{impl#9}::write_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:638 ~ unicode_bidi[2979]::{impl#12}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:640 ~ unicode_bidi[2979]::{impl#13}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11198 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field2_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).6), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:173:5: 173:28 (#107) }, Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).7), kind: Field(Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:168:24: 168:24 (#107), res: Local(HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).9), res: Local(HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:168:24: 168:33 (#107) }, range#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:173:5: 173:28 (#107) }, Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).10), kind: Field(Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:168:24: 168:33 (#107), res: Local(HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).4)), segments: [PathSegment { ident: other#107, hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).12), res: Local(HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:168:24: 168:33 (#107) }, range#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:173:5: 173:28 (#107) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:173:5: 173:28 (#107) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).13), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:178:5: 178:21 (#107) }, Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).14), kind: Field(Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:168:24: 168:24 (#107), res: Local(HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).16), res: Local(HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:168:24: 168:33 (#107) }, level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:178:5: 178:21 (#107) }, Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:168:24: 168:33 (#107), res: Local(HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).4)), segments: [PathSegment { ident: other#107, hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).19), res: Local(HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:168:24: 168:33 (#107) }, level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:178:5: 178:21 (#107) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:178:5: 178:21 (#107) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).7), kind: Field(Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:168:24: 168:24 (#107), res: Local(HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).9), res: Local(HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:168:24: 168:33 (#107) }, range#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:173:5: 173:28 (#107) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).10), kind: Field(Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:168:24: 168:33 (#107), res: Local(HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).4)), segments: [PathSegment { ident: other#107, hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).12), res: Local(HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:168:24: 168:33 (#107) }, range#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:173:5: 173:28 (#107) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).14), kind: Field(Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:168:24: 168:24 (#107), res: Local(HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).16), res: Local(HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:168:24: 168:33 (#107) }, level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:178:5: 178:21 (#107) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:168:24: 168:33 (#107), res: Local(HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).4)), segments: [PathSegment { ident: other#107, hir_id: HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).19), res: Local(HirId(DefId(0:643 ~ unicode_bidi[2979]::{impl#15}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:168:24: 168:33 (#107) }, level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:178:5: 178:21 (#107) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:325 ~ unicode_bidi[2979]::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:325 ~ unicode_bidi[2979]::{impl#0}::len).4), kind: Field(Expr { hir_id: HirId(DefId(0:325 ~ unicode_bidi[2979]::{impl#0}::len).5), kind: Field(Expr { hir_id: HirId(DefId(0:325 ~ unicode_bidi[2979]::{impl#0}::len).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:184:9: 184:13 (#0), res: Local(HirId(DefId(0:325 ~ unicode_bidi[2979]::{impl#0}::len).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:325 ~ unicode_bidi[2979]::{impl#0}::len).7), res: Local(HirId(DefId(0:325 ~ unicode_bidi[2979]::{impl#0}::len).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:184:9: 184:13 (#0) }, range#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:184:9: 184:19 (#0) }, end#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:184:9: 184:23 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:325 ~ unicode_bidi[2979]::{impl#0}::len).8), kind: Field(Expr { hir_id: HirId(DefId(0:325 ~ unicode_bidi[2979]::{impl#0}::len).9), kind: Field(Expr { hir_id: HirId(DefId(0:325 ~ unicode_bidi[2979]::{impl#0}::len).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:184:26: 184:30 (#0), res: Local(HirId(DefId(0:325 ~ unicode_bidi[2979]::{impl#0}::len).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:325 ~ unicode_bidi[2979]::{impl#0}::len).11), res: Local(HirId(DefId(0:325 ~ unicode_bidi[2979]::{impl#0}::len).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:184:26: 184:30 (#0) }, range#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:184:26: 184:36 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:184:26: 184:42 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).6), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:198:5: 198:41 (#108) }, Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).7), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:194:5: 194:25 (#108) }, Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).8), kind: Field(Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:10 (#108), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).10), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:194:5: 194:25 (#108) }, Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).11), kind: Field(Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).4)), segments: [PathSegment { ident: other#108, hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).13), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:194:5: 194:25 (#108) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:194:5: 194:25 (#108) }, Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).14), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:198:5: 198:41 (#108) }, Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).15), kind: Field(Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:10 (#108), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).17), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:198:5: 198:41 (#108) }, Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).18), kind: Field(Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).19), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).4)), segments: [PathSegment { ident: other#108, hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).20), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:198:5: 198:41 (#108) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:198:5: 198:41 (#108) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:198:5: 198:41 (#108) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).21), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:201:5: 201:39 (#108) }, Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).22), kind: Field(Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).23), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:10 (#108), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).24), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108) }, paragraphs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:201:5: 201:39 (#108) }, Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).25), kind: Field(Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).4)), segments: [PathSegment { ident: other#108, hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).27), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108) }, paragraphs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:201:5: 201:39 (#108) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:201:5: 201:39 (#108) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).7), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:194:5: 194:25 (#108) }, Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).8), kind: Field(Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:10 (#108), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).10), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:194:5: 194:25 (#108) }, Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).11), kind: Field(Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).4)), segments: [PathSegment { ident: other#108, hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).13), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:194:5: 194:25 (#108) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:194:5: 194:25 (#108) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).14), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:198:5: 198:41 (#108) }, Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).15), kind: Field(Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:10 (#108), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).17), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:198:5: 198:41 (#108) }, Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).18), kind: Field(Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).19), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).4)), segments: [PathSegment { ident: other#108, hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).20), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:198:5: 198:41 (#108) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:198:5: 198:41 (#108) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).8), kind: Field(Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:10 (#108), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).10), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:194:5: 194:25 (#108) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).11), kind: Field(Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).4)), segments: [PathSegment { ident: other#108, hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).13), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:194:5: 194:25 (#108) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).15), kind: Field(Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:10 (#108), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).17), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:198:5: 198:41 (#108) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).18), kind: Field(Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).19), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).4)), segments: [PathSegment { ident: other#108, hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).20), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:198:5: 198:41 (#108) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).22), kind: Field(Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).23), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:10 (#108), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).24), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108) }, paragraphs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:201:5: 201:39 (#108) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).25), kind: Field(Expr { hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).4)), segments: [PathSegment { ident: other#108, hir_id: HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).27), res: Local(HirId(DefId(0:653 ~ unicode_bidi[2979]::{impl#17}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:191:10: 191:19 (#108) }, paragraphs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:201:5: 201:39 (#108) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:656 ~ unicode_bidi[2979]::{impl#18}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11200 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field3_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:328 ~ unicode_bidi[2979]::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:329 ~ unicode_bidi[2979]::{impl#1}::new_with_data_source)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:329 ~ unicode_bidi[2979]::{impl#1}::new_with_data_source)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:334 ~ unicode_bidi[2979]::{impl#2}::new_with_data_source)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).6), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:243:5: 243:29 (#110) }, Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).7), kind: Field(Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:240:10: 240:10 (#110), res: Local(HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).9), res: Local(HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:240:10: 240:19 (#110) }, base#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:243:5: 243:29 (#110) }, Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).10), kind: Field(Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:240:10: 240:19 (#110), res: Local(HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).4)), segments: [PathSegment { ident: other#110, hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).12), res: Local(HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:240:10: 240:19 (#110) }, base#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:243:5: 243:29 (#110) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:243:5: 243:29 (#110) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).13), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:248:5: 248:24 (#110) }, Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).14), kind: Field(Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:240:10: 240:10 (#110), res: Local(HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).16), res: Local(HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:240:10: 240:19 (#110) }, pure_ltr#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:248:5: 248:24 (#110) }, Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:240:10: 240:19 (#110), res: Local(HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).4)), segments: [PathSegment { ident: other#110, hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).19), res: Local(HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:240:10: 240:19 (#110) }, pure_ltr#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:248:5: 248:24 (#110) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:248:5: 248:24 (#110) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).7), kind: Field(Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:240:10: 240:10 (#110), res: Local(HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).9), res: Local(HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:240:10: 240:19 (#110) }, base#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:243:5: 243:29 (#110) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).10), kind: Field(Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:240:10: 240:19 (#110), res: Local(HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).4)), segments: [PathSegment { ident: other#110, hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).12), res: Local(HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:240:10: 240:19 (#110) }, base#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:243:5: 243:29 (#110) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).14), kind: Field(Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:240:10: 240:10 (#110), res: Local(HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).16), res: Local(HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:240:10: 240:19 (#110) }, pure_ltr#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:248:5: 248:24 (#110) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:240:10: 240:19 (#110), res: Local(HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).4)), segments: [PathSegment { ident: other#110, hir_id: HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).19), res: Local(HirId(DefId(0:665 ~ unicode_bidi[2979]::{impl#20}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:240:10: 240:19 (#110) }, pure_ltr#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:248:5: 248:24 (#110) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:668 ~ unicode_bidi[2979]::{impl#21}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11198 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field2_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:334 ~ unicode_bidi[2979]::{impl#2}::new_with_data_source)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7425 ~ alloc[5873]::vec::{impl#0}::with_capacity)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:313 ~ unicode_bidi[2979]::TextSource::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"unicode_bidi"}), Specific({"unicode_bidi"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).44), kind: MethodCall(PathSegment { ident: is_empty#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).45), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).46), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:307:13: 307:23 (#0), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).37)), segments: [PathSegment { ident: paragraphs#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).47), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).37)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:307:13: 307:23 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:307:24: 307:34 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:307:13: 307:34 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).48), kind: MethodCall(PathSegment { ident: is_empty#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).49), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).50), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:307:38: 307:46 (#0), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).38)), segments: [PathSegment { ident: pure_ltr#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).51), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).38)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:307:38: 307:46 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:307:47: 307:57 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:307:38: 307:57 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7513 ~ alloc[5873]::vec::{impl#1}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7513 ~ alloc[5873]::vec::{impl#1}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:317 ~ unicode_bidi[2979]::TextSource::char_indices)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:9 ~ unicode_bidi[2979]::data_source::BidiDataSource::bidi_class)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:319 ~ unicode_bidi[2979]::TextSource::char_len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8935 ~ core[7d5a]::iter::traits::iterator::Iterator::take)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8523 ~ core[7d5a]::iter::sources::repeat::repeat)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).147), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:340:36: 340:37 (#0), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).87)), segments: [PathSegment { ident: i#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).148), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).87)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:340:36: 340:37 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).149), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:340:40: 340:43 (#0), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).114)), segments: [PathSegment { ident: len#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).150), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).114)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:340:40: 340:43 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9671 ~ core[7d5a]::option::{impl#0}::unwrap_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7511 ~ alloc[5873]::vec::{impl#1}::clear)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).218), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:359:20: 359:25 (#0), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).104)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).219), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).104)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:359:20: 359:25 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).220), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:359:29: 359:30 (#0), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), segments: [PathSegment { ident: L#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).221), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:359:29: 359:30 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:13236 ~ core[7d5a]::slice::{impl#0}::last)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).244), kind: Index(Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).245), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:364:28: 364:44 (#0), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).20)), segments: [PathSegment { ident: original_classes#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).246), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).20)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:364:28: 364:44 (#0) }, Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).247), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:364:45: 364:50 (#0), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).237)), segments: [PathSegment { ident: start#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).248), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).237)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:364:45: 364:50 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:364:44: 364:51 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:364:28: 364:51 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).249), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:364:55: 364:58 (#0), res: Def(Ctor(Variant, Const), DefId(0:562 ~ unicode_bidi[2979]::char_data::tables::BidiClass::FSI::{constructor#0})), segments: [PathSegment { ident: FSI#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).250), res: Def(Ctor(Variant, Const), DefId(0:562 ~ unicode_bidi[2979]::char_data::tables::BidiClass::FSI::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:364:55: 364:58 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:319 ~ unicode_bidi[2979]::TextSource::char_len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:319 ~ unicode_bidi[2979]::TextSource::char_len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).282), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:368:66: 368:71 (#0), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).104)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).283), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).104)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:368:66: 368:71 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).284), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:368:75: 368:76 (#0), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), segments: [PathSegment { ident: L#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).285), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:368:75: 368:76 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:9659 ~ core[7d5a]::option::{impl#0}::is_none)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).334), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:378:50: 378:55 (#0), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).104)), segments: [PathSegment { ident: class#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).335), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).104)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:378:50: 378:55 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).336), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:378:59: 378:60 (#0), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), segments: [PathSegment { ident: L#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).337), res: Def(Ctor(Variant, Const), DefId(0:564 ~ unicode_bidi[2979]::char_data::tables::BidiClass::L::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:378:59: 378:60 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7504 ~ alloc[5873]::vec::{impl#1}::pop)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).436), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:402:12: 402:22 (#0), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).73)), segments: [PathSegment { ident: para_start#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).437), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).73)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:402:12: 402:22 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).438), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).439), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).440), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:402:25: 402:29 (#0), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).4)), segments: [PathSegment { ident: text#0, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).441), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:402:25: 402:29 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:402:30: 402:35 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:402:25: 402:35 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:313 ~ unicode_bidi[2979]::TextSource::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:313 ~ unicode_bidi[2979]::TextSource::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:313 ~ unicode_bidi[2979]::TextSource::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9671 ~ core[7d5a]::option::{impl#0}::unwrap_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).500), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).501), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#118), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).492)), segments: [PathSegment { ident: left_val#118, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).502), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).492)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#118) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:22: 46:31 (#118) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).503), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).504), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#118), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).493)), segments: [PathSegment { ident: right_val#118, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).505), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).493)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#118) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:35: 46:45 (#118) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10038 ~ core[7d5a]::panicking::assert_failed)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"unicode_bidi"}), Specific({"unicode_bidi"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:313 ~ unicode_bidi[2979]::TextSource::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).569), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).570), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#121), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).561)), segments: [PathSegment { ident: left_val#121, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).571), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).561)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#121) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:22: 46:31 (#121) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).572), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).573), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#121), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).562)), segments: [PathSegment { ident: right_val#121, hir_id: HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).574), res: Local(HirId(DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info).562)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#121) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:35: 46:45 (#121) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10038 ~ core[7d5a]::panicking::assert_failed)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:9671 ~ core[7d5a]::option::{impl#0}::unwrap_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:677 ~ unicode_bidi[2979]::{impl#22}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11202 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field4_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).6), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:438:5: 438:27 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).7), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).8), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:432:5: 432:25 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:17 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).11), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:432:5: 432:25 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).12), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), segments: [PathSegment { ident: other#123, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).14), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:432:5: 432:25 (#123) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:432:5: 432:25 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).15), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).16), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).17), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:17 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).18), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).19), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), segments: [PathSegment { ident: other#123, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).21), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).22), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:438:5: 438:27 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).23), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:17 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).25), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:438:5: 438:27 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).26), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), segments: [PathSegment { ident: other#123, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).28), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:438:5: 438:27 (#123) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:438:5: 438:27 (#123) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:438:5: 438:27 (#123) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).29), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:444:5: 444:39 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).30), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).31), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:17 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).32), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, paragraphs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:444:5: 444:39 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).33), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).34), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), segments: [PathSegment { ident: other#123, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).35), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, paragraphs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:444:5: 444:39 (#123) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:444:5: 444:39 (#123) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).7), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).8), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:432:5: 432:25 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:17 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).11), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:432:5: 432:25 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).12), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), segments: [PathSegment { ident: other#123, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).14), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:432:5: 432:25 (#123) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:432:5: 432:25 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).15), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).16), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).17), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:17 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).18), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).19), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), segments: [PathSegment { ident: other#123, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).21), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).22), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:438:5: 438:27 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).23), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:17 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).25), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:438:5: 438:27 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).26), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), segments: [PathSegment { ident: other#123, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).28), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:438:5: 438:27 (#123) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:438:5: 438:27 (#123) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).8), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:432:5: 432:25 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:17 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).11), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:432:5: 432:25 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).12), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), segments: [PathSegment { ident: other#123, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).14), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:432:5: 432:25 (#123) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:432:5: 432:25 (#123) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).15), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).16), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).17), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:17 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).18), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }, Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).19), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), segments: [PathSegment { ident: other#123, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).21), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:17 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).11), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:432:5: 432:25 (#123) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).12), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), segments: [PathSegment { ident: other#123, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).14), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:432:5: 432:25 (#123) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).16), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).17), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:17 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).18), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).19), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), segments: [PathSegment { ident: other#123, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).21), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:435:5: 435:41 (#123) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).23), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:17 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).25), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:438:5: 438:27 (#123) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).26), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), segments: [PathSegment { ident: other#123, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).28), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:438:5: 438:27 (#123) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).30), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).31), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:17 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).32), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, paragraphs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:444:5: 444:39 (#123) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).33), kind: Field(Expr { hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).34), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), segments: [PathSegment { ident: other#123, hir_id: HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).35), res: Local(HirId(DefId(0:682 ~ unicode_bidi[2979]::{impl#24}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:429:17: 429:26 (#123) }, paragraphs#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:444:5: 444:39 (#123) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:343 ~ unicode_bidi[2979]::{impl#3}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:344 ~ unicode_bidi[2979]::{impl#3}::new_with_data_source)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:344 ~ unicode_bidi[2979]::{impl#3}::new_with_data_source)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:334 ~ unicode_bidi[2979]::{impl#2}::new_with_data_source)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7425 ~ alloc[5873]::vec::{impl#0}::with_capacity)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:14298 ~ core[7d5a]::str::{impl#0}::len)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8905 ~ core[7d5a]::iter::traits::iterator::Iterator::zip)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).10), kind: Field(Expr { hir_id: HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:522:17: 522:21 (#0), res: Local(HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).6)), segments: [PathSegment { ident: line#0, hir_id: HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).12), res: Local(HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:522:17: 522:21 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:522:17: 522:27 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).13), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).14), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).15), kind: Field(Expr { hir_id: HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:522:31: 522:35 (#0), res: Local(HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).17), res: Local(HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:522:31: 522:35 (#0) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:522:31: 522:42 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:522:43: 522:48 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:522:31: 522:48 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).31), kind: Field(Expr { hir_id: HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).32), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:523:17: 523:21 (#0), res: Local(HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).6)), segments: [PathSegment { ident: line#0, hir_id: HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).33), res: Local(HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:523:17: 523:21 (#0) }, end#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:523:17: 523:25 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).34), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).35), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).36), kind: Field(Expr { hir_id: HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).37), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:523:29: 523:33 (#0), res: Local(HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).38), res: Local(HirId(DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:523:29: 523:33 (#0) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:523:29: 523:40 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:523:41: 523:46 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:523:29: 523:46 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:379 ~ unicode_bidi[2979]::reorder_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:315 ~ unicode_bidi[2979]::TextSource::subrange)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:348 ~ unicode_bidi[2979]::{impl#3}::reordered_levels_per_char)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8953 ~ core[7d5a]::iter::traits::iterator::Iterator::collect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8910 ~ core[7d5a]::iter::traits::iterator::Iterator::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:14326 ~ core[7d5a]::str::{impl#0}::char_indices)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:350 ~ unicode_bidi[2979]::{impl#3}::reorder_line)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:63 ~ unicode_bidi[2979]::level::has_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:352 ~ unicode_bidi[2979]::{impl#3}::visual_runs)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:368 ~ unicode_bidi[2979]::reorder_line)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:351 ~ unicode_bidi[2979]::{impl#3}::reorder_visual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:372 ~ unicode_bidi[2979]::reorder_visual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:352 ~ unicode_bidi[2979]::{impl#3}::visual_runs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:347 ~ unicode_bidi[2979]::{impl#3}::reordered_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:353 ~ unicode_bidi[2979]::{impl#3}::has_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:63 ~ unicode_bidi[2979]::level::has_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:692 ~ unicode_bidi[2979]::{impl#25}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11204 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field5_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).6), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:679:5: 679:31 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).7), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).8), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).9), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).10), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).12), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).13), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).15), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).16), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).19), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).20), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).21), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).22), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).23), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).24), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).25), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).26), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).27), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).29), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).30), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:679:5: 679:31 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).31), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).32), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).33), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, paragraph_level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:679:5: 679:31 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).34), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).35), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).36), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, paragraph_level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:679:5: 679:31 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:679:5: 679:31 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:679:5: 679:31 (#129) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).37), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:682:5: 682:26 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).38), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).40), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, is_pure_ltr#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:682:5: 682:26 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).41), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).42), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).43), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, is_pure_ltr#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:682:5: 682:26 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:682:5: 682:26 (#129) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).7), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).8), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).9), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).10), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).12), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).13), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).15), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).16), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).19), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).20), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).21), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).22), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).23), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).24), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).25), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).26), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).27), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).29), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).30), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:679:5: 679:31 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).31), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).32), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).33), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, paragraph_level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:679:5: 679:31 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).34), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).35), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).36), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, paragraph_level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:679:5: 679:31 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:679:5: 679:31 (#129) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).8), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).9), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).10), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).12), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).13), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).15), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).16), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).19), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).20), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).21), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).22), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).23), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).24), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).25), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).26), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).27), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).29), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).9), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).10), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).12), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).13), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).15), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).16), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).19), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }, Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).20), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).21), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).22), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).10), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).12), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).13), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).15), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, text#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:670:5: 670:25 (#129) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).19), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).20), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).21), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).22), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, original_classes#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:673:5: 673:41 (#129) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).24), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).25), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).26), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).27), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).29), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:676:5: 676:27 (#129) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).31), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).32), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).33), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, paragraph_level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:679:5: 679:31 (#129) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).34), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).35), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).36), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, paragraph_level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:679:5: 679:31 (#129) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).38), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:17 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).40), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, is_pure_ltr#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:682:5: 682:26 (#129) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).41), kind: Field(Expr { hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).42), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), segments: [PathSegment { ident: other#129, hir_id: HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).43), res: Local(HirId(DefId(0:697 ~ unicode_bidi[2979]::{impl#27}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:667:17: 667:26 (#129) }, is_pure_ltr#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:682:5: 682:26 (#129) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:356 ~ unicode_bidi[2979]::{impl#4}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:357 ~ unicode_bidi[2979]::{impl#4}::new_with_data_source)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:357 ~ unicode_bidi[2979]::{impl#4}::new_with_data_source)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:337 ~ unicode_bidi[2979]::compute_initial_info)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7425 ~ alloc[5873]::vec::{impl#0}::with_capacity)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:14298 ~ core[7d5a]::str::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:14298 ~ core[7d5a]::str::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).8), kind: Field(Expr { hir_id: HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:758:17: 758:21 (#0), res: Local(HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).4)), segments: [PathSegment { ident: line#0, hir_id: HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).10), res: Local(HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:758:17: 758:21 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:758:17: 758:27 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).11), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).13), kind: Field(Expr { hir_id: HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:758:31: 758:35 (#0), res: Local(HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).15), res: Local(HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:758:31: 758:35 (#0) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:758:31: 758:42 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:758:43: 758:48 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:758:31: 758:48 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).29), kind: Field(Expr { hir_id: HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).30), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:759:17: 759:21 (#0), res: Local(HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).4)), segments: [PathSegment { ident: line#0, hir_id: HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).31), res: Local(HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:759:17: 759:21 (#0) }, end#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:759:17: 759:25 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).32), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).33), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).34), kind: Field(Expr { hir_id: HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).35), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:759:29: 759:33 (#0), res: Local(HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).36), res: Local(HirId(DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:759:29: 759:33 (#0) }, levels#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:759:29: 759:40 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:759:41: 759:46 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:759:29: 759:46 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:379 ~ unicode_bidi[2979]::reorder_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:315 ~ unicode_bidi[2979]::TextSource::subrange)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:361 ~ unicode_bidi[2979]::{impl#4}::reordered_levels_per_char)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8953 ~ core[7d5a]::iter::traits::iterator::Iterator::collect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8910 ~ core[7d5a]::iter::traits::iterator::Iterator::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:14326 ~ core[7d5a]::str::{impl#0}::char_indices)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:363 ~ unicode_bidi[2979]::{impl#4}::reorder_line)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:63 ~ unicode_bidi[2979]::level::has_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:365 ~ unicode_bidi[2979]::{impl#4}::visual_runs)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:368 ~ unicode_bidi[2979]::reorder_line)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:364 ~ unicode_bidi[2979]::{impl#4}::reorder_visual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:372 ~ unicode_bidi[2979]::reorder_visual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:365 ~ unicode_bidi[2979]::{impl#4}::visual_runs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:360 ~ unicode_bidi[2979]::{impl#4}::reordered_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:366 ~ unicode_bidi[2979]::{impl#4}::has_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:367 ~ unicode_bidi[2979]::{impl#4}::direction)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:388 ~ unicode_bidi[2979]::para_direction)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:368 ~ unicode_bidi[2979]::reorder_line)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9008 ~ core[7d5a]::iter::traits::iterator::Iterator::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5964 ~ alloc[5873]::string::{impl#0}::with_capacity)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:8837 ~ core[7d5a]::iter::traits::exact_size::ExactSizeIterator::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9103 ~ core[7d5a]::iter::traits::iterator::Iterator::rev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:14325 ~ core[7d5a]::str::{impl#0}::chars)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(5:5990 ~ alloc[5873]::string::{impl#0}::push_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:8934 ~ core[7d5a]::iter::traits::iterator::Iterator::skip)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8935 ~ core[7d5a]::iter::traits::iterator::Iterator::take)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8925 ~ core[7d5a]::iter::traits::iterator::Iterator::enumerate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).51), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:912:74: 912:79 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).18)), segments: [PathSegment { ident: start#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).52), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).18)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:912:74: 912:79 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).53), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:912:82: 912:83 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:912:82: 912:83 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).66), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:913:12: 913:21 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).55)), segments: [PathSegment { ident: new_level#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).67), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).55)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:913:12: 913:21 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).68), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:913:25: 913:34 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).26)), segments: [PathSegment { ident: run_level#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).69), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).26)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:913:25: 913:34 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:3014 ~ core[7d5a]::cmp::min)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:3024 ~ core[7d5a]::cmp::max)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:10418 ~ core[7d5a]::result::{impl#0}::expect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:58 ~ unicode_bidi[2979]::level::{impl#0}::new_lowest_ge_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).172), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:933:11: 933:20 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).36)), segments: [PathSegment { ident: max_level#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).173), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).36)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:933:11: 933:20 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).174), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:933:24: 933:33 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).31)), segments: [PathSegment { ident: min_level#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).175), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).31)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:933:24: 933:33 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).183), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:936:15: 936:24 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).180)), segments: [PathSegment { ident: seq_start#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).184), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).180)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:936:15: 936:24 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).185), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:936:27: 936:36 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).158)), segments: [PathSegment { ident: run_count#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).186), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).158)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:936:27: 936:36 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).190), kind: Index(Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).191), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:937:16: 937:22 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).2)), segments: [PathSegment { ident: levels#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).192), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:937:16: 937:22 (#0) }, Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).193), kind: Field(Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).194), kind: Index(Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).195), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:937:23: 937:27 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).12)), segments: [PathSegment { ident: runs#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).196), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:937:23: 937:27 (#0) }, Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).197), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:937:28: 937:37 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).180)), segments: [PathSegment { ident: seq_start#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).198), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).180)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:937:28: 937:37 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:937:27: 937:38 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:937:23: 937:38 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:937:23: 937:44 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:937:22: 937:45 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:937:16: 937:45 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).199), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:937:48: 937:57 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).36)), segments: [PathSegment { ident: max_level#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).200), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).36)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:937:48: 937:57 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).214), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:943:31: 943:40 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).180)), segments: [PathSegment { ident: seq_start#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).215), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).180)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:943:31: 943:40 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).216), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:943:43: 943:44 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:943:43: 943:44 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).221), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:944:19: 944:26 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).218)), segments: [PathSegment { ident: seq_end#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).222), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).218)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:944:19: 944:26 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).223), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:944:29: 944:38 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).158)), segments: [PathSegment { ident: run_count#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).224), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).158)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:944:29: 944:38 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).228), kind: Index(Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).229), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:945:20: 945:26 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).2)), segments: [PathSegment { ident: levels#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).230), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:945:20: 945:26 (#0) }, Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).231), kind: Field(Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).232), kind: Index(Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).233), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:945:27: 945:31 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).12)), segments: [PathSegment { ident: runs#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).234), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:945:27: 945:31 (#0) }, Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).235), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:945:32: 945:39 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).218)), segments: [PathSegment { ident: seq_end#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).236), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).218)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:945:32: 945:39 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:945:31: 945:40 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:945:27: 945:40 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:945:27: 945:46 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:945:26: 945:47 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:945:20: 945:47 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).237), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:945:50: 945:59 (#0), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).36)), segments: [PathSegment { ident: max_level#0, hir_id: HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).238), res: Local(HirId(DefId(0:371 ~ unicode_bidi[2979]::visual_runs_for_line).36)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:945:50: 945:59 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:13284 ~ core[7d5a]::slice::{impl#0}::reverse)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:10418 ~ core[7d5a]::result::{impl#0}::expect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:55 ~ unicode_bidi[2979]::level::{impl#0}::lower)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:372 ~ unicode_bidi[2979]::reorder_visual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).9), kind: MethodCall(PathSegment { ident: is_empty#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).10), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:12: 980:18 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).2)), segments: [PathSegment { ident: levels#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).12), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:12: 980:18 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:19: 980:29 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:12: 980:29 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).13), kind: Binary(Spanned { node: Ge, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:45: 980:47 (#0) }, Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:33: 980:44 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).4)), segments: [PathSegment { ident: start_index#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).15), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:33: 980:44 (#0) }, Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).16), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).17), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:48: 980:54 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).2)), segments: [PathSegment { ident: levels#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).19), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:48: 980:54 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:55: 980:60 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:48: 980:60 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:33: 980:60 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:13229 ~ core[7d5a]::slice::{impl#0}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:33: 980:44 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).4)), segments: [PathSegment { ident: start_index#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).15), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:33: 980:44 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).16), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).17), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:48: 980:54 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).2)), segments: [PathSegment { ident: levels#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).19), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:48: 980:54 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:55: 980:60 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:48: 980:60 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:13270 ~ core[7d5a]::slice::{impl#0}::get)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).46), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).47), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:984:17: 984:18 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).36)), segments: [PathSegment { ident: l#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).48), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).36)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:984:17: 984:18 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:984:16: 984:18 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).49), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:984:22: 984:25 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).6)), segments: [PathSegment { ident: max#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).50), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:984:22: 984:25 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:9659 ~ core[7d5a]::option::{impl#0}::is_none)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13270 ~ core[7d5a]::slice::{impl#0}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).95), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:996:29: 996:40 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).4)), segments: [PathSegment { ident: start_index#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).96), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:996:29: 996:40 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).97), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:996:43: 996:44 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:996:43: 996:44 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Specific({"unicode_bidi"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:13270 ~ core[7d5a]::slice::{impl#0}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).113), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).114), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:998:17: 998:18 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).103)), segments: [PathSegment { ident: l#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).115), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).103)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:998:17: 998:18 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:998:16: 998:18 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).116), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:998:21: 998:24 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).6)), segments: [PathSegment { ident: max#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).117), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:998:21: 998:24 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:13229 ~ core[7d5a]::slice::{impl#0}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:9000 ~ core[7d5a]::iter::traits::iterator::Iterator::fold)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:3014 ~ core[7d5a]::cmp::min)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:3024 ~ core[7d5a]::cmp::max)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:8953 ~ core[7d5a]::iter::traits::iterator::Iterator::collect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).90), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1024:12: 1024:14 (#0) }, Expr { hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).91), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1024:8: 1024:11 (#0), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).68)), segments: [PathSegment { ident: min#0, hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).92), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).68)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1024:8: 1024:11 (#0) }, Expr { hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).93), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1024:15: 1024:18 (#0), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).69)), segments: [PathSegment { ident: max#0, hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).94), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).69)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1024:15: 1024:18 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1024:8: 1024:18 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).95), kind: MethodCall(PathSegment { ident: is_ltr#0, hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).96), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).97), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1024:22: 1024:25 (#0), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).68)), segments: [PathSegment { ident: min#0, hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).98), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).68)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1024:22: 1024:25 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1024:26: 1024:34 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1024:22: 1024:34 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).91), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1024:8: 1024:11 (#0), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).68)), segments: [PathSegment { ident: min#0, hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).92), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).68)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1024:8: 1024:11 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).93), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1024:15: 1024:18 (#0), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).69)), segments: [PathSegment { ident: max#0, hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).94), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).69)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1024:15: 1024:18 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10418 ~ core[7d5a]::result::{impl#0}::expect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:58 ~ unicode_bidi[2979]::level::{impl#0}::new_lowest_ge_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).120), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1039:11: 1039:14 (#0), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).68)), segments: [PathSegment { ident: min#0, hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).121), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).68)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1039:11: 1039:14 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).122), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1039:18: 1039:21 (#0), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).69)), segments: [PathSegment { ident: max#0, hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).123), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).69)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1039:18: 1039:21 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:13284 ~ core[7d5a]::slice::{impl#0}::reverse)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).160), kind: Field(Expr { hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).161), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1045:16: 1045:21 (#0), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).132)), segments: [PathSegment { ident: range#0, hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).162), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).132)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1045:16: 1045:21 (#0) }, end#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1045:16: 1045:25 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).163), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).164), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).165), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1045:29: 1045:35 (#0), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).2)), segments: [PathSegment { ident: levels#0, hir_id: HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).166), res: Local(HirId(DefId(0:372 ~ unicode_bidi[2979]::reorder_visual).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1045:29: 1045:35 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1045:36: 1045:41 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1045:29: 1045:41 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10418 ~ core[7d5a]::result::{impl#0}::expect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:55 ~ unicode_bidi[2979]::level::{impl#0}::lower)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG] Trying to get func ty of defid DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).9), kind: MethodCall(PathSegment { ident: is_empty#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).10), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:12: 980:18 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).2)), segments: [PathSegment { ident: levels#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).12), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:12: 980:18 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:19: 980:29 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:12: 980:29 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).13), kind: Binary(Spanned { node: Ge, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:45: 980:47 (#0) }, Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:33: 980:44 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).4)), segments: [PathSegment { ident: start_index#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).15), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:33: 980:44 (#0) }, Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).16), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).17), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:48: 980:54 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).2)), segments: [PathSegment { ident: levels#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).19), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:48: 980:54 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:55: 980:60 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:48: 980:60 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:33: 980:60 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:13229 ~ core[7d5a]::slice::{impl#0}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:33: 980:44 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).4)), segments: [PathSegment { ident: start_index#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).15), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:33: 980:44 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).16), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).17), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:48: 980:54 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).2)), segments: [PathSegment { ident: levels#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).19), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:48: 980:54 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:55: 980:60 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:980:48: 980:60 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:13270 ~ core[7d5a]::slice::{impl#0}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).46), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).47), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:984:17: 984:18 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).36)), segments: [PathSegment { ident: l#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).48), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).36)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:984:17: 984:18 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:984:16: 984:18 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).49), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:984:22: 984:25 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).6)), segments: [PathSegment { ident: max#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).50), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:984:22: 984:25 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:9659 ~ core[7d5a]::option::{impl#0}::is_none)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13270 ~ core[7d5a]::slice::{impl#0}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).95), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:996:29: 996:40 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).4)), segments: [PathSegment { ident: start_index#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).96), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:996:29: 996:40 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).97), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:996:43: 996:44 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:996:43: 996:44 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Specific({"unicode_bidi"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:13270 ~ core[7d5a]::slice::{impl#0}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).113), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).114), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:998:17: 998:18 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).103)), segments: [PathSegment { ident: l#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).115), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).103)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:998:17: 998:18 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:998:16: 998:18 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).116), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:998:21: 998:24 (#0), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).6)), segments: [PathSegment { ident: max#0, hir_id: HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).117), res: Local(HirId(DefId(0:373 ~ unicode_bidi[2979]::reorder_visual::next_range).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:998:21: 998:24 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).17), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).18), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).19), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1067:19: 1067:25 (#0), res: Local(HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).14)), segments: [PathSegment { ident: levels#0, hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).20), res: Local(HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1067:19: 1067:25 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1067:26: 1067:31 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1067:19: 1067:31 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).21), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).22), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).23), kind: Field(Expr { hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1067:34: 1067:38 (#0), res: Local(HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).4)), segments: [PathSegment { ident: para#0, hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).25), res: Local(HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1067:34: 1067:38 (#0) }, range#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1067:34: 1067:44 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1067:45: 1067:50 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1067:34: 1067:50 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8837 ~ core[7d5a]::iter::traits::exact_size::ExactSizeIterator::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7526 ~ alloc[5873]::vec::{impl#2}::resize)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).40), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1069:19: 1069:21 (#0) }, Expr { hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).41), kind: Field(Expr { hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).42), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1069:8: 1069:12 (#0), res: Local(HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).4)), segments: [PathSegment { ident: para#0, hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).43), res: Local(HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1069:8: 1069:12 (#0) }, level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1069:8: 1069:18 (#0) }, Expr { hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).44), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1069:22: 1069:31 (#0), res: Def(Const, DefId(0:38 ~ unicode_bidi[2979]::level::LTR_LEVEL)), segments: [PathSegment { ident: LTR_LEVEL#0, hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).45), res: Def(Const, DefId(0:38 ~ unicode_bidi[2979]::level::LTR_LEVEL)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1069:22: 1069:31 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1069:8: 1069:31 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).46), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1069:35: 1069:46 (#0), res: Local(HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).6)), segments: [PathSegment { ident: is_pure_ltr#0, hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).47), res: Local(HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1069:35: 1069:46 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).41), kind: Field(Expr { hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).42), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1069:8: 1069:12 (#0), res: Local(HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).4)), segments: [PathSegment { ident: para#0, hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).43), res: Local(HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1069:8: 1069:12 (#0) }, level#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1069:8: 1069:18 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).44), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1069:22: 1069:31 (#0), res: Def(Const, DefId(0:38 ~ unicode_bidi[2979]::level::LTR_LEVEL)), segments: [PathSegment { ident: LTR_LEVEL#0, hir_id: HirId(DefId(0:375 ~ unicode_bidi[2979]::compute_bidi_info_for_para).45), res: Def(Const, DefId(0:38 ~ unicode_bidi[2979]::level::LTR_LEVEL)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1069:22: 1069:31 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Specific({"unicode_bidi"})), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:215 ~ unicode_bidi[2979]::explicit::compute)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:271 ~ unicode_bidi[2979]::prepare::isolating_run_sequences)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:240 ~ unicode_bidi[2979]::implicit::resolve_weak)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:244 ~ unicode_bidi[2979]::implicit::resolve_neutral)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:260 ~ unicode_bidi[2979]::implicit::resolve_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:389 ~ unicode_bidi[2979]::assign_levels_to_removed_chars)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:379 ~ unicode_bidi[2979]::reorder_levels)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:317 ~ unicode_bidi[2979]::TextSource::char_indices)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).76), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).77), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#135), res: Local(HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).68)), segments: [PathSegment { ident: left_val#135, hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).78), res: Local(HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).68)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#135) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:22: 46:31 (#135) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).79), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).80), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#135), res: Local(HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).69)), segments: [PathSegment { ident: right_val#135, hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).81), res: Local(HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).69)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#135) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:35: 46:45 (#135) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10038 ~ core[7d5a]::panicking::assert_failed)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).123), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1124:33: 1124:34 (#0), res: Local(HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).38)), segments: [PathSegment { ident: i#0, hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).124), res: Local(HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).38)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1124:33: 1124:34 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).125), kind: Call(Expr { hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).126), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).128), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1124:37: 1124:38 (#0), res: Def(TyParam, DefId(0:381 ~ unicode_bidi[2979]::reorder_levels::T)), segments: [PathSegment { ident: T#0, hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).127), res: Def(TyParam, DefId(0:381 ~ unicode_bidi[2979]::reorder_levels::T)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1124:37: 1124:38 (#0) }, PathSegment { ident: char_len#0, hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).129), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1124:37: 1124:48 (#0) }, [Expr { hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).130), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1124:49: 1124:50 (#0), res: Local(HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).39)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).131), res: Local(HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).39)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1124:49: 1124:50 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1124:37: 1124:51 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:319 ~ unicode_bidi[2979]::TextSource::char_len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).135), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1125:20: 1125:30 (#0), res: Local(HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).19)), segments: [PathSegment { ident: reset_from#0, hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).136), res: Local(HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).19)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1125:20: 1125:30 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).137), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1125:34: 1125:38 (#0), res: Def(Ctor(Variant, Const), DefId(1:37172 ~ core[7d5a]::option::Option::None::{constructor#0})), segments: [PathSegment { ident: None#0, hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).138), res: Def(Ctor(Variant, Const), DefId(1:37172 ~ core[7d5a]::option::Option::None::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1125:34: 1125:38 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).167), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1131:20: 1131:30 (#0), res: Local(HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).19)), segments: [PathSegment { ident: reset_from#0, hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).168), res: Local(HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).19)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1131:20: 1131:30 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).169), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1131:34: 1131:38 (#0), res: Def(Ctor(Variant, Const), DefId(1:37172 ~ core[7d5a]::option::Option::None::{constructor#0})), segments: [PathSegment { ident: None#0, hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).170), res: Def(Ctor(Variant, Const), DefId(1:37172 ~ core[7d5a]::option::Option::None::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1131:34: 1131:38 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).201), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1138:20: 1138:30 (#0), res: Local(HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).19)), segments: [PathSegment { ident: reset_from#0, hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).202), res: Local(HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).19)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1138:20: 1138:30 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).203), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1138:34: 1138:38 (#0), res: Def(Ctor(Variant, Const), DefId(1:37172 ~ core[7d5a]::option::Option::None::{constructor#0})), segments: [PathSegment { ident: None#0, hir_id: HirId(DefId(0:379 ~ unicode_bidi[2979]::reorder_levels).204), res: Def(Ctor(Variant, Const), DefId(1:37172 ~ core[7d5a]::option::Option::None::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1138:34: 1138:38 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Adt({}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Tuple([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }]) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:706 ~ unicode_bidi[2979]::{impl#28}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11198 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field2_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:385 ~ unicode_bidi[2979]::{impl#5}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:386 ~ unicode_bidi[2979]::{impl#5}::direction)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:388 ~ unicode_bidi[2979]::para_direction)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:387 ~ unicode_bidi[2979]::{impl#5}::level_at)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:387 ~ unicode_bidi[2979]::{impl#5}::level_at).7), kind: Field(Expr { hir_id: HirId(DefId(0:387 ~ unicode_bidi[2979]::{impl#5}::level_at).8), kind: Field(Expr { hir_id: HirId(DefId(0:387 ~ unicode_bidi[2979]::{impl#5}::level_at).9), kind: Field(Expr { hir_id: HirId(DefId(0:387 ~ unicode_bidi[2979]::{impl#5}::level_at).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1188:31: 1188:35 (#0), res: Local(HirId(DefId(0:387 ~ unicode_bidi[2979]::{impl#5}::level_at).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:387 ~ unicode_bidi[2979]::{impl#5}::level_at).11), res: Local(HirId(DefId(0:387 ~ unicode_bidi[2979]::{impl#5}::level_at).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1188:31: 1188:35 (#0) }, para#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1188:31: 1188:40 (#0) }, range#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1188:31: 1188:46 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1188:31: 1188:52 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:387 ~ unicode_bidi[2979]::{impl#5}::level_at).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1188:55: 1188:58 (#0), res: Local(HirId(DefId(0:387 ~ unicode_bidi[2979]::{impl#5}::level_at).4)), segments: [PathSegment { ident: pos#0, hir_id: HirId(DefId(0:387 ~ unicode_bidi[2979]::{impl#5}::level_at).13), res: Local(HirId(DefId(0:387 ~ unicode_bidi[2979]::{impl#5}::level_at).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1188:55: 1188:58 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:388 ~ unicode_bidi[2979]::para_direction)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:51 ~ unicode_bidi[2979]::level::{impl#0}::is_ltr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:52 ~ unicode_bidi[2979]::level::{impl#0}::is_rtl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:389 ~ unicode_bidi[2979]::assign_levels_to_removed_chars)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:284 ~ unicode_bidi[2979]::prepare::removed_by_x9)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:389 ~ unicode_bidi[2979]::assign_levels_to_removed_chars).41), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1229:28: 1229:29 (#0), res: Local(HirId(DefId(0:389 ~ unicode_bidi[2979]::assign_levels_to_removed_chars).15)), segments: [PathSegment { ident: i#0, hir_id: HirId(DefId(0:389 ~ unicode_bidi[2979]::assign_levels_to_removed_chars).42), res: Local(HirId(DefId(0:389 ~ unicode_bidi[2979]::assign_levels_to_removed_chars).15)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1229:28: 1229:29 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:389 ~ unicode_bidi[2979]::assign_levels_to_removed_chars).43), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1229:32: 1229:33 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1229:32: 1229:33 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"unicode_bidi"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:390 ~ unicode_bidi[2979]::get_base_direction)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:396 ~ unicode_bidi[2979]::get_base_direction_with_data_source)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:393 ~ unicode_bidi[2979]::get_base_direction_full)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:400 ~ unicode_bidi[2979]::get_base_direction_full_with_data_source)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:396 ~ unicode_bidi[2979]::get_base_direction_with_data_source)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:404 ~ unicode_bidi[2979]::get_base_direction_impl)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:400 ~ unicode_bidi[2979]::get_base_direction_full_with_data_source)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:404 ~ unicode_bidi[2979]::get_base_direction_impl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:404 ~ unicode_bidi[2979]::get_base_direction_impl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:316 ~ unicode_bidi[2979]::TextSource::chars)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:9 ~ unicode_bidi[2979]::data_source::BidiDataSource::bidi_class)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:404 ~ unicode_bidi[2979]::get_base_direction_impl).41), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1297:48: 1297:61 (#0), res: Local(HirId(DefId(0:404 ~ unicode_bidi[2979]::get_base_direction_impl).10)), segments: [PathSegment { ident: isolate_level#0, hir_id: HirId(DefId(0:404 ~ unicode_bidi[2979]::get_base_direction_impl).42), res: Local(HirId(DefId(0:404 ~ unicode_bidi[2979]::get_base_direction_impl).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1297:48: 1297:61 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:404 ~ unicode_bidi[2979]::get_base_direction_impl).43), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1297:64: 1297:65 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1297:64: 1297:65 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:404 ~ unicode_bidi[2979]::get_base_direction_impl).55), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1298:57: 1298:70 (#0), res: Local(HirId(DefId(0:404 ~ unicode_bidi[2979]::get_base_direction_impl).10)), segments: [PathSegment { ident: isolate_level#0, hir_id: HirId(DefId(0:404 ~ unicode_bidi[2979]::get_base_direction_impl).56), res: Local(HirId(DefId(0:404 ~ unicode_bidi[2979]::get_base_direction_impl).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1298:57: 1298:70 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:404 ~ unicode_bidi[2979]::get_base_direction_impl).57), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1298:73: 1298:74 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-bidi-0.3.15/src/lib.rs:1298:73: 1298:74 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:413 ~ unicode_bidi[2979]::{impl#6}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:14298 ~ core[7d5a]::str::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:414 ~ unicode_bidi[2979]::{impl#6}::char_at)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:14310 ~ core[7d5a]::str::{impl#0}::get)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] lang item being silently ignored, 
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:14325 ~ core[7d5a]::str::{impl#0}::chars)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:5304 ~ core[7d5a]::char::methods::{impl#0}::len_utf8)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:415 ~ unicode_bidi[2979]::{impl#6}::subrange)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:416 ~ unicode_bidi[2979]::{impl#6}::chars)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:14325 ~ core[7d5a]::str::{impl#0}::chars)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:417 ~ unicode_bidi[2979]::{impl#6}::char_indices)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:14326 ~ core[7d5a]::str::{impl#0}::char_indices)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:418 ~ unicode_bidi[2979]::{impl#6}::indices_lengths)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:422 ~ unicode_bidi[2979]::{impl#7}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:419 ~ unicode_bidi[2979]::{impl#6}::char_len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5304 ~ core[7d5a]::char::methods::{impl#0}::len_utf8)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] lang item being silently ignored, 
[DEBUG] Trying to get func ty of defid DefId(0:712 ~ unicode_bidi[2979]::{impl#29}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11196 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field1_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:422 ~ unicode_bidi[2979]::{impl#7}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:14326 ~ core[7d5a]::str::{impl#0}::char_indices)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:425 ~ unicode_bidi[2979]::{impl#8}::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:5304 ~ core[7d5a]::char::methods::{impl#0}::len_utf8)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
