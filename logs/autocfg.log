[DEBUG] Trying to get func ty of defid DefId(0:89 ~ autocfg[6ddc]::error::{impl#2}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11196 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field1_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:27 ~ autocfg[6ddc]::error::{impl#0}::description)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:28 ~ autocfg[6ddc]::error::{impl#0}::cause)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:30 ~ autocfg[6ddc]::error::{impl#1}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:104 ~ autocfg[6ddc]::error::{impl#3}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:31 ~ autocfg[6ddc]::error::from_io)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:32 ~ autocfg[6ddc]::error::from_num)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:33 ~ autocfg[6ddc]::error::from_utf8)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:34 ~ autocfg[6ddc]::error::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:110 ~ autocfg[6ddc]::version::{impl#1}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:112 ~ autocfg[6ddc]::version::{impl#2}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11200 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field3_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).6), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:11:5: 11:17 (#23) }, Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).7), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:10:5: 10:17 (#23) }, Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).8), kind: Field(Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:24 (#23), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).10), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23) }, major#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:10:5: 10:17 (#23) }, Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).11), kind: Field(Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).4)), segments: [PathSegment { ident: other#23, hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).13), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23) }, major#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:10:5: 10:17 (#23) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:10:5: 10:17 (#23) }, Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).14), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:11:5: 11:17 (#23) }, Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).15), kind: Field(Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:24 (#23), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).17), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23) }, minor#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:11:5: 11:17 (#23) }, Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).18), kind: Field(Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).19), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).4)), segments: [PathSegment { ident: other#23, hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).20), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23) }, minor#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:11:5: 11:17 (#23) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:11:5: 11:17 (#23) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:11:5: 11:17 (#23) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).21), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:12:5: 12:17 (#23) }, Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).22), kind: Field(Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).23), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:24 (#23), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).24), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23) }, patch#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:12:5: 12:17 (#23) }, Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).25), kind: Field(Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).4)), segments: [PathSegment { ident: other#23, hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).27), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23) }, patch#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:12:5: 12:17 (#23) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:12:5: 12:17 (#23) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).7), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:10:5: 10:17 (#23) }, Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).8), kind: Field(Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:24 (#23), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).10), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23) }, major#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:10:5: 10:17 (#23) }, Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).11), kind: Field(Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).4)), segments: [PathSegment { ident: other#23, hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).13), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23) }, major#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:10:5: 10:17 (#23) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:10:5: 10:17 (#23) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).14), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:11:5: 11:17 (#23) }, Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).15), kind: Field(Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:24 (#23), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).17), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23) }, minor#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:11:5: 11:17 (#23) }, Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).18), kind: Field(Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).19), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).4)), segments: [PathSegment { ident: other#23, hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).20), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23) }, minor#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:11:5: 11:17 (#23) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:11:5: 11:17 (#23) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).8), kind: Field(Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:24 (#23), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).10), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23) }, major#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:10:5: 10:17 (#23) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).11), kind: Field(Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).4)), segments: [PathSegment { ident: other#23, hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).13), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23) }, major#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:10:5: 10:17 (#23) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).15), kind: Field(Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:24 (#23), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).17), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23) }, minor#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:11:5: 11:17 (#23) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).18), kind: Field(Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).19), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).4)), segments: [PathSegment { ident: other#23, hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).20), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23) }, minor#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:11:5: 11:17 (#23) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).22), kind: Field(Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).23), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:24 (#23), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).24), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23) }, patch#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:12:5: 12:17 (#23) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).25), kind: Field(Expr { hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).4)), segments: [PathSegment { ident: other#23, hir_id: HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).27), res: Local(HirId(DefId(0:115 ~ autocfg[6ddc]::version::{impl#4}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:8:24: 8:33 (#23) }, patch#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:12:5: 12:17 (#23) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:117 ~ autocfg[6ddc]::version::{impl#5}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:119 ~ autocfg[6ddc]::version::{impl#6}::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3008 ~ core[7d5a]::cmp::PartialOrd::partial_cmp)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3008 ~ core[7d5a]::cmp::PartialOrd::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3008 ~ core[7d5a]::cmp::PartialOrd::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:121 ~ autocfg[6ddc]::version::{impl#7}::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:44 ~ autocfg[6ddc]::version::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:45 ~ autocfg[6ddc]::version::{impl#0}::from_rustc)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:5695 ~ std[e3cd]::process::{impl#22}::output)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:5673 ~ std[e3cd]::process::{impl#22}::args)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:5669 ~ std[e3cd]::process::{impl#22}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:31 ~ autocfg[6ddc]::error::from_io)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5748 ~ std[e3cd]::process::{impl#40}::success)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:34 ~ autocfg[6ddc]::error::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13518 ~ core[7d5a]::str::converts::from_utf8)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:33 ~ autocfg[6ddc]::error::from_utf8)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9022 ~ core[7d5a]::iter::traits::iterator::Iterator::find)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:14330 ~ core[7d5a]::str::{impl#0}::lines)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:14335 ~ core[7d5a]::str::{impl#0}::starts_with)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:34 ~ autocfg[6ddc]::error::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:14340 ~ core[7d5a]::str::{impl#0}::find)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:14359 ~ core[7d5a]::str::{impl#0}::splitn)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:9688 ~ core[7d5a]::option::{impl#0}::ok_or)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:34 ~ autocfg[6ddc]::error::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:9688 ~ core[7d5a]::option::{impl#0}::ok_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:34 ~ autocfg[6ddc]::error::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:9688 ~ core[7d5a]::option::{impl#0}::ok_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:34 ~ autocfg[6ddc]::error::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:44 ~ autocfg[6ddc]::version::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:14405 ~ core[7d5a]::str::{impl#0}::parse)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:32 ~ autocfg[6ddc]::error::from_num)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:14405 ~ core[7d5a]::str::{impl#0}::parse)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:32 ~ autocfg[6ddc]::error::from_num)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:14405 ~ core[7d5a]::str::{impl#0}::parse)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:32 ~ autocfg[6ddc]::error::from_num)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:130 ~ autocfg[6ddc]::{impl#1}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:132 ~ autocfg[6ddc]::{impl#2}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11206 ~ core[7d5a]::fmt::{impl#9}::debug_struct_fields_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ autocfg[6ddc]::emit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:3625 ~ std[e3cd]::io::stdio::_print)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:49 ~ autocfg[6ddc]::rerun_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:3625 ~ std[e3cd]::io::stdio::_print)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:50 ~ autocfg[6ddc]::rerun_env)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:3625 ~ std[e3cd]::io::stdio::_print)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:51 ~ autocfg[6ddc]::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10419 ~ core[7d5a]::result::{impl#0}::unwrap)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:53 ~ autocfg[6ddc]::{impl#0}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:53 ~ autocfg[6ddc]::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:1992 ~ std[e3cd]::env::var_os)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:54 ~ autocfg[6ddc]::{impl#0}::with_dir)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:34 ~ autocfg[6ddc]::error::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:54 ~ autocfg[6ddc]::{impl#0}::with_dir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9672 ~ core[7d5a]::option::{impl#0}::unwrap_or_else)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:1992 ~ std[e3cd]::env::var_os)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:45 ~ autocfg[6ddc]::version::{impl#0}::from_rustc)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:1992 ~ std[e3cd]::env::var_os)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2584 ~ std[e3cd]::fs::metadata)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:31 ~ autocfg[6ddc]::error::from_io)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:54 ~ autocfg[6ddc]::{impl#0}::with_dir).103), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:54 ~ autocfg[6ddc]::{impl#0}::with_dir).104), kind: MethodCall(PathSegment { ident: is_dir#0, hir_id: HirId(DefId(0:54 ~ autocfg[6ddc]::{impl#0}::with_dir).105), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:54 ~ autocfg[6ddc]::{impl#0}::with_dir).106), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:165:13: 165:17 (#0), res: Local(HirId(DefId(0:54 ~ autocfg[6ddc]::{impl#0}::with_dir).100)), segments: [PathSegment { ident: meta#0, hir_id: HirId(DefId(0:54 ~ autocfg[6ddc]::{impl#0}::with_dir).107), res: Local(HirId(DefId(0:54 ~ autocfg[6ddc]::{impl#0}::with_dir).100)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:165:13: 165:17 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:165:18: 165:26 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:165:13: 165:26 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:165:12: 165:26 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:54 ~ autocfg[6ddc]::{impl#0}::with_dir).108), kind: MethodCall(PathSegment { ident: readonly#0, hir_id: HirId(DefId(0:54 ~ autocfg[6ddc]::{impl#0}::with_dir).109), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:54 ~ autocfg[6ddc]::{impl#0}::with_dir).110), kind: MethodCall(PathSegment { ident: permissions#0, hir_id: HirId(DefId(0:54 ~ autocfg[6ddc]::{impl#0}::with_dir).111), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:54 ~ autocfg[6ddc]::{impl#0}::with_dir).112), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:165:30: 165:34 (#0), res: Local(HirId(DefId(0:54 ~ autocfg[6ddc]::{impl#0}::with_dir).100)), segments: [PathSegment { ident: meta#0, hir_id: HirId(DefId(0:54 ~ autocfg[6ddc]::{impl#0}::with_dir).113), res: Local(HirId(DefId(0:54 ~ autocfg[6ddc]::{impl#0}::with_dir).100)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:165:30: 165:34 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:165:35: 165:48 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:165:30: 165:48 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:165:49: 165:59 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:165:30: 165:59 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:2533 ~ std[e3cd]::fs::{impl#17}::is_dir)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:2555 ~ std[e3cd]::fs::{impl#24}::readonly)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:2537 ~ std[e3cd]::fs::{impl#17}::permissions)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:34 ~ autocfg[6ddc]::error::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:84 ~ autocfg[6ddc]::rustflags)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10435 ~ core[7d5a]::result::{impl#0}::unwrap_or)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:59 ~ autocfg[6ddc]::{impl#0}::probe)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10435 ~ core[7d5a]::result::{impl#0}::unwrap_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:59 ~ autocfg[6ddc]::{impl#0}::probe)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10391 ~ core[7d5a]::result::{impl#0}::ok)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:3791 ~ std[e3cd]::io::Write::write_all)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:3577 ~ std[e3cd]::io::stdio::stderr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).8), kind: Field(Expr { hir_id: HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:194:9: 194:13 (#0), res: Local(HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).10), res: Local(HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:194:9: 194:13 (#0) }, rustc_version#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:194:9: 194:27 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).11), kind: Call(Expr { hir_id: HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).12), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:194:31: 194:38 (#0), res: Def(Struct, DefId(0:105 ~ autocfg[6ddc]::version::Version)), segments: [PathSegment { ident: Version#0, hir_id: HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).13), res: Def(Struct, DefId(0:105 ~ autocfg[6ddc]::version::Version)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:194:31: 194:38 (#0) }, PathSegment { ident: new#0, hir_id: HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).15), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:194:31: 194:43 (#0) }, [Expr { hir_id: HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:194:44: 194:49 (#0), res: Local(HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).4)), segments: [PathSegment { ident: major#0, hir_id: HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).17), res: Local(HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:194:44: 194:49 (#0) }, Expr { hir_id: HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:194:51: 194:56 (#0), res: Local(HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).6)), segments: [PathSegment { ident: minor#0, hir_id: HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).19), res: Local(HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:194:51: 194:56 (#0) }, Expr { hir_id: HirId(DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version).20), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:194:58: 194:59 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:194:58: 194:59 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:194:31: 194:60 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:44 ~ autocfg[6ddc]::version::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:58 ~ autocfg[6ddc]::{impl#0}::emit_rustc_version)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:57 ~ autocfg[6ddc]::{impl#0}::probe_rustc_version)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ autocfg[6ddc]::emit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1288 ~ core[7d5a]::hint::must_use)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(5:5104 ~ alloc[5873]::fmt::format)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:59 ~ autocfg[6ddc]::{impl#0}::probe)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:37966 ~ core[7d5a]::sync::atomic::{impl#78}::fetch_add)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:5669 ~ std[e3cd]::process::{impl#22}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:5671 ~ std[e3cd]::process::{impl#22}::arg)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:5671 ~ std[e3cd]::process::{impl#22}::arg)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5671 ~ std[e3cd]::process::{impl#22}::arg)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5671 ~ std[e3cd]::process::{impl#22}::arg)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5671 ~ std[e3cd]::process::{impl#22}::arg)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5671 ~ std[e3cd]::process::{impl#22}::arg)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1288 ~ core[7d5a]::hint::must_use)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5104 ~ alloc[5873]::fmt::format)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:9662 ~ core[7d5a]::option::{impl#0}::as_ref)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:5671 ~ std[e3cd]::process::{impl#22}::arg)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5671 ~ std[e3cd]::process::{impl#22}::arg)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5673 ~ std[e3cd]::process::{impl#22}::args)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5688 ~ std[e3cd]::process::{impl#22}::stdin)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:5671 ~ std[e3cd]::process::{impl#22}::arg)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5723 ~ std[e3cd]::process::{impl#29}::piped)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5694 ~ std[e3cd]::process::{impl#22}::spawn)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:31 ~ autocfg[6ddc]::error::from_io)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9669 ~ core[7d5a]::option::{impl#0}::expect)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:9713 ~ core[7d5a]::option::{impl#0}::take)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:3791 ~ std[e3cd]::io::Write::write_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:31 ~ autocfg[6ddc]::error::from_io)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:3791 ~ std[e3cd]::io::Write::write_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3157 ~ core[7d5a]::convert::AsRef::as_ref)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:31 ~ autocfg[6ddc]::error::from_io)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2186 ~ core[7d5a]::mem::drop)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5784 ~ std[e3cd]::process::{impl#56}::wait)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:31 ~ autocfg[6ddc]::error::from_io)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5748 ~ std[e3cd]::process::{impl#40}::success)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:62 ~ autocfg[6ddc]::{impl#0}::probe_sysroot_crate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10435 ~ core[7d5a]::result::{impl#0}::unwrap_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:59 ~ autocfg[6ddc]::{impl#0}::probe)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1288 ~ core[7d5a]::hint::must_use)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5104 ~ alloc[5873]::fmt::format)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:63 ~ autocfg[6ddc]::{impl#0}::emit_sysroot_crate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:62 ~ autocfg[6ddc]::{impl#0}::probe_sysroot_crate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ autocfg[6ddc]::emit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1288 ~ core[7d5a]::hint::must_use)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5104 ~ alloc[5873]::fmt::format)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:77 ~ autocfg[6ddc]::mangle)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:64 ~ autocfg[6ddc]::{impl#0}::probe_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10435 ~ core[7d5a]::result::{impl#0}::unwrap_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:59 ~ autocfg[6ddc]::{impl#0}::probe)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1288 ~ core[7d5a]::hint::must_use)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5104 ~ alloc[5873]::fmt::format)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:65 ~ autocfg[6ddc]::{impl#0}::emit_has_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:64 ~ autocfg[6ddc]::{impl#0}::probe_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ autocfg[6ddc]::emit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1288 ~ core[7d5a]::hint::must_use)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5104 ~ alloc[5873]::fmt::format)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:77 ~ autocfg[6ddc]::mangle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:66 ~ autocfg[6ddc]::{impl#0}::emit_path_cfg)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:64 ~ autocfg[6ddc]::{impl#0}::probe_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ autocfg[6ddc]::emit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:67 ~ autocfg[6ddc]::{impl#0}::probe_trait)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10435 ~ core[7d5a]::result::{impl#0}::unwrap_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:59 ~ autocfg[6ddc]::{impl#0}::probe)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1288 ~ core[7d5a]::hint::must_use)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5104 ~ alloc[5873]::fmt::format)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:68 ~ autocfg[6ddc]::{impl#0}::emit_has_trait)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:67 ~ autocfg[6ddc]::{impl#0}::probe_trait)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ autocfg[6ddc]::emit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1288 ~ core[7d5a]::hint::must_use)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5104 ~ alloc[5873]::fmt::format)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:77 ~ autocfg[6ddc]::mangle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:69 ~ autocfg[6ddc]::{impl#0}::emit_trait_cfg)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:67 ~ autocfg[6ddc]::{impl#0}::probe_trait)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ autocfg[6ddc]::emit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:70 ~ autocfg[6ddc]::{impl#0}::probe_type)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10435 ~ core[7d5a]::result::{impl#0}::unwrap_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:59 ~ autocfg[6ddc]::{impl#0}::probe)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1288 ~ core[7d5a]::hint::must_use)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5104 ~ alloc[5873]::fmt::format)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:71 ~ autocfg[6ddc]::{impl#0}::emit_has_type)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:70 ~ autocfg[6ddc]::{impl#0}::probe_type)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ autocfg[6ddc]::emit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1288 ~ core[7d5a]::hint::must_use)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5104 ~ alloc[5873]::fmt::format)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:77 ~ autocfg[6ddc]::mangle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:72 ~ autocfg[6ddc]::{impl#0}::emit_type_cfg)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:70 ~ autocfg[6ddc]::{impl#0}::probe_type)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ autocfg[6ddc]::emit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:73 ~ autocfg[6ddc]::{impl#0}::probe_expression)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10435 ~ core[7d5a]::result::{impl#0}::unwrap_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:59 ~ autocfg[6ddc]::{impl#0}::probe)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1288 ~ core[7d5a]::hint::must_use)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5104 ~ alloc[5873]::fmt::format)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:74 ~ autocfg[6ddc]::{impl#0}::emit_expression_cfg)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:73 ~ autocfg[6ddc]::{impl#0}::probe_expression)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ autocfg[6ddc]::emit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:75 ~ autocfg[6ddc]::{impl#0}::probe_constant)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10435 ~ core[7d5a]::result::{impl#0}::unwrap_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:59 ~ autocfg[6ddc]::{impl#0}::probe)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1288 ~ core[7d5a]::hint::must_use)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5104 ~ alloc[5873]::fmt::format)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:76 ~ autocfg[6ddc]::{impl#0}::emit_constant_cfg)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:75 ~ autocfg[6ddc]::{impl#0}::probe_constant)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ autocfg[6ddc]::emit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:77 ~ autocfg[6ddc]::mangle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:8953 ~ core[7d5a]::iter::traits::iterator::Iterator::collect)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:8910 ~ core[7d5a]::iter::traits::iterator::Iterator::map)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:14325 ~ core[7d5a]::str::{impl#0}::chars)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:79 ~ autocfg[6ddc]::dir_contains_target)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9671 ~ core[7d5a]::option::{impl#0}::unwrap_or)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:9699 ~ core[7d5a]::option::{impl#0}::and_then)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:9662 ~ core[7d5a]::option::{impl#0}::as_ref)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9699 ~ core[7d5a]::option::{impl#0}::and_then)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5430 ~ std[e3cd]::path::{impl#63}::to_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:9672 ~ core[7d5a]::option::{impl#0}::unwrap_or_else)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9676 ~ core[7d5a]::option::{impl#0}::map)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:3166 ~ core[7d5a]::convert::From::from)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:3166 ~ core[7d5a]::convert::From::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:5312 ~ std[e3cd]::path::{impl#29}::push)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:9676 ~ core[7d5a]::option::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5430 ~ std[e3cd]::path::{impl#63}::to_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:14333 ~ core[7d5a]::str::{impl#0}::contains)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:84 ~ autocfg[6ddc]::rustflags)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:1989 ~ std[e3cd]::env::var)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:6026 ~ alloc[5873]::string::{impl#0}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8953 ~ core[7d5a]::iter::traits::iterator::Iterator::collect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:8910 ~ core[7d5a]::iter::traits::iterator::Iterator::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:14347 ~ core[7d5a]::str::{impl#0}::split)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(5:6152 ~ alloc[5873]::string::ToString::to_string)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).50), kind: Binary(Spanned { node: Ne, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:16: 437:18 (#0) }, Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).51), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).52), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:9: 437:15 (#0), res: Local(HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).2)), segments: [PathSegment { ident: target#0, hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).53), res: Local(HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:9: 437:15 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:8: 437:15 (#0) }, Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).54), kind: Call(Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).55), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:19: 437:30 (#0), res: Def(Fn, DefId(1:1992 ~ std[e3cd]::env::var_os)), segments: [PathSegment { ident: env#0, hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).56), res: Def(Mod, DefId(1:1954 ~ std[e3cd]::env)), args: None, infer_args: true }, PathSegment { ident: var_os#0, hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).57), res: Def(Fn, DefId(1:1992 ~ std[e3cd]::env::var_os)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:19: 437:30 (#0) }, [Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).58), kind: Lit(Spanned { node: Str("HOST", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:31: 437:37 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:31: 437:37 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:19: 437:38 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:8: 437:38 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).59), kind: Call(Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).60), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:438:12: 438:31 (#0), res: Def(Fn, DefId(0:79 ~ autocfg[6ddc]::dir_contains_target)), segments: [PathSegment { ident: dir_contains_target#0, hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).61), res: Def(Fn, DefId(0:79 ~ autocfg[6ddc]::dir_contains_target)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:438:12: 438:31 (#0) }, [Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).62), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:438:32: 438:38 (#0), res: Local(HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).2)), segments: [PathSegment { ident: target#0, hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).63), res: Local(HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:438:32: 438:38 (#0) }, Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).64), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:438:40: 438:43 (#0), res: Local(HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).4)), segments: [PathSegment { ident: dir#0, hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).65), res: Local(HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:438:40: 438:43 (#0) }, Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).66), kind: Call(Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).67), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:438:45: 438:56 (#0), res: Def(Fn, DefId(1:1992 ~ std[e3cd]::env::var_os)), segments: [PathSegment { ident: env#0, hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).68), res: Def(Mod, DefId(1:1954 ~ std[e3cd]::env)), args: None, infer_args: true }, PathSegment { ident: var_os#0, hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).69), res: Def(Fn, DefId(1:1992 ~ std[e3cd]::env::var_os)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:438:45: 438:56 (#0) }, [Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).70), kind: Lit(Spanned { node: Str("CARGO_TARGET_DIR", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:438:57: 438:75 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:438:57: 438:75 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:438:45: 438:76 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:438:12: 438:77 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).51), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).52), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:9: 437:15 (#0), res: Local(HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).2)), segments: [PathSegment { ident: target#0, hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).53), res: Local(HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:9: 437:15 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:8: 437:15 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).54), kind: Call(Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).55), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:19: 437:30 (#0), res: Def(Fn, DefId(1:1992 ~ std[e3cd]::env::var_os)), segments: [PathSegment { ident: env#0, hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).56), res: Def(Mod, DefId(1:1954 ~ std[e3cd]::env)), args: None, infer_args: true }, PathSegment { ident: var_os#0, hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).57), res: Def(Fn, DefId(1:1992 ~ std[e3cd]::env::var_os)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:19: 437:30 (#0) }, [Expr { hir_id: HirId(DefId(0:84 ~ autocfg[6ddc]::rustflags).58), kind: Lit(Spanned { node: Str("HOST", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:31: 437:37 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:31: 437:37 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:437:19: 437:38 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:1992 ~ std[e3cd]::env::var_os)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:79 ~ autocfg[6ddc]::dir_contains_target)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:1992 ~ std[e3cd]::env::var_os)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:1989 ~ std[e3cd]::env::var)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8953 ~ core[7d5a]::iter::traits::iterator::Iterator::collect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:8910 ~ core[7d5a]::iter::traits::iterator::Iterator::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:8920 ~ core[7d5a]::iter::traits::iterator::Iterator::filter)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:8910 ~ core[7d5a]::iter::traits::iterator::Iterator::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:14347 ~ core[7d5a]::str::{impl#0}::split)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:14379 ~ core[7d5a]::str::{impl#0}::trim)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:14299 ~ core[7d5a]::str::{impl#0}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(5:6152 ~ alloc[5873]::string::ToString::to_string)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
