[DEBUG] Trying to get func ty of defid DefId(0:7 ~ rustix[903e]::buffer::split_init)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/buffer.rs:19:19: 19:27 (#0), res: Local(HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).4)), segments: [PathSegment { ident: init_len#0, hir_id: HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).12), res: Local(HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/buffer.rs:19:19: 19:27 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).13), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).14), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/buffer.rs:19:31: 19:34 (#0), res: Local(HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).2)), segments: [PathSegment { ident: buf#0, hir_id: HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).16), res: Local(HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/buffer.rs:19:31: 19:34 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/buffer.rs:19:35: 19:40 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/buffer.rs:19:31: 19:40 (#0) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:13279 ~ core[7d5a]::slice::{impl#0}::as_mut_ptr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).39), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).40), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).41), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/buffer.rs:21:22: 21:25 (#0), res: Local(HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).2)), segments: [PathSegment { ident: buf#0, hir_id: HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).42), res: Local(HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/buffer.rs:21:22: 21:25 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/buffer.rs:21:26: 21:31 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/buffer.rs:21:22: 21:31 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).43), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/buffer.rs:21:34: 21:42 (#0), res: Local(HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).4)), segments: [PathSegment { ident: init_len#0, hir_id: HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).44), res: Local(HirId(DefId(0:7 ~ rustix[903e]::buffer::split_init).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/buffer.rs:21:34: 21:42 (#0) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:13131 ~ core[7d5a]::slice::raw::from_raw_parts_mut)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:13131 ~ core[7d5a]::slice::raw::from_raw_parts_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2689 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::add)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:19 ~ rustix[903e]::utils::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:21 ~ rustix[903e]::utils::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:23 ~ rustix[903e]::utils::option_as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2752 ~ core[7d5a]::ptr::null)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:25 ~ rustix[903e]::utils::option_as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2754 ~ core[7d5a]::ptr::null_mut)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).5), kind: MethodCall(PathSegment { ident: is_none#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).6), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).7), kind: MethodCall(PathSegment { ident: checked_add#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).8), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).9), kind: Cast(Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:44:9: 44:14 (#0), res: Local(HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).2)), segments: [PathSegment { ident: value#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).11), res: Local(HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:44:9: 44:14 (#0) }, Ty { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:44:18: 44:23 (#0), res: PrimTy(Uint(Usize)), segments: [PathSegment { ident: usize#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).13), res: PrimTy(Uint(Usize)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:44:18: 44:23 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:44:8: 44:24 (#0) }, [Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).14), kind: Call(Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:44:37: 44:49 (#0), res: Def(Fn, DefId(2:2158 ~ core[7d5a]::mem::size_of)), segments: [PathSegment { ident: size_of#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).18), res: Def(Fn, DefId(2:2158 ~ core[7d5a]::mem::size_of)), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:44:47: 44:48 (#0), res: Def(TyParam, DefId(0:28 ~ rustix[903e]::utils::check_raw_pointer::T)), segments: [PathSegment { ident: T#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).17), res: Def(TyParam, DefId(0:28 ~ rustix[903e]::utils::check_raw_pointer::T)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:44:47: 44:48 (#0) })], constraints: [], parenthesized: No, span_ext: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:44:46: 44:49 (#0) }), infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:44:37: 44:49 (#0) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:44:37: 44:51 (#0) }], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:44:25: 44:52 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:44:8: 44:52 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:44:53: 44:62 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:44:8: 44:62 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).19), kind: Binary(Spanned { node: Ne, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:47: 45:49 (#0) }, Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).20), kind: Binary(Spanned { node: Rem, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:29: 45:30 (#0) }, Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).21), kind: Cast(Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:13: 45:18 (#0), res: Local(HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).2)), segments: [PathSegment { ident: value#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).23), res: Local(HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:13: 45:18 (#0) }, Ty { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:22: 45:27 (#0), res: PrimTy(Uint(Usize)), segments: [PathSegment { ident: usize#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).25), res: PrimTy(Uint(Usize)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:22: 45:27 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:12: 45:28 (#0) }, Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).26), kind: Call(Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:31: 45:44 (#0), res: Def(Fn, DefId(2:2168 ~ core[7d5a]::mem::align_of)), segments: [PathSegment { ident: align_of#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).30), res: Def(Fn, DefId(2:2168 ~ core[7d5a]::mem::align_of)), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:42: 45:43 (#0), res: Def(TyParam, DefId(0:28 ~ rustix[903e]::utils::check_raw_pointer::T)), segments: [PathSegment { ident: T#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).29), res: Def(TyParam, DefId(0:28 ~ rustix[903e]::utils::check_raw_pointer::T)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:42: 45:43 (#0) })], constraints: [], parenthesized: No, span_ext: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:41: 45:44 (#0) }), infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:31: 45:44 (#0) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:31: 45:46 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:12: 45:46 (#0) }, Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).31), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:50: 45:51 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:50: 45:51 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:12: 45:51 (#0) }
[DEBUG] Trying to get func ty of defid DefId(2:9659 ~ core[7d5a]::option::{impl#0}::is_none)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:25390 ~ core[7d5a]::num::{impl#11}::checked_add)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:2158 ~ core[7d5a]::mem::size_of)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).20), kind: Binary(Spanned { node: Rem, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:29: 45:30 (#0) }, Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).21), kind: Cast(Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:13: 45:18 (#0), res: Local(HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).2)), segments: [PathSegment { ident: value#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).23), res: Local(HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:13: 45:18 (#0) }, Ty { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:22: 45:27 (#0), res: PrimTy(Uint(Usize)), segments: [PathSegment { ident: usize#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).25), res: PrimTy(Uint(Usize)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:22: 45:27 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:12: 45:28 (#0) }, Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).26), kind: Call(Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:31: 45:44 (#0), res: Def(Fn, DefId(2:2168 ~ core[7d5a]::mem::align_of)), segments: [PathSegment { ident: align_of#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).30), res: Def(Fn, DefId(2:2168 ~ core[7d5a]::mem::align_of)), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:42: 45:43 (#0), res: Def(TyParam, DefId(0:28 ~ rustix[903e]::utils::check_raw_pointer::T)), segments: [PathSegment { ident: T#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).29), res: Def(TyParam, DefId(0:28 ~ rustix[903e]::utils::check_raw_pointer::T)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:42: 45:43 (#0) })], constraints: [], parenthesized: No, span_ext: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:41: 45:44 (#0) }), infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:31: 45:44 (#0) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:31: 45:46 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:12: 45:46 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).31), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:50: 45:51 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:50: 45:51 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).21), kind: Cast(Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:13: 45:18 (#0), res: Local(HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).2)), segments: [PathSegment { ident: value#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).23), res: Local(HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:13: 45:18 (#0) }, Ty { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:22: 45:27 (#0), res: PrimTy(Uint(Usize)), segments: [PathSegment { ident: usize#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).25), res: PrimTy(Uint(Usize)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:22: 45:27 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:12: 45:28 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).26), kind: Call(Expr { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:31: 45:44 (#0), res: Def(Fn, DefId(2:2168 ~ core[7d5a]::mem::align_of)), segments: [PathSegment { ident: align_of#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).30), res: Def(Fn, DefId(2:2168 ~ core[7d5a]::mem::align_of)), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:42: 45:43 (#0), res: Def(TyParam, DefId(0:28 ~ rustix[903e]::utils::check_raw_pointer::T)), segments: [PathSegment { ident: T#0, hir_id: HirId(DefId(0:27 ~ rustix[903e]::utils::check_raw_pointer).29), res: Def(TyParam, DefId(0:28 ~ rustix[903e]::utils::check_raw_pointer::T)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:42: 45:43 (#0) })], constraints: [], parenthesized: No, span_ext: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:41: 45:44 (#0) }), infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:31: 45:44 (#0) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/utils.rs:45:31: 45:46 (#0) }
[DEBUG] Trying to get func ty of defid DefId(2:2168 ~ core[7d5a]::mem::align_of)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2389 ~ core[7d5a]::ptr::non_null::{impl#3}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:69 ~ rustix[903e]::weak::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10610 ~ core[7d5a]::sync::atomic::{impl#6}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2158 ~ core[7d5a]::mem::size_of)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2158 ~ core[7d5a]::mem::size_of)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get).27), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#55), res: Local(HirId(DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get).19)), segments: [PathSegment { ident: left_val#55, hir_id: HirId(DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get).29), res: Local(HirId(DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get).19)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#55) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:22: 46:31 (#55) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get).30), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get).31), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#55), res: Local(HirId(DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get).20)), segments: [PathSegment { ident: right_val#55, hir_id: HirId(DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get).32), res: Local(HirId(DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get).20)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#55) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:35: 46:45 (#55) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10038 ~ core[7d5a]::panicking::assert_failed)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10619 ~ core[7d5a]::sync::atomic::{impl#6}::load)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:71 ~ rustix[903e]::weak::{impl#0}::initialize)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:2190 ~ core[7d5a]::mem::transmute_copy)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10674 ~ core[7d5a]::sync::atomic::fence)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:71 ~ rustix[903e]::weak::{impl#0}::initialize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:72 ~ rustix[903e]::weak::fetch)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10620 ~ core[7d5a]::sync::atomic::{impl#6}::store)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:2190 ~ core[7d5a]::mem::transmute_copy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:72 ~ rustix[903e]::weak::fetch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:5495 ~ core[7d5a]::ffi::c_str::{impl#6}::from_bytes_with_nul)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:14306 ~ core[7d5a]::str::{impl#0}::as_bytes)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2754 ~ core[7d5a]::ptr::null_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(20:387 ~ libc[9eb8]::unix::{extern#2}::dlsym)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:2560 ~ core[7d5a]::ptr::const_ptr::{impl#0}::cast)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2560 ~ core[7d5a]::ptr::const_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:90 ~ rustix[903e]::backend::conv::no_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4918 ~ std[e3cd]::os::fd::raw::AsRawFd::as_raw_fd)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:92 ~ rustix[903e]::backend::conv::owned_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4922 ~ std[e3cd]::os::fd::raw::IntoRawFd::into_raw_fd)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:93 ~ rustix[903e]::backend::conv::ret).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:41:8: 41:11 (#0), res: Local(HirId(DefId(0:93 ~ rustix[903e]::backend::conv::ret).2)), segments: [PathSegment { ident: raw#0, hir_id: HirId(DefId(0:93 ~ rustix[903e]::backend::conv::ret).6), res: Local(HirId(DefId(0:93 ~ rustix[903e]::backend::conv::ret).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:41:8: 41:11 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:93 ~ rustix[903e]::backend::conv::ret).7), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:41:15: 41:16 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:41:15: 41:16 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:498 ~ rustix[903e]::backend::io::errno::{impl#1}::last_os_error)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:94 ~ rustix[903e]::backend::conv::nonnegative_ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:94 ~ rustix[903e]::backend::conv::nonnegative_ret).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:51:8: 51:11 (#0), res: Local(HirId(DefId(0:94 ~ rustix[903e]::backend::conv::nonnegative_ret).2)), segments: [PathSegment { ident: raw#0, hir_id: HirId(DefId(0:94 ~ rustix[903e]::backend::conv::nonnegative_ret).6), res: Local(HirId(DefId(0:94 ~ rustix[903e]::backend::conv::nonnegative_ret).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:51:8: 51:11 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:94 ~ rustix[903e]::backend::conv::nonnegative_ret).7), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:51:15: 51:16 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:51:15: 51:16 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:498 ~ rustix[903e]::backend::io::errno::{impl#1}::last_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:95 ~ rustix[903e]::backend::conv::ret_infallible)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:95 ~ rustix[903e]::backend::conv::ret_infallible).21), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:95 ~ rustix[903e]::backend::conv::ret_infallible).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:59:23: 59:31 (#58), res: Local(HirId(DefId(0:95 ~ rustix[903e]::backend::conv::ret_infallible).13)), segments: [PathSegment { ident: left_val#58, hir_id: HirId(DefId(0:95 ~ rustix[903e]::backend::conv::ret_infallible).23), res: Local(HirId(DefId(0:95 ~ rustix[903e]::backend::conv::ret_infallible).13)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:59:23: 59:31 (#58) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:59:22: 59:31 (#58) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:95 ~ rustix[903e]::backend::conv::ret_infallible).24), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:95 ~ rustix[903e]::backend::conv::ret_infallible).25), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:59:36: 59:45 (#58), res: Local(HirId(DefId(0:95 ~ rustix[903e]::backend::conv::ret_infallible).14)), segments: [PathSegment { ident: right_val#58, hir_id: HirId(DefId(0:95 ~ rustix[903e]::backend::conv::ret_infallible).26), res: Local(HirId(DefId(0:95 ~ rustix[903e]::backend::conv::ret_infallible).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:59:36: 59:45 (#58) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:59:35: 59:45 (#58) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10038 ~ core[7d5a]::panicking::assert_failed)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:11035 ~ core[7d5a]::fmt::rt::{impl#1}::new_debug)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:498 ~ rustix[903e]::backend::io::errno::{impl#1}::last_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:96 ~ rustix[903e]::backend::conv::ret_c_int)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:96 ~ rustix[903e]::backend::conv::ret_c_int).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:66:8: 66:11 (#0), res: Local(HirId(DefId(0:96 ~ rustix[903e]::backend::conv::ret_c_int).2)), segments: [PathSegment { ident: raw#0, hir_id: HirId(DefId(0:96 ~ rustix[903e]::backend::conv::ret_c_int).6), res: Local(HirId(DefId(0:96 ~ rustix[903e]::backend::conv::ret_c_int).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:66:8: 66:11 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:96 ~ rustix[903e]::backend::conv::ret_c_int).7), kind: Unary(Neg, Expr { hir_id: HirId(DefId(0:96 ~ rustix[903e]::backend::conv::ret_c_int).8), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:66:16: 66:17 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:66:16: 66:17 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:66:15: 66:17 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:498 ~ rustix[903e]::backend::io::errno::{impl#1}::last_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:89:8: 89:11 (#0), res: Local(HirId(DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize).2)), segments: [PathSegment { ident: raw#0, hir_id: HirId(DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize).6), res: Local(HirId(DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:89:8: 89:11 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize).7), kind: Unary(Neg, Expr { hir_id: HirId(DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize).8), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:89:16: 89:17 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:89:16: 89:17 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:89:15: 89:17 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:498 ~ rustix[903e]::backend::io::errno::{impl#1}::last_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:92:23: 92:26 (#0), res: Local(HirId(DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize).2)), segments: [PathSegment { ident: raw#0, hir_id: HirId(DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize).29), res: Local(HirId(DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:92:23: 92:26 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize).30), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:92:30: 92:31 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:92:30: 92:31 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:98 ~ rustix[903e]::backend::conv::ret_off_t)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:98 ~ rustix[903e]::backend::conv::ret_off_t).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:101:8: 101:11 (#0), res: Local(HirId(DefId(0:98 ~ rustix[903e]::backend::conv::ret_off_t).2)), segments: [PathSegment { ident: raw#0, hir_id: HirId(DefId(0:98 ~ rustix[903e]::backend::conv::ret_off_t).6), res: Local(HirId(DefId(0:98 ~ rustix[903e]::backend::conv::ret_off_t).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:101:8: 101:11 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:98 ~ rustix[903e]::backend::conv::ret_off_t).7), kind: Unary(Neg, Expr { hir_id: HirId(DefId(0:98 ~ rustix[903e]::backend::conv::ret_off_t).8), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:101:16: 101:17 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:101:16: 101:17 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:101:15: 101:17 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:498 ~ rustix[903e]::backend::io::errno::{impl#1}::last_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:99 ~ rustix[903e]::backend::conv::ret_pid_t)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:99 ~ rustix[903e]::backend::conv::ret_pid_t).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:111:8: 111:11 (#0), res: Local(HirId(DefId(0:99 ~ rustix[903e]::backend::conv::ret_pid_t).2)), segments: [PathSegment { ident: raw#0, hir_id: HirId(DefId(0:99 ~ rustix[903e]::backend::conv::ret_pid_t).6), res: Local(HirId(DefId(0:99 ~ rustix[903e]::backend::conv::ret_pid_t).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:111:8: 111:11 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:99 ~ rustix[903e]::backend::conv::ret_pid_t).7), kind: Unary(Neg, Expr { hir_id: HirId(DefId(0:99 ~ rustix[903e]::backend::conv::ret_pid_t).8), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:111:16: 111:17 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:111:16: 111:17 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:111:15: 111:17 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:498 ~ rustix[903e]::backend::io::errno::{impl#1}::last_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:100 ~ rustix[903e]::backend::conv::ret_owned_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:100 ~ rustix[903e]::backend::conv::ret_owned_fd).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:126:8: 126:11 (#0), res: Local(HirId(DefId(0:100 ~ rustix[903e]::backend::conv::ret_owned_fd).2)), segments: [PathSegment { ident: raw#0, hir_id: HirId(DefId(0:100 ~ rustix[903e]::backend::conv::ret_owned_fd).6), res: Local(HirId(DefId(0:100 ~ rustix[903e]::backend::conv::ret_owned_fd).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:126:8: 126:11 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:100 ~ rustix[903e]::backend::conv::ret_owned_fd).7), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:100 ~ rustix[903e]::backend::conv::ret_owned_fd).8), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:126:16: 126:17 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:126:16: 126:17 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:126:15: 126:17 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:498 ~ rustix[903e]::backend::io::errno::{impl#1}::last_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:4920 ~ std[e3cd]::os::fd::raw::FromRawFd::from_raw_fd)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:101 ~ rustix[903e]::backend::conv::ret_discarded_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:101 ~ rustix[903e]::backend::conv::ret_discarded_fd).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:136:8: 136:11 (#0), res: Local(HirId(DefId(0:101 ~ rustix[903e]::backend::conv::ret_discarded_fd).2)), segments: [PathSegment { ident: raw#0, hir_id: HirId(DefId(0:101 ~ rustix[903e]::backend::conv::ret_discarded_fd).6), res: Local(HirId(DefId(0:101 ~ rustix[903e]::backend::conv::ret_discarded_fd).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:136:8: 136:11 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:101 ~ rustix[903e]::backend::conv::ret_discarded_fd).7), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:101 ~ rustix[903e]::backend::conv::ret_discarded_fd).8), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:136:16: 136:17 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:136:16: 136:17 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/conv.rs:136:15: 136:17 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:498 ~ rustix[903e]::backend::io::errno::{impl#1}::last_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:102 ~ rustix[903e]::backend::conv::ret_discarded_char_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2652 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::is_null)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:498 ~ rustix[903e]::backend::io::errno::{impl#1}::last_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:103 ~ rustix[903e]::backend::conv::send_recv_len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:104 ~ rustix[903e]::backend::conv::ret_send_recv)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:105 ~ rustix[903e]::backend::conv::msg_iov_len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10435 ~ core[7d5a]::result::{impl#0}::unwrap_or)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:3170 ~ core[7d5a]::convert::TryInto::try_into)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:106 ~ rustix[903e]::backend::conv::msg_control_len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10435 ~ core[7d5a]::result::{impl#0}::unwrap_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3170 ~ core[7d5a]::convert::TryInto::try_into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1601 ~ rustix[903e]::backend::c::readwrite_pv::preadv)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1601 ~ rustix[903e]::backend::c::readwrite_pv::preadv).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/weak.rs:261:17: 261:20 (#64), res: Local(HirId(DefId(0:1601 ~ rustix[903e]::backend::c::readwrite_pv::preadv).13)), segments: [PathSegment { ident: fun#64, hir_id: HirId(DefId(0:1601 ~ rustix[903e]::backend::c::readwrite_pv::preadv).21), res: Local(HirId(DefId(0:1601 ~ rustix[903e]::backend::c::readwrite_pv::preadv).13)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/weak.rs:261:17: 261:20 (#64) }
[DEBUG] Trying to get func ty of defid DefId(21:38 ~ errno[a1de]::set_errno)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1601 ~ rustix[903e]::backend::c::readwrite_pv::preadv).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/weak.rs:261:17: 261:20 (#64), res: Local(HirId(DefId(0:1601 ~ rustix[903e]::backend::c::readwrite_pv::preadv).13)), segments: [PathSegment { ident: fun#64, hir_id: HirId(DefId(0:1601 ~ rustix[903e]::backend::c::readwrite_pv::preadv).21), res: Local(HirId(DefId(0:1601 ~ rustix[903e]::backend::c::readwrite_pv::preadv).13)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/weak.rs:261:17: 261:20 (#64) }
[DEBUG] Trying to get func ty of defid DefId(0:1603 ~ rustix[903e]::backend::c::readwrite_pv::pwritev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1603 ~ rustix[903e]::backend::c::readwrite_pv::pwritev).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/weak.rs:261:17: 261:20 (#68), res: Local(HirId(DefId(0:1603 ~ rustix[903e]::backend::c::readwrite_pv::pwritev).13)), segments: [PathSegment { ident: fun#68, hir_id: HirId(DefId(0:1603 ~ rustix[903e]::backend::c::readwrite_pv::pwritev).21), res: Local(HirId(DefId(0:1603 ~ rustix[903e]::backend::c::readwrite_pv::pwritev).13)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/weak.rs:261:17: 261:20 (#68) }
[DEBUG] Trying to get func ty of defid DefId(21:38 ~ errno[a1de]::set_errno)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1603 ~ rustix[903e]::backend::c::readwrite_pv::pwritev).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/weak.rs:261:17: 261:20 (#68), res: Local(HirId(DefId(0:1603 ~ rustix[903e]::backend::c::readwrite_pv::pwritev).13)), segments: [PathSegment { ident: fun#68, hir_id: HirId(DefId(0:1603 ~ rustix[903e]::backend::c::readwrite_pv::pwritev).21), res: Local(HirId(DefId(0:1603 ~ rustix[903e]::backend::c::readwrite_pv::pwritev).13)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/weak.rs:261:17: 261:20 (#68) }
[DEBUG] Trying to get func ty of defid DefId(0:166 ~ rustix[903e]::backend::fs::dir::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:168 ~ rustix[903e]::backend::fs::dir::{impl#0}::_new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:168 ~ rustix[903e]::backend::fs::dir::{impl#0}::_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:92 ~ rustix[903e]::backend::conv::owned_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(20:843 ~ libc[9eb8]::unix::{extern#9}::fdopendir)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2389 ~ core[7d5a]::ptr::non_null::{impl#3}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:498 ~ rustix[903e]::backend::io::errno::{impl#1}::last_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(20:268 ~ libc[9eb8]::unix::{extern#2}::close)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:169 ~ rustix[903e]::backend::fs::dir::{impl#0}::read_from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:171 ~ rustix[903e]::backend::fs::dir::{impl#0}::_read_from)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:171 ~ rustix[903e]::backend::fs::dir::{impl#0}::_read_from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:777 ~ rustix[903e]::fs::fcntl::fcntl_getfl)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:677 ~ rustix[903e]::fs::at::openat)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:9015 ~ core[7d5a]::iter::traits::iterator::Iterator::any)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:14327 ~ core[7d5a]::str::{impl#0}::bytes)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:171 ~ rustix[903e]::backend::fs::dir::{impl#0}::_read_from).53), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/cstr.rs:37:35: 37:36 (#72), res: Local(HirId(DefId(0:171 ~ rustix[903e]::backend::fs::dir::{impl#0}::_read_from).51)), segments: [PathSegment { ident: b#72, hir_id: HirId(DefId(0:171 ~ rustix[903e]::backend::fs::dir::{impl#0}::_read_from).54), res: Local(HirId(DefId(0:171 ~ rustix[903e]::backend::fs::dir::{impl#0}::_read_from).51)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/cstr.rs:37:35: 37:36 (#72) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:171 ~ rustix[903e]::backend::fs::dir::{impl#0}::_read_from).55), kind: Lit(Spanned { node: Byte(0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/cstr.rs:37:40: 37:45 (#72) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/cstr.rs:37:40: 37:45 (#72) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10015 ~ core[7d5a]::panicking::panic_fmt)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:11113 ~ core[7d5a]::fmt::{impl#2}::new_const)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:5496 ~ core[7d5a]::ffi::c_str::{impl#6}::from_bytes_with_nul_unchecked)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:14306 ~ core[7d5a]::str::{impl#0}::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:171 ~ rustix[903e]::backend::fs::dir::{impl#0}::_read_from).93), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/dir.rs:95:55: 95:60 (#0), res: Local(HirId(DefId(0:171 ~ rustix[903e]::backend::fs::dir::{impl#0}::_read_from).32)), segments: [PathSegment { ident: flags#0, hir_id: HirId(DefId(0:171 ~ rustix[903e]::backend::fs::dir::{impl#0}::_read_from).94), res: Local(HirId(DefId(0:171 ~ rustix[903e]::backend::fs::dir::{impl#0}::_read_from).32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/dir.rs:95:55: 95:60 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:171 ~ rustix[903e]::backend::fs::dir::{impl#0}::_read_from).95), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:171 ~ rustix[903e]::backend::fs::dir::{impl#0}::_read_from).97), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/dir.rs:95:63: 95:69 (#0), res: Def(Struct, DefId(0:2220 ~ rustix[903e]::backend::fs::types::OFlags)), segments: [PathSegment { ident: OFlags#0, hir_id: HirId(DefId(0:171 ~ rustix[903e]::backend::fs::dir::{impl#0}::_read_from).96), res: Def(Struct, DefId(0:2220 ~ rustix[903e]::backend::fs::types::OFlags)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/dir.rs:95:63: 95:69 (#0) }, PathSegment { ident: CLOEXEC#0, hir_id: HirId(DefId(0:171 ~ rustix[903e]::backend::fs::dir::{impl#0}::_read_from).98), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/dir.rs:95:63: 95:78 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2154 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:992 ~ rustix[903e]::io::dup::dup)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:92 ~ rustix[903e]::backend::conv::owned_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(20:843 ~ libc[9eb8]::unix::{extern#9}::fdopendir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2389 ~ core[7d5a]::ptr::non_null::{impl#3}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:498 ~ rustix[903e]::backend::io::errno::{impl#1}::last_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(20:268 ~ libc[9eb8]::unix::{extern#2}::close)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:172 ~ rustix[903e]::backend::fs::dir::{impl#0}::rewind)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:253 ~ libc[9eb8]::unix::{extern#2}::rewinddir)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:2396 ~ core[7d5a]::ptr::non_null::{impl#3}::as_ptr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:173 ~ rustix[903e]::backend::fs::dir::{impl#0}::read)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(21:38 ~ errno[a1de]::set_errno)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(20:251 ~ libc[9eb8]::unix::{extern#2}::readdir)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:2396 ~ core[7d5a]::ptr::non_null::{impl#3}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2652 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::is_null)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(21:37 ~ errno[a1de]::errno)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:173 ~ rustix[903e]::backend::fs::dir::{impl#0}::read).51), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/dir.rs:143:16: 143:26 (#0), res: Local(HirId(DefId(0:173 ~ rustix[903e]::backend::fs::dir::{impl#0}::read).48)), segments: [PathSegment { ident: curr_errno#0, hir_id: HirId(DefId(0:173 ~ rustix[903e]::backend::fs::dir::{impl#0}::read).52), res: Local(HirId(DefId(0:173 ~ rustix[903e]::backend::fs::dir::{impl#0}::read).48)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/dir.rs:143:16: 143:26 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:173 ~ rustix[903e]::backend::fs::dir::{impl#0}::read).53), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/dir.rs:143:30: 143:31 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/dir.rs:143:30: 143:31 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:820 ~ alloc[5873]::borrow::ToOwned::to_owned)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:5492 ~ core[7d5a]::ffi::c_str::{impl#6}::from_ptr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:13278 ~ core[7d5a]::slice::{impl#0}::as_ptr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:174 ~ rustix[903e]::backend::fs::dir::{impl#0}::stat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:841 ~ rustix[903e]::fs::fd::fstat)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:4979 ~ std[e3cd]::os::fd::owned::{impl#0}::borrow_raw)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(20:3649 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::dirfd)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:2396 ~ core[7d5a]::ptr::non_null::{impl#3}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:175 ~ rustix[903e]::backend::fs::dir::{impl#0}::statfs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:843 ~ rustix[903e]::fs::fd::fstatfs)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:4979 ~ std[e3cd]::os::fd::owned::{impl#0}::borrow_raw)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:3649 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::dirfd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2396 ~ core[7d5a]::ptr::non_null::{impl#3}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:176 ~ rustix[903e]::backend::fs::dir::{impl#0}::statvfs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:845 ~ rustix[903e]::fs::fd::fstatvfs)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:4979 ~ std[e3cd]::os::fd::owned::{impl#0}::borrow_raw)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:3649 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::dirfd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2396 ~ core[7d5a]::ptr::non_null::{impl#3}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:179 ~ rustix[903e]::backend::fs::dir::{impl#2}::drop)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:252 ~ libc[9eb8]::unix::{extern#2}::closedir)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:2396 ~ core[7d5a]::ptr::non_null::{impl#3}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:182 ~ rustix[903e]::backend::fs::dir::{impl#3}::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:173 ~ rustix[903e]::backend::fs::dir::{impl#0}::read)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:184 ~ rustix[903e]::backend::fs::dir::{impl#4}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11194 ~ core[7d5a]::fmt::{impl#9}::debug_struct)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(20:3649 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::dirfd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2396 ~ core[7d5a]::ptr::non_null::{impl#3}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10794 ~ core[7d5a]::fmt::builders::{impl#3}::finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1611 ~ rustix[903e]::backend::fs::dir::{impl#6}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11200 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field3_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:186 ~ rustix[903e]::backend::fs::dir::{impl#5}::file_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:187 ~ rustix[903e]::backend::fs::dir::{impl#5}::file_type)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:372 ~ rustix[903e]::backend::fs::types::{impl#3}::from_dirent_d_type)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:188 ~ rustix[903e]::backend::fs::dir::{impl#5}::ino)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:192 ~ rustix[903e]::backend::fs::makedev::makedev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:6770 ~ libc[9eb8]::unix::bsd::apple::makedev)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:193 ~ rustix[903e]::backend::fs::makedev::major)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:6768 ~ libc[9eb8]::unix::bsd::apple::major)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:194 ~ rustix[903e]::backend::fs::makedev::minor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:6769 ~ libc[9eb8]::unix::bsd::apple::minor)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:240 ~ rustix[903e]::backend::fs::syscalls::open)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:100 ~ rustix[903e]::backend::conv::ret_owned_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:247 ~ libc[9eb8]::unix::{extern#2}::open)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1721 ~ core[7d5a]::intrinsics::{extern#1}::transmute)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:241 ~ rustix[903e]::backend::fs::syscalls::openat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:100 ~ rustix[903e]::backend::conv::ret_owned_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:842 ~ libc[9eb8]::unix::{extern#9}::openat)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1721 ~ core[7d5a]::intrinsics::{extern#1}::transmute)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:242 ~ rustix[903e]::backend::fs::syscalls::statfs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2048 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::uninit)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:3751 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::statfs)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2057 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::as_mut_ptr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2058 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::assume_init)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:243 ~ rustix[903e]::backend::fs::syscalls::statvfs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2048 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::uninit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:423 ~ libc[9eb8]::unix::{extern#2}::statvfs)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2057 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:292 ~ rustix[903e]::backend::fs::syscalls::libc_statvfs_to_statvfs)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:2058 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::assume_init)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:244 ~ rustix[903e]::backend::fs::syscalls::readlink)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:851 ~ libc[9eb8]::unix::{extern#10}::readlink)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13279 ~ core[7d5a]::slice::{impl#0}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:245 ~ rustix[903e]::backend::fs::syscalls::readlinkat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:846 ~ libc[9eb8]::unix::{extern#10}::readlinkat)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13279 ~ core[7d5a]::slice::{impl#0}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:246 ~ rustix[903e]::backend::fs::syscalls::mkdir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:242 ~ libc[9eb8]::unix::{extern#2}::mkdir)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:247 ~ rustix[903e]::backend::fs::syscalls::mkdirat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:841 ~ libc[9eb8]::unix::{extern#9}::mkdirat)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:248 ~ rustix[903e]::backend::fs::syscalls::link)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:292 ~ libc[9eb8]::unix::{extern#2}::link)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:364:24: 364:35 (#0), res: Local(HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).16)), segments: [PathSegment { ident: libc_linkat#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).28), res: Local(HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).16)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:364:24: 364:35 (#0) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).108), kind: Binary(Spanned { node: Ne, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:35: 373:37 (#0) }, Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).109), kind: Call(Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).110), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:12: 373:23 (#0), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), segments: [PathSegment { ident: borrowed_fd#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).111), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:12: 373:23 (#0) }, [Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).112), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:24: 373:33 (#0), res: Local(HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).2)), segments: [PathSegment { ident: old_dirfd#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).113), res: Local(HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:24: 373:33 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:12: 373:34 (#0) }, Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).114), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:38: 373:49 (#0), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).115), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: AT_FDCWD#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).116), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:38: 373:49 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:12: 373:49 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).117), kind: Binary(Spanned { node: Ne, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:76: 373:78 (#0) }, Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).118), kind: Call(Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).119), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:53: 373:64 (#0), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), segments: [PathSegment { ident: borrowed_fd#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).120), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:53: 373:64 (#0) }, [Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).121), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:65: 373:74 (#0), res: Local(HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).6)), segments: [PathSegment { ident: new_dirfd#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).122), res: Local(HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:65: 373:74 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:53: 373:75 (#0) }, Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).123), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:79: 373:90 (#0), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).124), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: AT_FDCWD#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).125), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:79: 373:90 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:53: 373:90 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).109), kind: Call(Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).110), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:12: 373:23 (#0), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), segments: [PathSegment { ident: borrowed_fd#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).111), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:12: 373:23 (#0) }, [Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).112), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:24: 373:33 (#0), res: Local(HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).2)), segments: [PathSegment { ident: old_dirfd#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).113), res: Local(HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:24: 373:33 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:12: 373:34 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).114), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:38: 373:49 (#0), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).115), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: AT_FDCWD#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).116), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:38: 373:49 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).118), kind: Call(Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).119), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:53: 373:64 (#0), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), segments: [PathSegment { ident: borrowed_fd#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).120), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:53: 373:64 (#0) }, [Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).121), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:65: 373:74 (#0), res: Local(HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).6)), segments: [PathSegment { ident: new_dirfd#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).122), res: Local(HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:65: 373:74 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:53: 373:75 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).123), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:79: 373:90 (#0), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).124), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: AT_FDCWD#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).125), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:373:79: 373:90 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1956 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::intersects)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1954 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:292 ~ libc[9eb8]::unix::{extern#2}::link)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:364:24: 364:35 (#0), res: Local(HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).16)), segments: [PathSegment { ident: libc_linkat#0, hir_id: HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).28), res: Local(HirId(DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat).16)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:364:24: 364:35 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:250 ~ rustix[903e]::backend::fs::syscalls::rmdir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:298 ~ libc[9eb8]::unix::{extern#2}::rmdir)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:251 ~ rustix[903e]::backend::fs::syscalls::unlink)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:313 ~ libc[9eb8]::unix::{extern#2}::unlink)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).23), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:419:24: 419:37 (#0), res: Local(HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).12)), segments: [PathSegment { ident: libc_unlinkat#0, hir_id: HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).24), res: Local(HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:419:24: 419:37 (#0) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).94), kind: Call(Expr { hir_id: HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).95), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:426:12: 426:23 (#0), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), segments: [PathSegment { ident: borrowed_fd#0, hir_id: HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).96), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:426:12: 426:23 (#0) }, [Expr { hir_id: HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).97), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:426:24: 426:29 (#0), res: Local(HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).2)), segments: [PathSegment { ident: dirfd#0, hir_id: HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).98), res: Local(HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:426:24: 426:29 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:426:12: 426:30 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).99), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:426:34: 426:45 (#0), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).100), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: AT_FDCWD#0, hir_id: HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).101), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:426:34: 426:45 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1956 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1957 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::contains)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:298 ~ libc[9eb8]::unix::{extern#2}::rmdir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:313 ~ libc[9eb8]::unix::{extern#2}::unlink)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).23), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:419:24: 419:37 (#0), res: Local(HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).12)), segments: [PathSegment { ident: libc_unlinkat#0, hir_id: HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).24), res: Local(HirId(DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:419:24: 419:37 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:253 ~ rustix[903e]::backend::fs::syscalls::rename)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:142 ~ libc[9eb8]::unix::{extern#1}::rename)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).25), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:473:24: 473:37 (#0), res: Local(HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).14)), segments: [PathSegment { ident: libc_renameat#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).26), res: Local(HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:473:24: 473:37 (#0) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).53), kind: Binary(Spanned { node: Ne, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:35: 481:37 (#0) }, Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).54), kind: Call(Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).55), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:12: 481:23 (#0), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), segments: [PathSegment { ident: borrowed_fd#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).56), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:12: 481:23 (#0) }, [Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).57), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:24: 481:33 (#0), res: Local(HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).2)), segments: [PathSegment { ident: old_dirfd#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).58), res: Local(HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:24: 481:33 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:12: 481:34 (#0) }, Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).59), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:38: 481:49 (#0), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).60), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: AT_FDCWD#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).61), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:38: 481:49 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:12: 481:49 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).62), kind: Binary(Spanned { node: Ne, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:76: 481:78 (#0) }, Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).63), kind: Call(Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).64), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:53: 481:64 (#0), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), segments: [PathSegment { ident: borrowed_fd#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).65), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:53: 481:64 (#0) }, [Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).66), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:65: 481:74 (#0), res: Local(HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).6)), segments: [PathSegment { ident: new_dirfd#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).67), res: Local(HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:65: 481:74 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:53: 481:75 (#0) }, Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).68), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:79: 481:90 (#0), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).69), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: AT_FDCWD#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).70), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:79: 481:90 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:53: 481:90 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).54), kind: Call(Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).55), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:12: 481:23 (#0), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), segments: [PathSegment { ident: borrowed_fd#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).56), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:12: 481:23 (#0) }, [Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).57), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:24: 481:33 (#0), res: Local(HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).2)), segments: [PathSegment { ident: old_dirfd#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).58), res: Local(HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:24: 481:33 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:12: 481:34 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).59), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:38: 481:49 (#0), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).60), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: AT_FDCWD#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).61), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:38: 481:49 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).63), kind: Call(Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).64), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:53: 481:64 (#0), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), segments: [PathSegment { ident: borrowed_fd#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).65), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:53: 481:64 (#0) }, [Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).66), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:65: 481:74 (#0), res: Local(HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).6)), segments: [PathSegment { ident: new_dirfd#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).67), res: Local(HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:65: 481:74 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:53: 481:75 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).68), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:79: 481:90 (#0), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).69), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: AT_FDCWD#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).70), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:481:79: 481:90 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:142 ~ libc[9eb8]::unix::{extern#1}::rename)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).25), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:473:24: 473:37 (#0), res: Local(HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).14)), segments: [PathSegment { ident: libc_renameat#0, hir_id: HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).26), res: Local(HirId(DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:473:24: 473:37 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:255 ~ rustix[903e]::backend::fs::syscalls::symlink)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:335 ~ libc[9eb8]::unix::{extern#2}::symlink)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:256 ~ rustix[903e]::backend::fs::syscalls::symlinkat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:260 ~ libc[9eb8]::unix::{extern#2}::symlinkat)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:257 ~ rustix[903e]::backend::fs::syscalls::stat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2048 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::uninit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:243 ~ libc[9eb8]::unix::{extern#2}::stat)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2057 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2058 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::assume_init)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:258 ~ rustix[903e]::backend::fs::syscalls::lstat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2048 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::uninit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:331 ~ libc[9eb8]::unix::{extern#2}::lstat)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2057 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2058 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::assume_init)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:259 ~ rustix[903e]::backend::fs::syscalls::statat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2048 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::uninit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:257 ~ libc[9eb8]::unix::{extern#2}::fstatat)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2057 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1721 ~ core[7d5a]::intrinsics::{extern#1}::transmute)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2058 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::assume_init)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:260 ~ rustix[903e]::backend::fs::syscalls::access)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:262 ~ libc[9eb8]::unix::{extern#2}::access)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).25), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:754:24: 754:38 (#0), res: Local(HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).14)), segments: [PathSegment { ident: libc_faccessat#0, hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).26), res: Local(HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:754:24: 754:38 (#0) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).149), kind: Call(Expr { hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).150), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:762:12: 762:23 (#0), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), segments: [PathSegment { ident: borrowed_fd#0, hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).151), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:762:12: 762:23 (#0) }, [Expr { hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).152), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:762:24: 762:29 (#0), res: Local(HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).2)), segments: [PathSegment { ident: dirfd#0, hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).153), res: Local(HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:762:24: 762:29 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:762:12: 762:30 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).154), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:762:34: 762:45 (#0), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).155), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: AT_FDCWD#0, hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).156), res: Def(Const, DefId(20:2107 ~ libc[9eb8]::unix::bsd::apple::AT_FDCWD)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:762:34: 762:45 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1956 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).178), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).180), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:765:31: 765:38 (#0), res: Def(Struct, DefId(0:1817 ~ rustix[903e]::backend::fs::types::AtFlags)), segments: [PathSegment { ident: AtFlags#0, hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).179), res: Def(Struct, DefId(0:1817 ~ rustix[903e]::backend::fs::types::AtFlags)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:765:31: 765:38 (#0) }, PathSegment { ident: EACCESS#0, hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).181), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:765:31: 765:47 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).182), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).184), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:765:50: 765:57 (#0), res: Def(Struct, DefId(0:1817 ~ rustix[903e]::backend::fs::types::AtFlags)), segments: [PathSegment { ident: AtFlags#0, hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).183), res: Def(Struct, DefId(0:1817 ~ rustix[903e]::backend::fs::types::AtFlags)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:765:50: 765:57 (#0) }, PathSegment { ident: SYMLINK_NOFOLLOW#0, hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).185), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:765:50: 765:75 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1954 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:262 ~ libc[9eb8]::unix::{extern#2}::access)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1721 ~ core[7d5a]::intrinsics::{extern#1}::transmute)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).25), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:754:24: 754:38 (#0), res: Local(HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).14)), segments: [PathSegment { ident: libc_faccessat#0, hir_id: HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).26), res: Local(HirId(DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:754:24: 754:38 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:872:24: 872:38 (#0), res: Local(HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).17)), segments: [PathSegment { ident: have_utimensat#0, hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).29), res: Local(HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).17)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:872:24: 872:38 (#0) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(20:277 ~ libc[9eb8]::unix::{extern#2}::fork)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).156), kind: Call(Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).157), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:892:20: 892:29 (#0), res: Def(Fn, DefId(20:265 ~ libc[9eb8]::unix::{extern#2}::fchdir)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).158), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: fchdir#0, hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).159), res: Def(Fn, DefId(20:265 ~ libc[9eb8]::unix::{extern#2}::fchdir)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:892:20: 892:29 (#0) }, [Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).160), kind: Call(Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).161), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:892:30: 892:41 (#0), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), segments: [PathSegment { ident: borrowed_fd#0, hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).162), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:892:30: 892:41 (#0) }, [Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).163), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:892:42: 892:47 (#0), res: Local(HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).2)), segments: [PathSegment { ident: dirfd#0, hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).164), res: Local(HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:892:42: 892:47 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:892:30: 892:48 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:892:20: 892:49 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).165), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:892:53: 892:54 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:892:53: 892:54 (#0) }
[DEBUG] Trying to get func ty of defid DefId(20:265 ~ libc[9eb8]::unix::{extern#2}::fchdir)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(21:37 ~ errno[a1de]::errno)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(20:181 ~ libc[9eb8]::unix::{extern#1}::_exit)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1957 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).224), kind: Call(Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).225), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:906:20: 906:31 (#0), res: Def(Fn, DefId(0:265 ~ rustix[903e]::backend::fs::syscalls::utimensat::{extern#0}::setattrlist)), segments: [PathSegment { ident: setattrlist#0, hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).226), res: Def(Fn, DefId(0:265 ~ rustix[903e]::backend::fs::syscalls::utimensat::{extern#0}::setattrlist)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:906:20: 906:31 (#0) }, [Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).227), kind: Call(Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).228), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:907:21: 907:26 (#0), res: Def(Fn, DefId(0:89 ~ rustix[903e]::backend::conv::c_str)), segments: [PathSegment { ident: c_str#0, hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).229), res: Def(Fn, DefId(0:89 ~ rustix[903e]::backend::conv::c_str)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:907:21: 907:26 (#0) }, [Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).230), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:907:27: 907:31 (#0), res: Local(HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).4)), segments: [PathSegment { ident: path#0, hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).231), res: Local(HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:907:27: 907:31 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:907:21: 907:32 (#0) }, Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).232), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).233), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:908:22: 908:27 (#0), res: Local(HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).131)), segments: [PathSegment { ident: attrs#0, hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).234), res: Local(HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).131)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:908:22: 908:27 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:908:21: 908:27 (#0) }, Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).235), kind: MethodCall(PathSegment { ident: cast#0, hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).236), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).237), kind: Call(Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).238), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:909:21: 909:27 (#0), res: Def(Fn, DefId(0:19 ~ rustix[903e]::utils::as_ptr)), segments: [PathSegment { ident: as_ptr#0, hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).239), res: Def(Fn, DefId(0:19 ~ rustix[903e]::utils::as_ptr)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:909:21: 909:27 (#0) }, [Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).240), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).241), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:909:29: 909:34 (#0), res: Local(HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).130)), segments: [PathSegment { ident: times#0, hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).242), res: Local(HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).130)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:909:29: 909:34 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:909:28: 909:34 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:909:21: 909:35 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:909:36: 909:42 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:909:21: 909:42 (#0) }, Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).243), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:910:21: 910:33 (#0), res: Local(HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).129)), segments: [PathSegment { ident: attrbuf_size#0, hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).244), res: Local(HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).129)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:910:21: 910:33 (#0) }, Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).245), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:911:21: 911:30 (#0), res: Local(HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).202)), segments: [PathSegment { ident: flags_arg#0, hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).246), res: Local(HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).202)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:911:21: 911:30 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:906:20: 912:18 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).247), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:912:22: 912:23 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:912:22: 912:23 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:265 ~ rustix[903e]::backend::fs::syscalls::utimensat::{extern#0}::setattrlist)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2560 ~ core[7d5a]::ptr::const_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:19 ~ rustix[903e]::utils::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(21:37 ~ errno[a1de]::errno)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(20:181 ~ libc[9eb8]::unix::{extern#1}::_exit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(20:181 ~ libc[9eb8]::unix::{extern#1}::_exit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:96 ~ rustix[903e]::backend::conv::ret_c_int)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:315 ~ libc[9eb8]::unix::{extern#2}::waitpid)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(20:1549 ~ libc[9eb8]::unix::bsd::WIFEXITED)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(20:1550 ~ libc[9eb8]::unix::bsd::WEXITSTATUS)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:872:24: 872:38 (#0), res: Local(HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).17)), segments: [PathSegment { ident: have_utimensat#0, hir_id: HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).29), res: Local(HirId(DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat).17)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:872:24: 872:38 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:267 ~ rustix[903e]::backend::fs::syscalls::chmod)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:239 ~ libc[9eb8]::unix::{extern#2}::chmod)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:268 ~ rustix[903e]::backend::fs::syscalls::chmodat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:254 ~ libc[9eb8]::unix::{extern#2}::fchmodat)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1721 ~ core[7d5a]::intrinsics::{extern#1}::transmute)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:269 ~ rustix[903e]::backend::fs::syscalls::fclonefileat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/weak.rs:153:17: 153:20 (#114), res: Local(HirId(DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat).13)), segments: [PathSegment { ident: fun#114, hir_id: HirId(DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat).21), res: Local(HirId(DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat).13)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/weak.rs:153:17: 153:20 (#114) }
[DEBUG] Trying to get func ty of defid DefId(21:38 ~ errno[a1de]::set_errno)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2559 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::bits)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2559 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1721 ~ core[7d5a]::intrinsics::{extern#1}::transmute)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2559 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2559 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/weak.rs:153:17: 153:20 (#114), res: Local(HirId(DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat).13)), segments: [PathSegment { ident: fun#114, hir_id: HirId(DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat).21), res: Local(HirId(DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat).13)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/weak.rs:153:17: 153:20 (#114) }
[DEBUG] Trying to get func ty of defid DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/weak.rs:153:17: 153:20 (#114), res: Local(HirId(DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat).13)), segments: [PathSegment { ident: fun#114, hir_id: HirId(DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat).21), res: Local(HirId(DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat).13)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/weak.rs:153:17: 153:20 (#114) }
[DEBUG] Trying to get func ty of defid DefId(21:38 ~ errno[a1de]::set_errno)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/weak.rs:153:17: 153:20 (#114), res: Local(HirId(DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat).13)), segments: [PathSegment { ident: fun#114, hir_id: HirId(DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat).21), res: Local(HirId(DefId(0:1617 ~ rustix[903e]::backend::fs::syscalls::fclonefileat::fclonefileat).13)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/weak.rs:153:17: 153:20 (#114) }
[DEBUG] Trying to get func ty of defid DefId(0:270 ~ rustix[903e]::backend::fs::syscalls::chownat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1600 ~ rustix[903e]::ugid::translate_fchown_args)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:256 ~ libc[9eb8]::unix::{extern#2}::fchownat)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1721 ~ core[7d5a]::intrinsics::{extern#1}::transmute)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:271 ~ rustix[903e]::backend::fs::syscalls::fcntl_getfl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:96 ~ rustix[903e]::backend::conv::ret_c_int)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:249 ~ libc[9eb8]::unix::{extern#2}::fcntl)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2368 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1721 ~ core[7d5a]::intrinsics::{extern#1}::transmute)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:272 ~ rustix[903e]::backend::fs::syscalls::fcntl_setfl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:249 ~ libc[9eb8]::unix::{extern#2}::fcntl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:273 ~ rustix[903e]::backend::fs::syscalls::fcntl_lock)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2176 ~ core[7d5a]::mem::zeroed)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:249 ~ libc[9eb8]::unix::{extern#2}::fcntl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:282 ~ rustix[903e]::backend::fs::syscalls::seek)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:98 ~ rustix[903e]::backend::conv::ret_off_t)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:293 ~ libc[9eb8]::unix::{extern#2}::lseek)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:283 ~ rustix[903e]::backend::fs::syscalls::tell)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:98 ~ rustix[903e]::backend::conv::ret_off_t)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:293 ~ libc[9eb8]::unix::{extern#2}::lseek)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:284 ~ rustix[903e]::backend::fs::syscalls::fchmod)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:240 ~ libc[9eb8]::unix::{extern#2}::fchmod)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1721 ~ core[7d5a]::intrinsics::{extern#1}::transmute)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:285 ~ rustix[903e]::backend::fs::syscalls::chown)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1600 ~ rustix[903e]::ugid::translate_fchown_args)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:266 ~ libc[9eb8]::unix::{extern#2}::chown)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ rustix[903e]::backend::conv::c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:286 ~ rustix[903e]::backend::fs::syscalls::fchown)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1600 ~ rustix[903e]::ugid::translate_fchown_args)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:255 ~ libc[9eb8]::unix::{extern#2}::fchown)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:287 ~ rustix[903e]::backend::fs::syscalls::flock)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:835 ~ libc[9eb8]::unix::{extern#7}::flock)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:288 ~ rustix[903e]::backend::fs::syscalls::sync)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:1203 ~ libc[9eb8]::unix::bsd::{extern#0}::sync)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:289 ~ rustix[903e]::backend::fs::syscalls::fstat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2048 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::uninit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:241 ~ libc[9eb8]::unix::{extern#2}::fstat)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2057 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2058 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::assume_init)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:290 ~ rustix[903e]::backend::fs::syscalls::fstatfs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2048 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::uninit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:3752 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::fstatfs)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2057 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2058 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::assume_init)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:291 ~ rustix[903e]::backend::fs::syscalls::fstatvfs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2048 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::uninit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:424 ~ libc[9eb8]::unix::{extern#2}::fstatvfs)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2057 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:292 ~ rustix[903e]::backend::fs::syscalls::libc_statvfs_to_statvfs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2058 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::assume_init)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:292 ~ rustix[903e]::backend::fs::syscalls::libc_statvfs_to_statvfs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3181 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:293 ~ rustix[903e]::backend::fs::syscalls::futimens)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:70 ~ rustix[903e]::weak::{impl#0}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:293 ~ rustix[903e]::backend::fs::syscalls::futimens).23), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1560:24: 1560:37 (#0), res: Local(HirId(DefId(0:293 ~ rustix[903e]::backend::fs::syscalls::futimens).12)), segments: [PathSegment { ident: have_futimens#0, hir_id: HirId(DefId(0:293 ~ rustix[903e]::backend::fs::syscalls::futimens).24), res: Local(HirId(DefId(0:293 ~ rustix[903e]::backend::fs::syscalls::futimens).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1560:24: 1560:37 (#0) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:296 ~ rustix[903e]::backend::fs::syscalls::futimens::{extern#0}::fsetattrlist)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2560 ~ core[7d5a]::ptr::const_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:19 ~ rustix[903e]::utils::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:293 ~ rustix[903e]::backend::fs::syscalls::futimens).23), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1560:24: 1560:37 (#0), res: Local(HirId(DefId(0:293 ~ rustix[903e]::backend::fs::syscalls::futimens).12)), segments: [PathSegment { ident: have_futimens#0, hir_id: HirId(DefId(0:293 ~ rustix[903e]::backend::fs::syscalls::futimens).24), res: Local(HirId(DefId(0:293 ~ rustix[903e]::backend::fs::syscalls::futimens).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1560:24: 1560:37 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:3170 ~ core[7d5a]::convert::TryInto::try_into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2989 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9688 ~ core[7d5a]::option::{impl#0}::ok_or)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:24345 ~ core[7d5a]::num::{impl#3}::checked_add)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).129), kind: Call(Expr { hir_id: HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).130), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1673:12: 1673:20 (#0), res: Def(Fn, DefId(20:249 ~ libc[9eb8]::unix::{extern#2}::fcntl)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).131), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: fcntl#0, hir_id: HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).132), res: Def(Fn, DefId(20:249 ~ libc[9eb8]::unix::{extern#2}::fcntl)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1673:12: 1673:20 (#0) }, [Expr { hir_id: HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).133), kind: Call(Expr { hir_id: HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).134), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1673:21: 1673:32 (#0), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), segments: [PathSegment { ident: borrowed_fd#0, hir_id: HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).135), res: Def(Fn, DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1673:21: 1673:32 (#0) }, [Expr { hir_id: HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).136), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1673:33: 1673:35 (#0), res: Local(HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).2)), segments: [PathSegment { ident: fd#0, hir_id: HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).137), res: Local(HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1673:33: 1673:35 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1673:21: 1673:36 (#0) }, Expr { hir_id: HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).138), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1673:38: 1673:54 (#0), res: Def(Const, DefId(20:2081 ~ libc[9eb8]::unix::bsd::apple::F_PREALLOCATE)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).139), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: F_PREALLOCATE#0, hir_id: HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).140), res: Def(Const, DefId(20:2081 ~ libc[9eb8]::unix::bsd::apple::F_PREALLOCATE)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1673:38: 1673:54 (#0) }, Expr { hir_id: HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).141), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).142), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1673:57: 1673:62 (#0), res: Local(HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).125)), segments: [PathSegment { ident: store#0, hir_id: HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).143), res: Local(HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).125)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1673:57: 1673:62 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1673:56: 1673:62 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1673:12: 1673:63 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).144), kind: Unary(Neg, Expr { hir_id: HirId(DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate).145), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1673:68: 1673:69 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1673:68: 1673:69 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:1673:67: 1673:69 (#0) }
[DEBUG] Trying to get func ty of defid DefId(20:249 ~ libc[9eb8]::unix::{extern#2}::fcntl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:96 ~ rustix[903e]::backend::conv::ret_c_int)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:249 ~ libc[9eb8]::unix::{extern#2}::fcntl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:337 ~ libc[9eb8]::unix::{extern#2}::ftruncate)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:299 ~ rustix[903e]::backend::fs::syscalls::fsync)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:332 ~ libc[9eb8]::unix::{extern#2}::fsync)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:300 ~ rustix[903e]::backend::fs::syscalls::ftruncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3170 ~ core[7d5a]::convert::TryInto::try_into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:337 ~ libc[9eb8]::unix::{extern#2}::ftruncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:302 ~ rustix[903e]::backend::fs::syscalls::fcopyfile)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:94 ~ rustix[903e]::backend::conv::nonnegative_ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:304 ~ rustix[903e]::backend::fs::syscalls::fcopyfile::{extern#0}::fcopyfile)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1721 ~ core[7d5a]::intrinsics::{extern#1}::transmute)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:305 ~ rustix[903e]::backend::fs::syscalls::copyfile_state_alloc)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:307 ~ rustix[903e]::backend::fs::syscalls::copyfile_state_alloc::{extern#0}::copyfile_state_alloc)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2652 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::is_null)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:498 ~ rustix[903e]::backend::io::errno::{impl#1}::last_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:308 ~ rustix[903e]::backend::fs::syscalls::copyfile_state_free)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:94 ~ rustix[903e]::backend::conv::nonnegative_ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:310 ~ rustix[903e]::backend::fs::syscalls::copyfile_state_free::{extern#0}::copyfile_state_free)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:312 ~ rustix[903e]::backend::fs::syscalls::copyfile_state_get_copied)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2048 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::uninit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:313 ~ rustix[903e]::backend::fs::syscalls::copyfile_state_get)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2057 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2058 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::assume_init)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:313 ~ rustix[903e]::backend::fs::syscalls::copyfile_state_get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:94 ~ rustix[903e]::backend::conv::nonnegative_ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:315 ~ rustix[903e]::backend::fs::syscalls::copyfile_state_get::{extern#0}::copyfile_state_get)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:316 ~ rustix[903e]::backend::fs::syscalls::getpath)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7545 ~ alloc[5873]::vec::from_elem)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:249 ~ libc[9eb8]::unix::{extern#2}::fcntl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:9670 ~ core[7d5a]::option::{impl#0}::unwrap)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:9048 ~ core[7d5a]::iter::traits::iterator::Iterator::position)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:316 ~ rustix[903e]::backend::fs::syscalls::getpath).73), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2063:38: 2063:39 (#0), res: Local(HirId(DefId(0:316 ~ rustix[903e]::backend::fs::syscalls::getpath).70)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:316 ~ rustix[903e]::backend::fs::syscalls::getpath).74), res: Local(HirId(DefId(0:316 ~ rustix[903e]::backend::fs::syscalls::getpath).70)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2063:38: 2063:39 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:316 ~ rustix[903e]::backend::fs::syscalls::getpath).75), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2063:43: 2063:44 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2063:43: 2063:44 (#0) }
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7447 ~ alloc[5873]::vec::{impl#1}::truncate)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(5:7444 ~ alloc[5873]::vec::{impl#1}::shrink_to_fit)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:10419 ~ core[7d5a]::result::{impl#0}::unwrap)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG] Trying to get func ty of defid DefId(0:318 ~ rustix[903e]::backend::fs::syscalls::fcntl_rdadvise)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3170 ~ core[7d5a]::convert::TryInto::try_into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3170 ~ core[7d5a]::convert::TryInto::try_into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:249 ~ libc[9eb8]::unix::{extern#2}::fcntl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:319 ~ rustix[903e]::backend::fs::syscalls::fcntl_fullfsync)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:249 ~ libc[9eb8]::unix::{extern#2}::fcntl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:320 ~ rustix[903e]::backend::fs::syscalls::fcntl_nocache)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:249 ~ libc[9eb8]::unix::{extern#2}::fcntl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:321 ~ rustix[903e]::backend::fs::syscalls::fcntl_global_nocache)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:249 ~ libc[9eb8]::unix::{extern#2}::fcntl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).15), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:34: 2140:36 (#0) }, Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).16), kind: Field(Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).17), kind: Field(Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:8: 2140:13 (#0), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).12)), segments: [PathSegment { ident: times#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).19), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:8: 2140:13 (#0) }, last_access#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:8: 2140:25 (#0) }, tv_nsec#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:8: 2140:33 (#0) }, Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).20), kind: MethodCall(PathSegment { ident: into#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).21), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:37: 2140:49 (#0), res: Def(Const, DefId(20:3182 ~ libc[9eb8]::unix::bsd::apple::UTIME_NOW)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).23), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: UTIME_NOW#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).24), res: Def(Const, DefId(20:3182 ~ libc[9eb8]::unix::bsd::apple::UTIME_NOW)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:37: 2140:49 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:50: 2140:56 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:37: 2140:56 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:8: 2140:56 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).25), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:44: 2141:46 (#0) }, Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).26), kind: Field(Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).27), kind: Field(Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:12: 2141:17 (#0), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).12)), segments: [PathSegment { ident: times#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).29), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:12: 2141:17 (#0) }, last_modification#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:12: 2141:35 (#0) }, tv_nsec#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:12: 2141:43 (#0) }, Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).30), kind: MethodCall(PathSegment { ident: into#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).31), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).32), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:47: 2141:59 (#0), res: Def(Const, DefId(20:3182 ~ libc[9eb8]::unix::bsd::apple::UTIME_NOW)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).33), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: UTIME_NOW#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).34), res: Def(Const, DefId(20:3182 ~ libc[9eb8]::unix::bsd::apple::UTIME_NOW)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:47: 2141:59 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:60: 2141:66 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:47: 2141:66 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:12: 2141:66 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).16), kind: Field(Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).17), kind: Field(Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:8: 2140:13 (#0), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).12)), segments: [PathSegment { ident: times#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).19), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:8: 2140:13 (#0) }, last_access#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:8: 2140:25 (#0) }, tv_nsec#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:8: 2140:33 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).20), kind: MethodCall(PathSegment { ident: into#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).21), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:37: 2140:49 (#0), res: Def(Const, DefId(20:3182 ~ libc[9eb8]::unix::bsd::apple::UTIME_NOW)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).23), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: UTIME_NOW#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).24), res: Def(Const, DefId(20:3182 ~ libc[9eb8]::unix::bsd::apple::UTIME_NOW)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:37: 2140:49 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:50: 2140:56 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2140:37: 2140:56 (#0) }
[DEBUG] Trying to get func ty of defid DefId(2:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).26), kind: Field(Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).27), kind: Field(Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:12: 2141:17 (#0), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).12)), segments: [PathSegment { ident: times#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).29), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:12: 2141:17 (#0) }, last_modification#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:12: 2141:35 (#0) }, tv_nsec#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:12: 2141:43 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).30), kind: MethodCall(PathSegment { ident: into#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).31), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).32), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:47: 2141:59 (#0), res: Def(Const, DefId(20:3182 ~ libc[9eb8]::unix::bsd::apple::UTIME_NOW)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).33), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: UTIME_NOW#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).34), res: Def(Const, DefId(20:3182 ~ libc[9eb8]::unix::bsd::apple::UTIME_NOW)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:47: 2141:59 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:60: 2141:66 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2141:47: 2141:66 (#0) }
[DEBUG] Trying to get func ty of defid DefId(2:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(20:3651 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::gettimeofday)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:2754 ~ core[7d5a]::ptr::null_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).77), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).78), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#133), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).69)), segments: [PathSegment { ident: left_val#133, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).79), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).69)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#133) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:22: 46:31 (#133) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).80), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).81), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#133), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).70)), segments: [PathSegment { ident: right_val#133, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).82), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).70)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#133) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:35: 46:45 (#133) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10038 ~ core[7d5a]::panicking::assert_failed)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).129), kind: Field(Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).130), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2154:27: 2154:29 (#0), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).47)), segments: [PathSegment { ident: tv#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).131), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).47)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2154:27: 2154:29 (#0) }, tv_usec#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2154:27: 2154:37 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).132), kind: Lit(Spanned { node: Int(Pu128(1000), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2154:40: 2154:44 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2154:40: 2154:44 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).139), kind: Field(Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).140), kind: Field(Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).141), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2157:12: 2157:17 (#0), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).12)), segments: [PathSegment { ident: times#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).142), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2157:12: 2157:17 (#0) }, last_access#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2157:12: 2157:29 (#0) }, tv_nsec#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2157:12: 2157:37 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).143), kind: MethodCall(PathSegment { ident: into#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).144), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).145), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2157:41: 2157:53 (#0), res: Def(Const, DefId(20:3182 ~ libc[9eb8]::unix::bsd::apple::UTIME_NOW)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).146), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: UTIME_NOW#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).147), res: Def(Const, DefId(20:3182 ~ libc[9eb8]::unix::bsd::apple::UTIME_NOW)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2157:41: 2157:53 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2157:54: 2157:60 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2157:41: 2157:60 (#0) }
[DEBUG] Trying to get func ty of defid DefId(2:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] SelfTy refers to an ADT!
[DEBUG] Trying to get func ty of defid DefId(2:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).175), kind: Field(Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).176), kind: Field(Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).177), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2163:12: 2163:17 (#0), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).12)), segments: [PathSegment { ident: times#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).178), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2163:12: 2163:17 (#0) }, last_modification#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2163:12: 2163:35 (#0) }, tv_nsec#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2163:12: 2163:43 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).179), kind: MethodCall(PathSegment { ident: into#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).180), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).181), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2163:47: 2163:59 (#0), res: Def(Const, DefId(20:3182 ~ libc[9eb8]::unix::bsd::apple::UTIME_NOW)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).182), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: UTIME_NOW#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).183), res: Def(Const, DefId(20:3182 ~ libc[9eb8]::unix::bsd::apple::UTIME_NOW)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2163:47: 2163:59 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2163:60: 2163:66 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2163:47: 2163:66 (#0) }
[DEBUG] Trying to get func ty of defid DefId(2:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] SelfTy refers to an ADT!
[DEBUG] Trying to get func ty of defid DefId(2:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).255), kind: Field(Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).256), kind: Field(Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).257), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2189:8: 2189:13 (#0), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).12)), segments: [PathSegment { ident: times#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).258), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2189:8: 2189:13 (#0) }, last_modification#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2189:8: 2189:31 (#0) }, tv_nsec#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2189:8: 2189:39 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).259), kind: MethodCall(PathSegment { ident: into#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).260), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).261), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2189:43: 2189:56 (#0), res: Def(Const, DefId(20:3181 ~ libc[9eb8]::unix::bsd::apple::UTIME_OMIT)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).262), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: UTIME_OMIT#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).263), res: Def(Const, DefId(20:3181 ~ libc[9eb8]::unix::bsd::apple::UTIME_OMIT)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2189:43: 2189:56 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2189:57: 2189:63 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2189:43: 2189:63 (#0) }
[DEBUG] Trying to get func ty of defid DefId(2:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3170 ~ core[7d5a]::convert::TryInto::try_into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2158 ~ core[7d5a]::mem::size_of)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).345), kind: Field(Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).346), kind: Field(Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).347), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2202:8: 2202:13 (#0), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).12)), segments: [PathSegment { ident: times#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).348), res: Local(HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).12)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2202:8: 2202:13 (#0) }, last_access#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2202:8: 2202:25 (#0) }, tv_nsec#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2202:8: 2202:33 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).349), kind: MethodCall(PathSegment { ident: into#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).350), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).351), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2202:37: 2202:50 (#0), res: Def(Const, DefId(20:3181 ~ libc[9eb8]::unix::bsd::apple::UTIME_OMIT)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).352), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: UTIME_OMIT#0, hir_id: HirId(DefId(0:322 ~ rustix[903e]::backend::fs::syscalls::times_to_attrlist).353), res: Def(Const, DefId(20:3181 ~ libc[9eb8]::unix::bsd::apple::UTIME_OMIT)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2202:37: 2202:50 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2202:51: 2202:57 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2202:37: 2202:57 (#0) }
[DEBUG] Trying to get func ty of defid DefId(2:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3170 ~ core[7d5a]::convert::TryInto::try_into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2158 ~ core[7d5a]::mem::size_of)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] SelfTy refers to an ADT!
[DEBUG] SelfTy refers to an ADT!
[DEBUG] Trying to get func ty of defid DefId(0:339 ~ rustix[903e]::backend::fs::syscalls::getxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13279 ~ core[7d5a]::slice::{impl#0}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13229 ~ core[7d5a]::slice::{impl#0}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2754 ~ core[7d5a]::ptr::null_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:3778 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::getxattr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:340 ~ rustix[903e]::backend::fs::syscalls::lgetxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13279 ~ core[7d5a]::slice::{impl#0}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13229 ~ core[7d5a]::slice::{impl#0}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2754 ~ core[7d5a]::ptr::null_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:3778 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::getxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:341 ~ rustix[903e]::backend::fs::syscalls::fgetxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13279 ~ core[7d5a]::slice::{impl#0}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13229 ~ core[7d5a]::slice::{impl#0}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2754 ~ core[7d5a]::ptr::null_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:3779 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::fgetxattr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:342 ~ rustix[903e]::backend::fs::syscalls::setxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:3780 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::setxattr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2560 ~ core[7d5a]::ptr::const_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13278 ~ core[7d5a]::slice::{impl#0}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3837 ~ rustix[903e]::fs::xattr::_::{impl#34}::bits)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:343 ~ rustix[903e]::backend::fs::syscalls::lsetxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:3780 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::setxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2560 ~ core[7d5a]::ptr::const_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13278 ~ core[7d5a]::slice::{impl#0}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:343 ~ rustix[903e]::backend::fs::syscalls::lsetxattr).40), kind: Cast(Expr { hir_id: HirId(DefId(0:343 ~ rustix[903e]::backend::fs::syscalls::lsetxattr).41), kind: MethodCall(PathSegment { ident: bits#0, hir_id: HirId(DefId(0:343 ~ rustix[903e]::backend::fs::syscalls::lsetxattr).42), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:343 ~ rustix[903e]::backend::fs::syscalls::lsetxattr).43), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2401:13: 2401:18 (#0), res: Local(HirId(DefId(0:343 ~ rustix[903e]::backend::fs::syscalls::lsetxattr).8)), segments: [PathSegment { ident: flags#0, hir_id: HirId(DefId(0:343 ~ rustix[903e]::backend::fs::syscalls::lsetxattr).44), res: Local(HirId(DefId(0:343 ~ rustix[903e]::backend::fs::syscalls::lsetxattr).8)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2401:13: 2401:18 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2401:19: 2401:25 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2401:13: 2401:25 (#0) }, Ty { hir_id: HirId(DefId(0:343 ~ rustix[903e]::backend::fs::syscalls::lsetxattr).45), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2401:29: 2401:32 (#0), res: PrimTy(Int(I32)), segments: [PathSegment { ident: i32#0, hir_id: HirId(DefId(0:343 ~ rustix[903e]::backend::fs::syscalls::lsetxattr).46), res: PrimTy(Int(I32)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2401:29: 2401:32 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2401:13: 2401:32 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:343 ~ rustix[903e]::backend::fs::syscalls::lsetxattr).47), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2401:35: 2401:52 (#0), res: Def(Const, DefId(20:3183 ~ libc[9eb8]::unix::bsd::apple::XATTR_NOFOLLOW)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:343 ~ rustix[903e]::backend::fs::syscalls::lsetxattr).48), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: XATTR_NOFOLLOW#0, hir_id: HirId(DefId(0:343 ~ rustix[903e]::backend::fs::syscalls::lsetxattr).49), res: Def(Const, DefId(20:3183 ~ libc[9eb8]::unix::bsd::apple::XATTR_NOFOLLOW)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/syscalls.rs:2401:35: 2401:52 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:3837 ~ rustix[903e]::fs::xattr::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:344 ~ rustix[903e]::backend::fs::syscalls::fsetxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:3781 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::fsetxattr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2560 ~ core[7d5a]::ptr::const_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13278 ~ core[7d5a]::slice::{impl#0}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3837 ~ rustix[903e]::fs::xattr::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:345 ~ rustix[903e]::backend::fs::syscalls::listxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:3782 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::listxattr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13279 ~ core[7d5a]::slice::{impl#0}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:346 ~ rustix[903e]::backend::fs::syscalls::llistxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:3782 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::listxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13279 ~ core[7d5a]::slice::{impl#0}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:347 ~ rustix[903e]::backend::fs::syscalls::flistxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:3783 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::flistxattr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:13279 ~ core[7d5a]::slice::{impl#0}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:348 ~ rustix[903e]::backend::fs::syscalls::removexattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:3784 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::removexattr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:349 ~ rustix[903e]::backend::fs::syscalls::lremovexattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:3784 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::removexattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:350 ~ rustix[903e]::backend::fs::syscalls::fremovexattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:3787 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::fremovexattr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:5499 ~ core[7d5a]::ffi::c_str::{impl#6}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1626 ~ rustix[903e]::backend::fs::types::{impl#5}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1628 ~ rustix[903e]::backend::fs::types::{impl#6}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1631 ~ rustix[903e]::backend::fs::types::{impl#8}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1631 ~ rustix[903e]::backend::fs::types::{impl#8}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:1631 ~ rustix[903e]::backend::fs::types::{impl#8}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:10:31: 10:31 (#139), res: Local(HirId(DefId(0:1631 ~ rustix[903e]::backend::fs::types::{impl#8}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:1631 ~ rustix[903e]::backend::fs::types::{impl#8}::eq).8), res: Local(HirId(DefId(0:1631 ~ rustix[903e]::backend::fs::types::{impl#8}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:10:31: 10:40 (#139) }, 0#135), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#139) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1631 ~ rustix[903e]::backend::fs::types::{impl#8}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:1631 ~ rustix[903e]::backend::fs::types::{impl#8}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:10:31: 10:40 (#139), res: Local(HirId(DefId(0:1631 ~ rustix[903e]::backend::fs::types::{impl#8}::eq).4)), segments: [PathSegment { ident: other#139, hir_id: HirId(DefId(0:1631 ~ rustix[903e]::backend::fs::types::{impl#8}::eq).11), res: Local(HirId(DefId(0:1631 ~ rustix[903e]::backend::fs::types::{impl#8}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:10:31: 10:40 (#139) }, 0#135), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#139) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1633 ~ rustix[903e]::backend::fs::types::{impl#9}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1636 ~ rustix[903e]::backend::fs::types::{impl#10}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1641 ~ rustix[903e]::backend::fs::types::{impl#12}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1642 ~ rustix[903e]::backend::fs::types::{impl#12}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1756 ~ rustix[903e]::backend::fs::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1651 ~ rustix[903e]::backend::fs::types::_::{impl#0}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1655 ~ rustix[903e]::backend::fs::types::_::{impl#3}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1655 ~ rustix[903e]::backend::fs::types::_::{impl#3}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:1655 ~ rustix[903e]::backend::fs::types::_::{impl#3}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:31 (#165), res: Local(HirId(DefId(0:1655 ~ rustix[903e]::backend::fs::types::_::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:1655 ~ rustix[903e]::backend::fs::types::_::{impl#3}::eq).8), res: Local(HirId(DefId(0:1655 ~ rustix[903e]::backend::fs::types::_::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#165) }, 0#162), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#165) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1655 ~ rustix[903e]::backend::fs::types::_::{impl#3}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:1655 ~ rustix[903e]::backend::fs::types::_::{impl#3}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#165), res: Local(HirId(DefId(0:1655 ~ rustix[903e]::backend::fs::types::_::{impl#3}::eq).4)), segments: [PathSegment { ident: other#165, hir_id: HirId(DefId(0:1655 ~ rustix[903e]::backend::fs::types::_::{impl#3}::eq).11), res: Local(HirId(DefId(0:1655 ~ rustix[903e]::backend::fs::types::_::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#165) }, 0#162), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#165) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1657 ~ rustix[903e]::backend::fs::types::_::{impl#4}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1659 ~ rustix[903e]::backend::fs::types::_::{impl#5}::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3008 ~ core[7d5a]::cmp::PartialOrd::partial_cmp)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1661 ~ rustix[903e]::backend::fs::types::_::{impl#6}::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1663 ~ rustix[903e]::backend::fs::types::_::{impl#7}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1669 ~ rustix[903e]::backend::fs::types::_::{impl#9}::default)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1685 ~ rustix[903e]::backend::fs::types::_::{impl#16}::empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1671 ~ rustix[903e]::backend::fs::types::_::{impl#10}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1692 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11182 ~ core[7d5a]::fmt::{impl#9}::write_fmt)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:11123 ~ core[7d5a]::fmt::{impl#2}::new_v1_formatted)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:11045 ~ core[7d5a]::fmt::rt::{impl#1}::new_lower_hex)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11026 ~ core[7d5a]::fmt::rt::{impl#0}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11071 ~ core[7d5a]::fmt::rt::{impl#2}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1673 ~ rustix[903e]::backend::fs::types::_::{impl#11}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:49 ~ bitflags[64b8]::parser::to_writer)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1676 ~ rustix[903e]::backend::fs::types::_::{impl#12}::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(22:52 ~ bitflags[64b8]::parser::from_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1679 ~ rustix[903e]::backend::fs::types::_::{impl#13}::as_ref)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1681 ~ rustix[903e]::backend::fs::types::_::{impl#14}::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1690 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1685 ~ rustix[903e]::backend::fs::types::_::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).38), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#173), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).11)), segments: [PathSegment { ident: truncated#173, hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).39), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).11)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).40), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#173), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).33)), segments: [PathSegment { ident: flag#173, hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).41), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).33)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#173) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).73), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#173), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).11)), segments: [PathSegment { ident: truncated#173, hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).74), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).11)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).75), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#173), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).68)), segments: [PathSegment { ident: flag#173, hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).76), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).68)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#173) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).108), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#173), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).11)), segments: [PathSegment { ident: truncated#173, hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).109), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).11)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).110), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#173), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).103)), segments: [PathSegment { ident: flag#173, hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).111), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).103)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#173) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).143), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#173), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).11)), segments: [PathSegment { ident: truncated#173, hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).144), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).11)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).145), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#173), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).138)), segments: [PathSegment { ident: flag#173, hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).146), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).138)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#173) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).178), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#173), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).11)), segments: [PathSegment { ident: truncated#173, hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).179), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).11)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).180), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#173), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).173)), segments: [PathSegment { ident: flag#173, hir_id: HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).181), res: Local(HirId(DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all).173)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#173) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1690 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1688 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1689 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_truncate)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1688 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#173), res: Local(HirId(DefId(0:1688 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits).19)), segments: [PathSegment { ident: truncated#173, hir_id: HirId(DefId(0:1688 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits).23), res: Local(HirId(DefId(0:1688 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits).19)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1688 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#173), res: Local(HirId(DefId(0:1688 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits).7)), segments: [PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1688 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits).25), res: Local(HirId(DefId(0:1688 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#173) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1689 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1689 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_truncate).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#173), res: Local(HirId(DefId(0:1689 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_truncate).7)), segments: [PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1689 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_truncate).14), res: Local(HirId(DefId(0:1689 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_truncate).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1689 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_truncate).15), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1689 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_truncate).16), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1689 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_truncate).17), kind: Call(Expr { hir_id: HirId(DefId(0:1689 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_truncate).18), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:1689 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_truncate).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#173), res: SelfTyAlias { alias_to: DefId(0:1684 ~ rustix[903e]::backend::fs::types::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#173, hir_id: HirId(DefId(0:1689 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_truncate).19), res: SelfTyAlias { alias_to: DefId(0:1684 ~ rustix[903e]::backend::fs::types::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#173) }, PathSegment { ident: all#173, hir_id: HirId(DefId(0:1689 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_truncate).21), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:42 (#173) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:44 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:45: 183:51 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:51 (#173) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1690 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#173), res: Local(HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#173, hir_id: HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).13), res: Local(HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).14), kind: Lit(Spanned { node: Str("READ_OK", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#193) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#193) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).42), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#173), res: Local(HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#173, hir_id: HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).43), res: Local(HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).44), kind: Lit(Spanned { node: Str("WRITE_OK", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#197) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#197) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).72), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#173), res: Local(HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#173, hir_id: HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).73), res: Local(HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).74), kind: Lit(Spanned { node: Str("EXEC_OK", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#201) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#201) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).102), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#173), res: Local(HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#173, hir_id: HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).103), res: Local(HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name).104), kind: Lit(Spanned { node: Str("EXISTS", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#205) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#205) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1692 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1692 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_empty).10), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1692 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_empty).11), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1692 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_empty).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#173), res: Local(HirId(DefId(0:1692 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_empty).7)), segments: [PathSegment { ident: f#173, hir_id: HirId(DefId(0:1692 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_empty).13), res: Local(HirId(DefId(0:1692 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_empty).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:23: 213:29 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:29 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1692 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_empty).14), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:1692 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_empty).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:11:24: 11:32 (#0), res: Def(TyAlias, DefId(20:44 ~ libc[9eb8]::unix::c_int)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:1692 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_empty).16), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: false }, PathSegment { ident: c_int#0, hir_id: HirId(DefId(0:1692 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_empty).17), res: Def(TyAlias, DefId(20:44 ~ libc[9eb8]::unix::c_int)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:11:24: 11:32 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#173), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#173, hir_id: HirId(DefId(0:1692 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_empty).18), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#173, hir_id: HirId(DefId(0:1692 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_empty).19), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#173, hir_id: HirId(DefId(0:1692 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_empty).20), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#173) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).10), kind: Binary(Spanned { node: BitOr, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:40: 219:41 (#173) }, Expr { hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#173), res: SelfTyAlias { alias_to: DefId(0:1684 ~ rustix[903e]::backend::fs::types::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#173, hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:1684 ~ rustix[903e]::backend::fs::types::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#173) }, PathSegment { ident: all#173, hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#173) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#173) }, Expr { hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#173), res: Local(HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#173, hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).21), res: Local(HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#173) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:50 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).22), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#173), res: Local(HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#173, hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).25), res: Local(HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:56: 219:62 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:62 (#173) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#173), res: SelfTyAlias { alias_to: DefId(0:1684 ~ rustix[903e]::backend::fs::types::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#173, hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:1684 ~ rustix[903e]::backend::fs::types::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#173) }, PathSegment { ident: all#173, hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#173) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#173), res: Local(HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#173, hir_id: HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).21), res: Local(HirId(DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#173) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:30: 223:31 (#173) }, Expr { hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#173), res: Local(HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#173, hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).21), res: Local(HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#173) }, Expr { hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#173), res: Local(HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#173, hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).25), res: Local(HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#173) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:44 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).26), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:11:24: 11:32 (#0), res: Def(TyAlias, DefId(20:44 ~ libc[9eb8]::unix::c_int)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).28), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: false }, PathSegment { ident: c_int#0, hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).29), res: Def(TyAlias, DefId(20:44 ~ libc[9eb8]::unix::c_int)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:11:24: 11:32 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#173), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#173, hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).30), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#173, hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).31), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#173, hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).32), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#173) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#173), res: Local(HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#173, hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).21), res: Local(HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#173), res: Local(HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#173, hir_id: HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).25), res: Local(HirId(DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#173) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:30: 227:31 (#173) }, Expr { hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#173), res: Local(HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).9)), segments: [PathSegment { ident: f#173, hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).21), res: Local(HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#173) }, Expr { hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#173), res: Local(HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).14)), segments: [PathSegment { ident: other#173, hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).25), res: Local(HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#173) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:44 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).26), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#173), res: Local(HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).14)), segments: [PathSegment { ident: other#173, hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).29), res: Local(HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:54: 227:60 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:60 (#173) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#173), res: Local(HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).9)), segments: [PathSegment { ident: f#173, hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).21), res: Local(HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#173), res: Local(HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).14)), segments: [PathSegment { ident: other#173, hir_id: HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).25), res: Local(HirId(DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#173) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1696 ~ rustix[903e]::backend::fs::types::_::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1701 ~ rustix[903e]::backend::fs::types::_::{impl#16}::union)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1690 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1697 ~ rustix[903e]::backend::fs::types::_::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1702 ~ rustix[903e]::backend::fs::types::_::{impl#16}::difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1690 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1698 ~ rustix[903e]::backend::fs::types::_::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1703 ~ rustix[903e]::backend::fs::types::_::{impl#16}::symmetric_difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1690 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1699 ~ rustix[903e]::backend::fs::types::_::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1696 ~ rustix[903e]::backend::fs::types::_::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1697 ~ rustix[903e]::backend::fs::types::_::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1700 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1690 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1700 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersection).22), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1700 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersection).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1700 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersection).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#173), res: Local(HirId(DefId(0:1700 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersection).9)), segments: [PathSegment { ident: f#173, hir_id: HirId(DefId(0:1700 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersection).25), res: Local(HirId(DefId(0:1700 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersection).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:46: 251:52 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:52 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1700 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersection).26), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1700 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersection).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1700 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersection).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#173), res: Local(HirId(DefId(0:1700 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersection).14)), segments: [PathSegment { ident: other#173, hir_id: HirId(DefId(0:1700 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersection).29), res: Local(HirId(DefId(0:1700 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersection).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:61: 251:67 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:67 (#173) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1701 ~ rustix[903e]::backend::fs::types::_::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1690 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1701 ~ rustix[903e]::backend::fs::types::_::{impl#16}::union).22), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1701 ~ rustix[903e]::backend::fs::types::_::{impl#16}::union).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1701 ~ rustix[903e]::backend::fs::types::_::{impl#16}::union).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#173), res: Local(HirId(DefId(0:1701 ~ rustix[903e]::backend::fs::types::_::{impl#16}::union).9)), segments: [PathSegment { ident: f#173, hir_id: HirId(DefId(0:1701 ~ rustix[903e]::backend::fs::types::_::{impl#16}::union).25), res: Local(HirId(DefId(0:1701 ~ rustix[903e]::backend::fs::types::_::{impl#16}::union).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:46: 255:52 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:52 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1701 ~ rustix[903e]::backend::fs::types::_::{impl#16}::union).26), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1701 ~ rustix[903e]::backend::fs::types::_::{impl#16}::union).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1701 ~ rustix[903e]::backend::fs::types::_::{impl#16}::union).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#173), res: Local(HirId(DefId(0:1701 ~ rustix[903e]::backend::fs::types::_::{impl#16}::union).14)), segments: [PathSegment { ident: other#173, hir_id: HirId(DefId(0:1701 ~ rustix[903e]::backend::fs::types::_::{impl#16}::union).29), res: Local(HirId(DefId(0:1701 ~ rustix[903e]::backend::fs::types::_::{impl#16}::union).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:61: 255:67 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:67 (#173) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1702 ~ rustix[903e]::backend::fs::types::_::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1690 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1702 ~ rustix[903e]::backend::fs::types::_::{impl#16}::difference).22), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1702 ~ rustix[903e]::backend::fs::types::_::{impl#16}::difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1702 ~ rustix[903e]::backend::fs::types::_::{impl#16}::difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#173), res: Local(HirId(DefId(0:1702 ~ rustix[903e]::backend::fs::types::_::{impl#16}::difference).9)), segments: [PathSegment { ident: f#173, hir_id: HirId(DefId(0:1702 ~ rustix[903e]::backend::fs::types::_::{impl#16}::difference).25), res: Local(HirId(DefId(0:1702 ~ rustix[903e]::backend::fs::types::_::{impl#16}::difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:46: 259:52 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:52 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1702 ~ rustix[903e]::backend::fs::types::_::{impl#16}::difference).26), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:1702 ~ rustix[903e]::backend::fs::types::_::{impl#16}::difference).27), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1702 ~ rustix[903e]::backend::fs::types::_::{impl#16}::difference).28), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1702 ~ rustix[903e]::backend::fs::types::_::{impl#16}::difference).29), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#173), res: Local(HirId(DefId(0:1702 ~ rustix[903e]::backend::fs::types::_::{impl#16}::difference).14)), segments: [PathSegment { ident: other#173, hir_id: HirId(DefId(0:1702 ~ rustix[903e]::backend::fs::types::_::{impl#16}::difference).30), res: Local(HirId(DefId(0:1702 ~ rustix[903e]::backend::fs::types::_::{impl#16}::difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:62: 259:68 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:68 (#173) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:55: 259:68 (#173) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1703 ~ rustix[903e]::backend::fs::types::_::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1690 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1703 ~ rustix[903e]::backend::fs::types::_::{impl#16}::symmetric_difference).22), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1703 ~ rustix[903e]::backend::fs::types::_::{impl#16}::symmetric_difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1703 ~ rustix[903e]::backend::fs::types::_::{impl#16}::symmetric_difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#173), res: Local(HirId(DefId(0:1703 ~ rustix[903e]::backend::fs::types::_::{impl#16}::symmetric_difference).9)), segments: [PathSegment { ident: f#173, hir_id: HirId(DefId(0:1703 ~ rustix[903e]::backend::fs::types::_::{impl#16}::symmetric_difference).25), res: Local(HirId(DefId(0:1703 ~ rustix[903e]::backend::fs::types::_::{impl#16}::symmetric_difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:46: 263:52 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:52 (#173) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1703 ~ rustix[903e]::backend::fs::types::_::{impl#16}::symmetric_difference).26), kind: MethodCall(PathSegment { ident: bits#173, hir_id: HirId(DefId(0:1703 ~ rustix[903e]::backend::fs::types::_::{impl#16}::symmetric_difference).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1703 ~ rustix[903e]::backend::fs::types::_::{impl#16}::symmetric_difference).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#173), res: Local(HirId(DefId(0:1703 ~ rustix[903e]::backend::fs::types::_::{impl#16}::symmetric_difference).14)), segments: [PathSegment { ident: other#173, hir_id: HirId(DefId(0:1703 ~ rustix[903e]::backend::fs::types::_::{impl#16}::symmetric_difference).29), res: Local(HirId(DefId(0:1703 ~ rustix[903e]::backend::fs::types::_::{impl#16}::symmetric_difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#173) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:61: 263:67 (#173)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:67 (#173) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1704 ~ rustix[903e]::backend::fs::types::_::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1689 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1706 ~ rustix[903e]::backend::fs::types::_::{impl#17}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1708 ~ rustix[903e]::backend::fs::types::_::{impl#18}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1710 ~ rustix[903e]::backend::fs::types::_::{impl#19}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1712 ~ rustix[903e]::backend::fs::types::_::{impl#20}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1715 ~ rustix[903e]::backend::fs::types::_::{impl#21}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1701 ~ rustix[903e]::backend::fs::types::_::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1717 ~ rustix[903e]::backend::fs::types::_::{impl#22}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1696 ~ rustix[903e]::backend::fs::types::_::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1720 ~ rustix[903e]::backend::fs::types::_::{impl#23}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1703 ~ rustix[903e]::backend::fs::types::_::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1722 ~ rustix[903e]::backend::fs::types::_::{impl#24}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1698 ~ rustix[903e]::backend::fs::types::_::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1725 ~ rustix[903e]::backend::fs::types::_::{impl#25}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1700 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1727 ~ rustix[903e]::backend::fs::types::_::{impl#26}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1700 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1690 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1730 ~ rustix[903e]::backend::fs::types::_::{impl#27}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1702 ~ rustix[903e]::backend::fs::types::_::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1732 ~ rustix[903e]::backend::fs::types::_::{impl#28}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1697 ~ rustix[903e]::backend::fs::types::_::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1735 ~ rustix[903e]::backend::fs::types::_::{impl#29}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1704 ~ rustix[903e]::backend::fs::types::_::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1737 ~ rustix[903e]::backend::fs::types::_::{impl#30}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1696 ~ rustix[903e]::backend::fs::types::_::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1740 ~ rustix[903e]::backend::fs::types::_::{impl#31}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1685 ~ rustix[903e]::backend::fs::types::_::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1744 ~ rustix[903e]::backend::fs::types::_::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1756 ~ rustix[903e]::backend::fs::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1756 ~ rustix[903e]::backend::fs::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1745 ~ rustix[903e]::backend::fs::types::_::{impl#32}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1756 ~ rustix[903e]::backend::fs::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1756 ~ rustix[903e]::backend::fs::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1749 ~ rustix[903e]::backend::fs::types::_::{impl#33}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1744 ~ rustix[903e]::backend::fs::types::_::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1683 ~ rustix[903e]::backend::fs::types::_::{impl#15}::bits_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1751 ~ rustix[903e]::backend::fs::types::_::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1685 ~ rustix[903e]::backend::fs::types::_::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1752 ~ rustix[903e]::backend::fs::types::_::{impl#34}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1686 ~ rustix[903e]::backend::fs::types::_::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1687 ~ rustix[903e]::backend::fs::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1754 ~ rustix[903e]::backend::fs::types::_::{impl#34}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1688 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1755 ~ rustix[903e]::backend::fs::types::_::{impl#34}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1689 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1756 ~ rustix[903e]::backend::fs::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1690 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1757 ~ rustix[903e]::backend::fs::types::_::{impl#34}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1691 ~ rustix[903e]::backend::fs::types::_::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1758 ~ rustix[903e]::backend::fs::types::_::{impl#34}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1692 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1759 ~ rustix[903e]::backend::fs::types::_::{impl#34}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1693 ~ rustix[903e]::backend::fs::types::_::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1760 ~ rustix[903e]::backend::fs::types::_::{impl#34}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1694 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1761 ~ rustix[903e]::backend::fs::types::_::{impl#34}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1695 ~ rustix[903e]::backend::fs::types::_::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1762 ~ rustix[903e]::backend::fs::types::_::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1696 ~ rustix[903e]::backend::fs::types::_::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1763 ~ rustix[903e]::backend::fs::types::_::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1697 ~ rustix[903e]::backend::fs::types::_::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1764 ~ rustix[903e]::backend::fs::types::_::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1698 ~ rustix[903e]::backend::fs::types::_::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1765 ~ rustix[903e]::backend::fs::types::_::{impl#34}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1699 ~ rustix[903e]::backend::fs::types::_::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1766 ~ rustix[903e]::backend::fs::types::_::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1700 ~ rustix[903e]::backend::fs::types::_::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1767 ~ rustix[903e]::backend::fs::types::_::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1701 ~ rustix[903e]::backend::fs::types::_::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1768 ~ rustix[903e]::backend::fs::types::_::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1702 ~ rustix[903e]::backend::fs::types::_::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1769 ~ rustix[903e]::backend::fs::types::_::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1703 ~ rustix[903e]::backend::fs::types::_::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1770 ~ rustix[903e]::backend::fs::types::_::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1704 ~ rustix[903e]::backend::fs::types::_::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1772 ~ rustix[903e]::backend::fs::types::_::{impl#35}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1774 ~ rustix[903e]::backend::fs::types::_::{impl#36}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1776 ~ rustix[903e]::backend::fs::types::_::{impl#37}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1778 ~ rustix[903e]::backend::fs::types::_::{impl#38}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1781 ~ rustix[903e]::backend::fs::types::_::{impl#39}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1767 ~ rustix[903e]::backend::fs::types::_::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1783 ~ rustix[903e]::backend::fs::types::_::{impl#40}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1762 ~ rustix[903e]::backend::fs::types::_::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1786 ~ rustix[903e]::backend::fs::types::_::{impl#41}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1769 ~ rustix[903e]::backend::fs::types::_::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1788 ~ rustix[903e]::backend::fs::types::_::{impl#42}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1764 ~ rustix[903e]::backend::fs::types::_::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1791 ~ rustix[903e]::backend::fs::types::_::{impl#43}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1766 ~ rustix[903e]::backend::fs::types::_::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1793 ~ rustix[903e]::backend::fs::types::_::{impl#44}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1766 ~ rustix[903e]::backend::fs::types::_::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1756 ~ rustix[903e]::backend::fs::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1796 ~ rustix[903e]::backend::fs::types::_::{impl#45}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1768 ~ rustix[903e]::backend::fs::types::_::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1798 ~ rustix[903e]::backend::fs::types::_::{impl#46}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1763 ~ rustix[903e]::backend::fs::types::_::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1801 ~ rustix[903e]::backend::fs::types::_::{impl#47}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1770 ~ rustix[903e]::backend::fs::types::_::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1803 ~ rustix[903e]::backend::fs::types::_::{impl#48}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1762 ~ rustix[903e]::backend::fs::types::_::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1806 ~ rustix[903e]::backend::fs::types::_::{impl#49}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1751 ~ rustix[903e]::backend::fs::types::_::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1810 ~ rustix[903e]::backend::fs::types::_::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1756 ~ rustix[903e]::backend::fs::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1756 ~ rustix[903e]::backend::fs::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1811 ~ rustix[903e]::backend::fs::types::_::{impl#50}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1756 ~ rustix[903e]::backend::fs::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1756 ~ rustix[903e]::backend::fs::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1753 ~ rustix[903e]::backend::fs::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1815 ~ rustix[903e]::backend::fs::types::_::{impl#51}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1810 ~ rustix[903e]::backend::fs::types::_::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1822 ~ rustix[903e]::backend::fs::types::{impl#14}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1824 ~ rustix[903e]::backend::fs::types::{impl#15}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1827 ~ rustix[903e]::backend::fs::types::{impl#17}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1827 ~ rustix[903e]::backend::fs::types::{impl#17}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:1827 ~ rustix[903e]::backend::fs::types::{impl#17}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:37:31: 37:31 (#218), res: Local(HirId(DefId(0:1827 ~ rustix[903e]::backend::fs::types::{impl#17}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:1827 ~ rustix[903e]::backend::fs::types::{impl#17}::eq).8), res: Local(HirId(DefId(0:1827 ~ rustix[903e]::backend::fs::types::{impl#17}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:37:31: 37:40 (#218) }, 0#214), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#218) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1827 ~ rustix[903e]::backend::fs::types::{impl#17}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:1827 ~ rustix[903e]::backend::fs::types::{impl#17}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:37:31: 37:40 (#218), res: Local(HirId(DefId(0:1827 ~ rustix[903e]::backend::fs::types::{impl#17}::eq).4)), segments: [PathSegment { ident: other#218, hir_id: HirId(DefId(0:1827 ~ rustix[903e]::backend::fs::types::{impl#17}::eq).11), res: Local(HirId(DefId(0:1827 ~ rustix[903e]::backend::fs::types::{impl#17}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:37:31: 37:40 (#218) }, 0#214), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#218) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1829 ~ rustix[903e]::backend::fs::types::{impl#18}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1832 ~ rustix[903e]::backend::fs::types::{impl#19}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1837 ~ rustix[903e]::backend::fs::types::{impl#21}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1838 ~ rustix[903e]::backend::fs::types::{impl#21}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1952 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1847 ~ rustix[903e]::backend::fs::types::_#1::{impl#0}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1851 ~ rustix[903e]::backend::fs::types::_#1::{impl#3}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1851 ~ rustix[903e]::backend::fs::types::_#1::{impl#3}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:1851 ~ rustix[903e]::backend::fs::types::_#1::{impl#3}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:31 (#273), res: Local(HirId(DefId(0:1851 ~ rustix[903e]::backend::fs::types::_#1::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:1851 ~ rustix[903e]::backend::fs::types::_#1::{impl#3}::eq).8), res: Local(HirId(DefId(0:1851 ~ rustix[903e]::backend::fs::types::_#1::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#273) }, 0#270), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#273) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1851 ~ rustix[903e]::backend::fs::types::_#1::{impl#3}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:1851 ~ rustix[903e]::backend::fs::types::_#1::{impl#3}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#273), res: Local(HirId(DefId(0:1851 ~ rustix[903e]::backend::fs::types::_#1::{impl#3}::eq).4)), segments: [PathSegment { ident: other#273, hir_id: HirId(DefId(0:1851 ~ rustix[903e]::backend::fs::types::_#1::{impl#3}::eq).11), res: Local(HirId(DefId(0:1851 ~ rustix[903e]::backend::fs::types::_#1::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#273) }, 0#270), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#273) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1853 ~ rustix[903e]::backend::fs::types::_#1::{impl#4}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1855 ~ rustix[903e]::backend::fs::types::_#1::{impl#5}::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3008 ~ core[7d5a]::cmp::PartialOrd::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1857 ~ rustix[903e]::backend::fs::types::_#1::{impl#6}::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1859 ~ rustix[903e]::backend::fs::types::_#1::{impl#7}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1865 ~ rustix[903e]::backend::fs::types::_#1::{impl#9}::default)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1881 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1867 ~ rustix[903e]::backend::fs::types::_#1::{impl#10}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1888 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11182 ~ core[7d5a]::fmt::{impl#9}::write_fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11123 ~ core[7d5a]::fmt::{impl#2}::new_v1_formatted)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11045 ~ core[7d5a]::fmt::rt::{impl#1}::new_lower_hex)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11026 ~ core[7d5a]::fmt::rt::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11071 ~ core[7d5a]::fmt::rt::{impl#2}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1869 ~ rustix[903e]::backend::fs::types::_#1::{impl#11}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:49 ~ bitflags[64b8]::parser::to_writer)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1872 ~ rustix[903e]::backend::fs::types::_#1::{impl#12}::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:52 ~ bitflags[64b8]::parser::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1875 ~ rustix[903e]::backend::fs::types::_#1::{impl#13}::as_ref)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1877 ~ rustix[903e]::backend::fs::types::_#1::{impl#14}::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1886 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1881 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).37), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#281), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#281, hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).38), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#281), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).32)), segments: [PathSegment { ident: flag#281, hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).40), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#281) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).72), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#281), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#281, hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).73), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).74), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#281), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).67)), segments: [PathSegment { ident: flag#281, hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).75), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).67)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#281) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).107), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#281), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#281, hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).108), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).109), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#281), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).102)), segments: [PathSegment { ident: flag#281, hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).110), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).102)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#281) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).142), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#281), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#281, hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).143), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).144), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#281), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).137)), segments: [PathSegment { ident: flag#281, hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).145), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).137)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#281) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).177), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#281), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#281, hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).178), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).179), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#281), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).172)), segments: [PathSegment { ident: flag#281, hir_id: HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).180), res: Local(HirId(DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all).172)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#281) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1886 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1884 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1885 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_truncate)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1884 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#281), res: Local(HirId(DefId(0:1884 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits).19)), segments: [PathSegment { ident: truncated#281, hir_id: HirId(DefId(0:1884 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits).23), res: Local(HirId(DefId(0:1884 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits).19)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1884 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#281), res: Local(HirId(DefId(0:1884 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits).7)), segments: [PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1884 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits).25), res: Local(HirId(DefId(0:1884 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#281) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1885 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1885 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_truncate).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#281), res: Local(HirId(DefId(0:1885 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_truncate).7)), segments: [PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1885 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_truncate).14), res: Local(HirId(DefId(0:1885 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_truncate).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1885 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_truncate).15), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1885 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_truncate).16), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1885 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_truncate).17), kind: Call(Expr { hir_id: HirId(DefId(0:1885 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_truncate).18), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:1885 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_truncate).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#281), res: SelfTyAlias { alias_to: DefId(0:1880 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#281, hir_id: HirId(DefId(0:1885 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_truncate).19), res: SelfTyAlias { alias_to: DefId(0:1880 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#281) }, PathSegment { ident: all#281, hir_id: HirId(DefId(0:1885 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_truncate).21), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:42 (#281) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:44 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:45: 183:51 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:51 (#281) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1886 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#281), res: Local(HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#281, hir_id: HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).13), res: Local(HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).14), kind: Lit(Spanned { node: Str("SYMLINK_NOFOLLOW", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#326) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#326) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).42), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#281), res: Local(HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#281, hir_id: HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).43), res: Local(HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).44), kind: Lit(Spanned { node: Str("EACCESS", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#331) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#331) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).72), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#281), res: Local(HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#281, hir_id: HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).73), res: Local(HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).74), kind: Lit(Spanned { node: Str("REMOVEDIR", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#335) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#335) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).102), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#281), res: Local(HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#281, hir_id: HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).103), res: Local(HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name).104), kind: Lit(Spanned { node: Str("SYMLINK_FOLLOW", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#339) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#339) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1888 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1888 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_empty).10), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1888 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_empty).11), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1888 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_empty).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#281), res: Local(HirId(DefId(0:1888 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_empty).7)), segments: [PathSegment { ident: f#281, hir_id: HirId(DefId(0:1888 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_empty).13), res: Local(HirId(DefId(0:1888 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_empty).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:23: 213:29 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:29 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1888 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_empty).14), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:1888 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_empty).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:38:25: 38:28 (#0), res: PrimTy(Uint(U32)), segments: [PathSegment { ident: u32#0, hir_id: HirId(DefId(0:1888 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_empty).16), res: PrimTy(Uint(U32)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:38:25: 38:28 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#281), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#281, hir_id: HirId(DefId(0:1888 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_empty).17), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#281, hir_id: HirId(DefId(0:1888 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_empty).18), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#281, hir_id: HirId(DefId(0:1888 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_empty).19), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#281) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).10), kind: Binary(Spanned { node: BitOr, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:40: 219:41 (#281) }, Expr { hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#281), res: SelfTyAlias { alias_to: DefId(0:1880 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#281, hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:1880 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#281) }, PathSegment { ident: all#281, hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#281) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#281) }, Expr { hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#281), res: Local(HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#281, hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).21), res: Local(HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#281) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:50 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).22), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#281), res: Local(HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#281, hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).25), res: Local(HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:56: 219:62 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:62 (#281) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#281), res: SelfTyAlias { alias_to: DefId(0:1880 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#281, hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:1880 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#281) }, PathSegment { ident: all#281, hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#281) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#281), res: Local(HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#281, hir_id: HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).21), res: Local(HirId(DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#281) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:30: 223:31 (#281) }, Expr { hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#281), res: Local(HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#281, hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).21), res: Local(HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#281) }, Expr { hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#281), res: Local(HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#281, hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).25), res: Local(HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#281) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:44 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).26), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:38:25: 38:28 (#0), res: PrimTy(Uint(U32)), segments: [PathSegment { ident: u32#0, hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).28), res: PrimTy(Uint(U32)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:38:25: 38:28 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#281), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#281, hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).29), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#281, hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).30), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#281, hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).31), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#281) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#281), res: Local(HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#281, hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).21), res: Local(HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#281), res: Local(HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#281, hir_id: HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).25), res: Local(HirId(DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#281) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:30: 227:31 (#281) }, Expr { hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#281), res: Local(HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).9)), segments: [PathSegment { ident: f#281, hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).21), res: Local(HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#281) }, Expr { hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#281), res: Local(HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).14)), segments: [PathSegment { ident: other#281, hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).25), res: Local(HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#281) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:44 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).26), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#281), res: Local(HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).14)), segments: [PathSegment { ident: other#281, hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).29), res: Local(HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:54: 227:60 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:60 (#281) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#281), res: Local(HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).9)), segments: [PathSegment { ident: f#281, hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).21), res: Local(HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#281), res: Local(HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).14)), segments: [PathSegment { ident: other#281, hir_id: HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).25), res: Local(HirId(DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#281) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1892 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1897 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::union)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1886 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1893 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1898 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1886 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1894 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1899 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::symmetric_difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1886 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1895 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1892 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1893 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1896 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1886 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1896 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersection).22), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1896 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersection).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1896 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersection).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#281), res: Local(HirId(DefId(0:1896 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersection).9)), segments: [PathSegment { ident: f#281, hir_id: HirId(DefId(0:1896 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersection).25), res: Local(HirId(DefId(0:1896 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersection).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:46: 251:52 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:52 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1896 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersection).26), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1896 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersection).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1896 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersection).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#281), res: Local(HirId(DefId(0:1896 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersection).14)), segments: [PathSegment { ident: other#281, hir_id: HirId(DefId(0:1896 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersection).29), res: Local(HirId(DefId(0:1896 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersection).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:61: 251:67 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:67 (#281) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1897 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1886 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1897 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::union).22), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1897 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::union).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1897 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::union).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#281), res: Local(HirId(DefId(0:1897 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::union).9)), segments: [PathSegment { ident: f#281, hir_id: HirId(DefId(0:1897 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::union).25), res: Local(HirId(DefId(0:1897 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::union).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:46: 255:52 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:52 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1897 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::union).26), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1897 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::union).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1897 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::union).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#281), res: Local(HirId(DefId(0:1897 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::union).14)), segments: [PathSegment { ident: other#281, hir_id: HirId(DefId(0:1897 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::union).29), res: Local(HirId(DefId(0:1897 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::union).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:61: 255:67 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:67 (#281) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1898 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1886 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1898 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::difference).22), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1898 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1898 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#281), res: Local(HirId(DefId(0:1898 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::difference).9)), segments: [PathSegment { ident: f#281, hir_id: HirId(DefId(0:1898 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::difference).25), res: Local(HirId(DefId(0:1898 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:46: 259:52 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:52 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1898 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::difference).26), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:1898 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::difference).27), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1898 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::difference).28), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1898 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::difference).29), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#281), res: Local(HirId(DefId(0:1898 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::difference).14)), segments: [PathSegment { ident: other#281, hir_id: HirId(DefId(0:1898 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::difference).30), res: Local(HirId(DefId(0:1898 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:62: 259:68 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:68 (#281) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:55: 259:68 (#281) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1899 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1886 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1899 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::symmetric_difference).22), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1899 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::symmetric_difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1899 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::symmetric_difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#281), res: Local(HirId(DefId(0:1899 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::symmetric_difference).9)), segments: [PathSegment { ident: f#281, hir_id: HirId(DefId(0:1899 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::symmetric_difference).25), res: Local(HirId(DefId(0:1899 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::symmetric_difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:46: 263:52 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:52 (#281) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1899 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::symmetric_difference).26), kind: MethodCall(PathSegment { ident: bits#281, hir_id: HirId(DefId(0:1899 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::symmetric_difference).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1899 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::symmetric_difference).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#281), res: Local(HirId(DefId(0:1899 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::symmetric_difference).14)), segments: [PathSegment { ident: other#281, hir_id: HirId(DefId(0:1899 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::symmetric_difference).29), res: Local(HirId(DefId(0:1899 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::symmetric_difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#281) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:61: 263:67 (#281)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:67 (#281) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1900 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1885 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1902 ~ rustix[903e]::backend::fs::types::_#1::{impl#17}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1904 ~ rustix[903e]::backend::fs::types::_#1::{impl#18}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1906 ~ rustix[903e]::backend::fs::types::_#1::{impl#19}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1908 ~ rustix[903e]::backend::fs::types::_#1::{impl#20}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1911 ~ rustix[903e]::backend::fs::types::_#1::{impl#21}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1897 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1913 ~ rustix[903e]::backend::fs::types::_#1::{impl#22}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1892 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1916 ~ rustix[903e]::backend::fs::types::_#1::{impl#23}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1899 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1918 ~ rustix[903e]::backend::fs::types::_#1::{impl#24}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1894 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1921 ~ rustix[903e]::backend::fs::types::_#1::{impl#25}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1896 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1923 ~ rustix[903e]::backend::fs::types::_#1::{impl#26}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1896 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1886 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1926 ~ rustix[903e]::backend::fs::types::_#1::{impl#27}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1898 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1928 ~ rustix[903e]::backend::fs::types::_#1::{impl#28}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1893 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1931 ~ rustix[903e]::backend::fs::types::_#1::{impl#29}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1900 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1933 ~ rustix[903e]::backend::fs::types::_#1::{impl#30}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1892 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1936 ~ rustix[903e]::backend::fs::types::_#1::{impl#31}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1881 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1940 ~ rustix[903e]::backend::fs::types::_#1::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1952 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1952 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1941 ~ rustix[903e]::backend::fs::types::_#1::{impl#32}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1952 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1952 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1945 ~ rustix[903e]::backend::fs::types::_#1::{impl#33}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1940 ~ rustix[903e]::backend::fs::types::_#1::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1879 ~ rustix[903e]::backend::fs::types::_#1::{impl#15}::bits_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1947 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1881 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1948 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1882 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1883 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1950 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1884 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1951 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1885 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1952 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1886 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1953 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1887 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1954 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1888 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1955 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1889 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1956 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1890 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1957 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1891 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1958 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1892 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1959 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1893 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1960 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1894 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1961 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1895 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1962 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1896 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1963 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1897 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1964 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1898 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1965 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1899 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1966 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1900 ~ rustix[903e]::backend::fs::types::_#1::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1968 ~ rustix[903e]::backend::fs::types::_#1::{impl#35}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1970 ~ rustix[903e]::backend::fs::types::_#1::{impl#36}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1972 ~ rustix[903e]::backend::fs::types::_#1::{impl#37}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1974 ~ rustix[903e]::backend::fs::types::_#1::{impl#38}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1977 ~ rustix[903e]::backend::fs::types::_#1::{impl#39}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1963 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1979 ~ rustix[903e]::backend::fs::types::_#1::{impl#40}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1958 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1982 ~ rustix[903e]::backend::fs::types::_#1::{impl#41}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1965 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1984 ~ rustix[903e]::backend::fs::types::_#1::{impl#42}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1960 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1987 ~ rustix[903e]::backend::fs::types::_#1::{impl#43}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1962 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1989 ~ rustix[903e]::backend::fs::types::_#1::{impl#44}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1962 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1952 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1992 ~ rustix[903e]::backend::fs::types::_#1::{impl#45}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1964 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1994 ~ rustix[903e]::backend::fs::types::_#1::{impl#46}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1959 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1997 ~ rustix[903e]::backend::fs::types::_#1::{impl#47}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1966 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1999 ~ rustix[903e]::backend::fs::types::_#1::{impl#48}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1958 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2002 ~ rustix[903e]::backend::fs::types::_#1::{impl#49}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1947 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2006 ~ rustix[903e]::backend::fs::types::_#1::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1952 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1952 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2007 ~ rustix[903e]::backend::fs::types::_#1::{impl#50}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1952 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1952 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1949 ~ rustix[903e]::backend::fs::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2011 ~ rustix[903e]::backend::fs::types::_#1::{impl#51}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2006 ~ rustix[903e]::backend::fs::types::_#1::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2018 ~ rustix[903e]::backend::fs::types::{impl#23}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2020 ~ rustix[903e]::backend::fs::types::{impl#24}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2023 ~ rustix[903e]::backend::fs::types::{impl#26}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2023 ~ rustix[903e]::backend::fs::types::{impl#26}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:2023 ~ rustix[903e]::backend::fs::types::{impl#26}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:92:31: 92:31 (#376), res: Local(HirId(DefId(0:2023 ~ rustix[903e]::backend::fs::types::{impl#26}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:2023 ~ rustix[903e]::backend::fs::types::{impl#26}::eq).8), res: Local(HirId(DefId(0:2023 ~ rustix[903e]::backend::fs::types::{impl#26}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:92:31: 92:40 (#376) }, 0#372), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#376) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2023 ~ rustix[903e]::backend::fs::types::{impl#26}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:2023 ~ rustix[903e]::backend::fs::types::{impl#26}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:92:31: 92:40 (#376), res: Local(HirId(DefId(0:2023 ~ rustix[903e]::backend::fs::types::{impl#26}::eq).4)), segments: [PathSegment { ident: other#376, hir_id: HirId(DefId(0:2023 ~ rustix[903e]::backend::fs::types::{impl#26}::eq).11), res: Local(HirId(DefId(0:2023 ~ rustix[903e]::backend::fs::types::{impl#26}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:92:31: 92:40 (#376) }, 0#372), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#376) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2025 ~ rustix[903e]::backend::fs::types::{impl#27}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2028 ~ rustix[903e]::backend::fs::types::{impl#28}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2033 ~ rustix[903e]::backend::fs::types::{impl#30}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2034 ~ rustix[903e]::backend::fs::types::{impl#30}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2159 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2054 ~ rustix[903e]::backend::fs::types::_#2::{impl#0}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2058 ~ rustix[903e]::backend::fs::types::_#2::{impl#3}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2058 ~ rustix[903e]::backend::fs::types::_#2::{impl#3}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:2058 ~ rustix[903e]::backend::fs::types::_#2::{impl#3}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:31 (#461), res: Local(HirId(DefId(0:2058 ~ rustix[903e]::backend::fs::types::_#2::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:2058 ~ rustix[903e]::backend::fs::types::_#2::{impl#3}::eq).8), res: Local(HirId(DefId(0:2058 ~ rustix[903e]::backend::fs::types::_#2::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#461) }, 0#458), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#461) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2058 ~ rustix[903e]::backend::fs::types::_#2::{impl#3}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:2058 ~ rustix[903e]::backend::fs::types::_#2::{impl#3}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#461), res: Local(HirId(DefId(0:2058 ~ rustix[903e]::backend::fs::types::_#2::{impl#3}::eq).4)), segments: [PathSegment { ident: other#461, hir_id: HirId(DefId(0:2058 ~ rustix[903e]::backend::fs::types::_#2::{impl#3}::eq).11), res: Local(HirId(DefId(0:2058 ~ rustix[903e]::backend::fs::types::_#2::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#461) }, 0#458), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#461) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2060 ~ rustix[903e]::backend::fs::types::_#2::{impl#4}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2062 ~ rustix[903e]::backend::fs::types::_#2::{impl#5}::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3008 ~ core[7d5a]::cmp::PartialOrd::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2064 ~ rustix[903e]::backend::fs::types::_#2::{impl#6}::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2066 ~ rustix[903e]::backend::fs::types::_#2::{impl#7}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2072 ~ rustix[903e]::backend::fs::types::_#2::{impl#9}::default)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2088 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2074 ~ rustix[903e]::backend::fs::types::_#2::{impl#10}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2095 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11182 ~ core[7d5a]::fmt::{impl#9}::write_fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11123 ~ core[7d5a]::fmt::{impl#2}::new_v1_formatted)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11045 ~ core[7d5a]::fmt::rt::{impl#1}::new_lower_hex)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11026 ~ core[7d5a]::fmt::rt::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11071 ~ core[7d5a]::fmt::rt::{impl#2}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2076 ~ rustix[903e]::backend::fs::types::_#2::{impl#11}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:49 ~ bitflags[64b8]::parser::to_writer)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2079 ~ rustix[903e]::backend::fs::types::_#2::{impl#12}::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:52 ~ bitflags[64b8]::parser::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2082 ~ rustix[903e]::backend::fs::types::_#2::{impl#13}::as_ref)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2084 ~ rustix[903e]::backend::fs::types::_#2::{impl#14}::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2093 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2088 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).37), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).38), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).32)), segments: [PathSegment { ident: flag#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).40), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).72), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).73), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).74), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).67)), segments: [PathSegment { ident: flag#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).75), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).67)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).107), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).108), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).109), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).102)), segments: [PathSegment { ident: flag#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).110), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).102)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).142), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).143), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).144), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).137)), segments: [PathSegment { ident: flag#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).145), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).137)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).177), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).178), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).179), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).172)), segments: [PathSegment { ident: flag#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).180), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).172)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).212), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).213), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).214), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).207)), segments: [PathSegment { ident: flag#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).215), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).207)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).247), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).248), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).249), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).242)), segments: [PathSegment { ident: flag#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).250), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).242)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).282), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).283), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).284), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).277)), segments: [PathSegment { ident: flag#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).285), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).277)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).317), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).318), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).319), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).312)), segments: [PathSegment { ident: flag#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).320), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).312)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).352), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).353), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).354), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).347)), segments: [PathSegment { ident: flag#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).355), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).347)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).387), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).388), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).389), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).382)), segments: [PathSegment { ident: flag#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).390), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).382)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).422), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).423), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).424), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).417)), segments: [PathSegment { ident: flag#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).425), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).417)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).457), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).458), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).459), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).452)), segments: [PathSegment { ident: flag#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).460), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).452)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).492), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).493), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).494), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).487)), segments: [PathSegment { ident: flag#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).495), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).487)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).527), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).528), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).529), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).522)), segments: [PathSegment { ident: flag#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).530), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).522)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).562), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).563), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).564), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).557)), segments: [PathSegment { ident: flag#469, hir_id: HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).565), res: Local(HirId(DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all).557)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#469) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2093 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2091 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2092 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_truncate)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2091 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#469), res: Local(HirId(DefId(0:2091 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits).19)), segments: [PathSegment { ident: truncated#469, hir_id: HirId(DefId(0:2091 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits).23), res: Local(HirId(DefId(0:2091 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits).19)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2091 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#469), res: Local(HirId(DefId(0:2091 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits).7)), segments: [PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2091 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits).25), res: Local(HirId(DefId(0:2091 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#469) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2092 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2092 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_truncate).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#469), res: Local(HirId(DefId(0:2092 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_truncate).7)), segments: [PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2092 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_truncate).14), res: Local(HirId(DefId(0:2092 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_truncate).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2092 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_truncate).15), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2092 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_truncate).16), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2092 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_truncate).17), kind: Call(Expr { hir_id: HirId(DefId(0:2092 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_truncate).18), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:2092 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_truncate).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#469), res: SelfTyAlias { alias_to: DefId(0:2087 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#469, hir_id: HirId(DefId(0:2092 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_truncate).19), res: SelfTyAlias { alias_to: DefId(0:2087 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#469) }, PathSegment { ident: all#469, hir_id: HirId(DefId(0:2092 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_truncate).21), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:42 (#469) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:44 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:45: 183:51 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:51 (#469) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2093 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#469, hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).13), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).14), kind: Lit(Spanned { node: Str("RWXU", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#538) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#538) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).42), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#469, hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).43), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).44), kind: Lit(Spanned { node: Str("RUSR", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#543) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#543) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).72), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#469, hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).73), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).74), kind: Lit(Spanned { node: Str("WUSR", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#548) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#548) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).102), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#469, hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).103), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).104), kind: Lit(Spanned { node: Str("XUSR", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#553) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#553) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).132), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#469, hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).133), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).134), kind: Lit(Spanned { node: Str("RWXG", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#558) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#558) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).162), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#469, hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).163), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).164), kind: Lit(Spanned { node: Str("RGRP", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#563) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#563) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).192), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#469, hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).193), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).194), kind: Lit(Spanned { node: Str("WGRP", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#568) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#568) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).222), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#469, hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).223), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).224), kind: Lit(Spanned { node: Str("XGRP", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#573) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#573) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).252), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#469, hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).253), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).254), kind: Lit(Spanned { node: Str("RWXO", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#578) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#578) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).282), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#469, hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).283), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).284), kind: Lit(Spanned { node: Str("ROTH", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#583) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#583) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).312), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#469, hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).313), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).314), kind: Lit(Spanned { node: Str("WOTH", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#588) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#588) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).342), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#469, hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).343), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).344), kind: Lit(Spanned { node: Str("XOTH", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#593) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#593) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).372), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#469, hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).373), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).374), kind: Lit(Spanned { node: Str("SUID", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#598) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#598) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).402), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#469, hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).403), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).404), kind: Lit(Spanned { node: Str("SGID", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#603) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#603) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).432), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#469, hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).433), res: Local(HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name).434), kind: Lit(Spanned { node: Str("SVTX", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#608) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#608) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2095 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2095 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_empty).10), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2095 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_empty).11), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2095 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_empty).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#469), res: Local(HirId(DefId(0:2095 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_empty).7)), segments: [PathSegment { ident: f#469, hir_id: HirId(DefId(0:2095 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_empty).13), res: Local(HirId(DefId(0:2095 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_empty).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:23: 213:29 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:29 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2095 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_empty).14), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:2095 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_empty).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:93:22: 93:29 (#0), res: Def(TyAlias, DefId(0:387 ~ rustix[903e]::backend::fs::types::RawMode)), segments: [PathSegment { ident: RawMode#0, hir_id: HirId(DefId(0:2095 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_empty).16), res: Def(TyAlias, DefId(0:387 ~ rustix[903e]::backend::fs::types::RawMode)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:93:22: 93:29 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#469), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#469, hir_id: HirId(DefId(0:2095 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_empty).17), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#469, hir_id: HirId(DefId(0:2095 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_empty).18), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#469, hir_id: HirId(DefId(0:2095 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_empty).19), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#469) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).10), kind: Binary(Spanned { node: BitOr, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:40: 219:41 (#469) }, Expr { hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#469), res: SelfTyAlias { alias_to: DefId(0:2087 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#469, hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:2087 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#469) }, PathSegment { ident: all#469, hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#469) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#469) }, Expr { hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#469), res: Local(HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#469, hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).21), res: Local(HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#469) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:50 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).22), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#469), res: Local(HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#469, hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).25), res: Local(HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:56: 219:62 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:62 (#469) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#469), res: SelfTyAlias { alias_to: DefId(0:2087 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#469, hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:2087 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#469) }, PathSegment { ident: all#469, hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#469) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#469), res: Local(HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#469, hir_id: HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).21), res: Local(HirId(DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#469) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:30: 223:31 (#469) }, Expr { hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#469), res: Local(HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#469, hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).21), res: Local(HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#469) }, Expr { hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#469), res: Local(HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#469, hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).25), res: Local(HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#469) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:44 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).26), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:93:22: 93:29 (#0), res: Def(TyAlias, DefId(0:387 ~ rustix[903e]::backend::fs::types::RawMode)), segments: [PathSegment { ident: RawMode#0, hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).28), res: Def(TyAlias, DefId(0:387 ~ rustix[903e]::backend::fs::types::RawMode)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:93:22: 93:29 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#469), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#469, hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).29), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#469, hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).30), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#469, hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).31), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#469) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#469), res: Local(HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#469, hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).21), res: Local(HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#469), res: Local(HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#469, hir_id: HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).25), res: Local(HirId(DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#469) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:30: 227:31 (#469) }, Expr { hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#469), res: Local(HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).9)), segments: [PathSegment { ident: f#469, hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).21), res: Local(HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#469) }, Expr { hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#469), res: Local(HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).14)), segments: [PathSegment { ident: other#469, hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).25), res: Local(HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#469) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:44 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).26), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#469), res: Local(HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).14)), segments: [PathSegment { ident: other#469, hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).29), res: Local(HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:54: 227:60 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:60 (#469) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#469), res: Local(HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).9)), segments: [PathSegment { ident: f#469, hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).21), res: Local(HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#469), res: Local(HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).14)), segments: [PathSegment { ident: other#469, hir_id: HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).25), res: Local(HirId(DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#469) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2099 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2104 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::union)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2093 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2100 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2105 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2093 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2101 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2106 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::symmetric_difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2093 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2102 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2099 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2100 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2103 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2093 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2103 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersection).22), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2103 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersection).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2103 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersection).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#469), res: Local(HirId(DefId(0:2103 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersection).9)), segments: [PathSegment { ident: f#469, hir_id: HirId(DefId(0:2103 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersection).25), res: Local(HirId(DefId(0:2103 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersection).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:46: 251:52 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:52 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2103 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersection).26), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2103 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersection).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2103 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersection).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#469), res: Local(HirId(DefId(0:2103 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersection).14)), segments: [PathSegment { ident: other#469, hir_id: HirId(DefId(0:2103 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersection).29), res: Local(HirId(DefId(0:2103 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersection).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:61: 251:67 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:67 (#469) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2104 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2093 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2104 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::union).22), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2104 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::union).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2104 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::union).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#469), res: Local(HirId(DefId(0:2104 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::union).9)), segments: [PathSegment { ident: f#469, hir_id: HirId(DefId(0:2104 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::union).25), res: Local(HirId(DefId(0:2104 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::union).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:46: 255:52 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:52 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2104 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::union).26), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2104 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::union).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2104 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::union).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#469), res: Local(HirId(DefId(0:2104 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::union).14)), segments: [PathSegment { ident: other#469, hir_id: HirId(DefId(0:2104 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::union).29), res: Local(HirId(DefId(0:2104 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::union).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:61: 255:67 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:67 (#469) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2105 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2093 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2105 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::difference).22), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2105 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2105 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#469), res: Local(HirId(DefId(0:2105 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::difference).9)), segments: [PathSegment { ident: f#469, hir_id: HirId(DefId(0:2105 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::difference).25), res: Local(HirId(DefId(0:2105 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:46: 259:52 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:52 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2105 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::difference).26), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:2105 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::difference).27), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2105 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::difference).28), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2105 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::difference).29), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#469), res: Local(HirId(DefId(0:2105 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::difference).14)), segments: [PathSegment { ident: other#469, hir_id: HirId(DefId(0:2105 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::difference).30), res: Local(HirId(DefId(0:2105 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:62: 259:68 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:68 (#469) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:55: 259:68 (#469) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2106 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2093 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2106 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::symmetric_difference).22), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2106 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::symmetric_difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2106 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::symmetric_difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#469), res: Local(HirId(DefId(0:2106 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::symmetric_difference).9)), segments: [PathSegment { ident: f#469, hir_id: HirId(DefId(0:2106 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::symmetric_difference).25), res: Local(HirId(DefId(0:2106 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::symmetric_difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:46: 263:52 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:52 (#469) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2106 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::symmetric_difference).26), kind: MethodCall(PathSegment { ident: bits#469, hir_id: HirId(DefId(0:2106 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::symmetric_difference).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2106 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::symmetric_difference).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#469), res: Local(HirId(DefId(0:2106 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::symmetric_difference).14)), segments: [PathSegment { ident: other#469, hir_id: HirId(DefId(0:2106 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::symmetric_difference).29), res: Local(HirId(DefId(0:2106 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::symmetric_difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#469) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:61: 263:67 (#469)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:67 (#469) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2107 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2092 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2109 ~ rustix[903e]::backend::fs::types::_#2::{impl#17}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2111 ~ rustix[903e]::backend::fs::types::_#2::{impl#18}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2113 ~ rustix[903e]::backend::fs::types::_#2::{impl#19}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2115 ~ rustix[903e]::backend::fs::types::_#2::{impl#20}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2118 ~ rustix[903e]::backend::fs::types::_#2::{impl#21}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2104 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2120 ~ rustix[903e]::backend::fs::types::_#2::{impl#22}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2099 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2123 ~ rustix[903e]::backend::fs::types::_#2::{impl#23}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2106 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2125 ~ rustix[903e]::backend::fs::types::_#2::{impl#24}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2101 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2128 ~ rustix[903e]::backend::fs::types::_#2::{impl#25}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2103 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2130 ~ rustix[903e]::backend::fs::types::_#2::{impl#26}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2103 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2093 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2133 ~ rustix[903e]::backend::fs::types::_#2::{impl#27}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2105 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2135 ~ rustix[903e]::backend::fs::types::_#2::{impl#28}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2100 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2138 ~ rustix[903e]::backend::fs::types::_#2::{impl#29}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2107 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2140 ~ rustix[903e]::backend::fs::types::_#2::{impl#30}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2099 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2143 ~ rustix[903e]::backend::fs::types::_#2::{impl#31}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2088 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2147 ~ rustix[903e]::backend::fs::types::_#2::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2159 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2159 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2148 ~ rustix[903e]::backend::fs::types::_#2::{impl#32}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2159 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2159 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2152 ~ rustix[903e]::backend::fs::types::_#2::{impl#33}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2147 ~ rustix[903e]::backend::fs::types::_#2::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2086 ~ rustix[903e]::backend::fs::types::_#2::{impl#15}::bits_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2154 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2088 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2155 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2089 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2090 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2157 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2091 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2158 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2092 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2159 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2093 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2160 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2094 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2161 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2095 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2162 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2096 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2163 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2097 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2164 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2098 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2165 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2099 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2166 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2100 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2167 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2101 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2168 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2102 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2169 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2103 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2170 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2104 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2171 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2105 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2172 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2106 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2173 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2107 ~ rustix[903e]::backend::fs::types::_#2::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2175 ~ rustix[903e]::backend::fs::types::_#2::{impl#35}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2177 ~ rustix[903e]::backend::fs::types::_#2::{impl#36}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2179 ~ rustix[903e]::backend::fs::types::_#2::{impl#37}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2181 ~ rustix[903e]::backend::fs::types::_#2::{impl#38}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2184 ~ rustix[903e]::backend::fs::types::_#2::{impl#39}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2170 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2186 ~ rustix[903e]::backend::fs::types::_#2::{impl#40}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2165 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2189 ~ rustix[903e]::backend::fs::types::_#2::{impl#41}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2172 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2191 ~ rustix[903e]::backend::fs::types::_#2::{impl#42}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2167 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2194 ~ rustix[903e]::backend::fs::types::_#2::{impl#43}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2169 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2196 ~ rustix[903e]::backend::fs::types::_#2::{impl#44}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2169 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2159 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2199 ~ rustix[903e]::backend::fs::types::_#2::{impl#45}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2171 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2201 ~ rustix[903e]::backend::fs::types::_#2::{impl#46}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2166 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2204 ~ rustix[903e]::backend::fs::types::_#2::{impl#47}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2173 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2206 ~ rustix[903e]::backend::fs::types::_#2::{impl#48}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2165 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2209 ~ rustix[903e]::backend::fs::types::_#2::{impl#49}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2154 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2213 ~ rustix[903e]::backend::fs::types::_#2::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2159 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2159 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2214 ~ rustix[903e]::backend::fs::types::_#2::{impl#50}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2159 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2159 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2218 ~ rustix[903e]::backend::fs::types::_#2::{impl#51}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2213 ~ rustix[903e]::backend::fs::types::_#2::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:355 ~ rustix[903e]::backend::fs::types::{impl#0}::from_raw_mode)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2158 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:355 ~ rustix[903e]::backend::fs::types::{impl#0}::from_raw_mode).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:165:34: 165:41 (#0), res: Local(HirId(DefId(0:355 ~ rustix[903e]::backend::fs::types::{impl#0}::from_raw_mode).2)), segments: [PathSegment { ident: st_mode#0, hir_id: HirId(DefId(0:355 ~ rustix[903e]::backend::fs::types::{impl#0}::from_raw_mode).10), res: Local(HirId(DefId(0:355 ~ rustix[903e]::backend::fs::types::{impl#0}::from_raw_mode).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:165:34: 165:41 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:355 ~ rustix[903e]::backend::fs::types::{impl#0}::from_raw_mode).11), kind: Cast(Expr { hir_id: HirId(DefId(0:355 ~ rustix[903e]::backend::fs::types::{impl#0}::from_raw_mode).12), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:355 ~ rustix[903e]::backend::fs::types::{impl#0}::from_raw_mode).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:165:45: 165:54 (#0), res: Def(Const, DefId(20:1867 ~ libc[9eb8]::unix::bsd::apple::S_IFMT)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:355 ~ rustix[903e]::backend::fs::types::{impl#0}::from_raw_mode).14), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: S_IFMT#0, hir_id: HirId(DefId(0:355 ~ rustix[903e]::backend::fs::types::{impl#0}::from_raw_mode).15), res: Def(Const, DefId(20:1867 ~ libc[9eb8]::unix::bsd::apple::S_IFMT)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:165:45: 165:54 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:165:44: 165:54 (#0) }, Ty { hir_id: HirId(DefId(0:355 ~ rustix[903e]::backend::fs::types::{impl#0}::from_raw_mode).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:165:58: 165:65 (#0), res: Def(TyAlias, DefId(0:387 ~ rustix[903e]::backend::fs::types::RawMode)), segments: [PathSegment { ident: RawMode#0, hir_id: HirId(DefId(0:355 ~ rustix[903e]::backend::fs::types::{impl#0}::from_raw_mode).17), res: Def(TyAlias, DefId(0:387 ~ rustix[903e]::backend::fs::types::RawMode)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:165:58: 165:65 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:165:44: 165:65 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:356 ~ rustix[903e]::backend::fs::types::{impl#0}::as_raw_mode)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2156 ~ rustix[903e]::backend::fs::types::_#2::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:358 ~ rustix[903e]::backend::fs::types::{impl#1}::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:355 ~ rustix[903e]::backend::fs::types::{impl#0}::from_raw_mode)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:360 ~ rustix[903e]::backend::fs::types::{impl#2}::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:356 ~ rustix[903e]::backend::fs::types::{impl#0}::as_raw_mode)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2225 ~ rustix[903e]::backend::fs::types::{impl#32}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2227 ~ rustix[903e]::backend::fs::types::{impl#33}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2230 ~ rustix[903e]::backend::fs::types::{impl#35}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2230 ~ rustix[903e]::backend::fs::types::{impl#35}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:2230 ~ rustix[903e]::backend::fs::types::{impl#35}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:208:31: 208:31 (#621), res: Local(HirId(DefId(0:2230 ~ rustix[903e]::backend::fs::types::{impl#35}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:2230 ~ rustix[903e]::backend::fs::types::{impl#35}::eq).8), res: Local(HirId(DefId(0:2230 ~ rustix[903e]::backend::fs::types::{impl#35}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:208:31: 208:40 (#621) }, 0#617), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#621) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2230 ~ rustix[903e]::backend::fs::types::{impl#35}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:2230 ~ rustix[903e]::backend::fs::types::{impl#35}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:208:31: 208:40 (#621), res: Local(HirId(DefId(0:2230 ~ rustix[903e]::backend::fs::types::{impl#35}::eq).4)), segments: [PathSegment { ident: other#621, hir_id: HirId(DefId(0:2230 ~ rustix[903e]::backend::fs::types::{impl#35}::eq).11), res: Local(HirId(DefId(0:2230 ~ rustix[903e]::backend::fs::types::{impl#35}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:208:31: 208:40 (#621) }, 0#617), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#621) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2232 ~ rustix[903e]::backend::fs::types::{impl#36}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2235 ~ rustix[903e]::backend::fs::types::{impl#37}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2240 ~ rustix[903e]::backend::fs::types::{impl#39}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2241 ~ rustix[903e]::backend::fs::types::{impl#39}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2368 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2263 ~ rustix[903e]::backend::fs::types::_#3::{impl#0}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2267 ~ rustix[903e]::backend::fs::types::_#3::{impl#3}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2267 ~ rustix[903e]::backend::fs::types::_#3::{impl#3}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:2267 ~ rustix[903e]::backend::fs::types::_#3::{impl#3}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:31 (#767), res: Local(HirId(DefId(0:2267 ~ rustix[903e]::backend::fs::types::_#3::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:2267 ~ rustix[903e]::backend::fs::types::_#3::{impl#3}::eq).8), res: Local(HirId(DefId(0:2267 ~ rustix[903e]::backend::fs::types::_#3::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#767) }, 0#764), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#767) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2267 ~ rustix[903e]::backend::fs::types::_#3::{impl#3}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:2267 ~ rustix[903e]::backend::fs::types::_#3::{impl#3}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#767), res: Local(HirId(DefId(0:2267 ~ rustix[903e]::backend::fs::types::_#3::{impl#3}::eq).4)), segments: [PathSegment { ident: other#767, hir_id: HirId(DefId(0:2267 ~ rustix[903e]::backend::fs::types::_#3::{impl#3}::eq).11), res: Local(HirId(DefId(0:2267 ~ rustix[903e]::backend::fs::types::_#3::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#767) }, 0#764), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#767) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2269 ~ rustix[903e]::backend::fs::types::_#3::{impl#4}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2271 ~ rustix[903e]::backend::fs::types::_#3::{impl#5}::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3008 ~ core[7d5a]::cmp::PartialOrd::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2273 ~ rustix[903e]::backend::fs::types::_#3::{impl#6}::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2275 ~ rustix[903e]::backend::fs::types::_#3::{impl#7}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2281 ~ rustix[903e]::backend::fs::types::_#3::{impl#9}::default)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2297 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2283 ~ rustix[903e]::backend::fs::types::_#3::{impl#10}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2304 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11182 ~ core[7d5a]::fmt::{impl#9}::write_fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11123 ~ core[7d5a]::fmt::{impl#2}::new_v1_formatted)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11045 ~ core[7d5a]::fmt::rt::{impl#1}::new_lower_hex)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11026 ~ core[7d5a]::fmt::rt::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11071 ~ core[7d5a]::fmt::rt::{impl#2}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2285 ~ rustix[903e]::backend::fs::types::_#3::{impl#11}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:49 ~ bitflags[64b8]::parser::to_writer)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2288 ~ rustix[903e]::backend::fs::types::_#3::{impl#12}::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:52 ~ bitflags[64b8]::parser::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2291 ~ rustix[903e]::backend::fs::types::_#3::{impl#13}::as_ref)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2293 ~ rustix[903e]::backend::fs::types::_#3::{impl#14}::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2302 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2297 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).37), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).38), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).32)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).40), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).72), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).73), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).74), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).67)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).75), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).67)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).107), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).108), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).109), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).102)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).110), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).102)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).142), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).143), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).144), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).137)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).145), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).137)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).177), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).178), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).179), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).172)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).180), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).172)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).212), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).213), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).214), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).207)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).215), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).207)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).247), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).248), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).249), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).242)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).250), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).242)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).282), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).283), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).284), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).277)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).285), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).277)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).317), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).318), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).319), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).312)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).320), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).312)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).352), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).353), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).354), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).347)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).355), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).347)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).387), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).388), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).389), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).382)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).390), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).382)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).422), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).423), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).424), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).417)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).425), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).417)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).457), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).458), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).459), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).452)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).460), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).452)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).492), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).493), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).494), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).487)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).495), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).487)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).527), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).528), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).529), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).522)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).530), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).522)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).562), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).563), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).564), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).557)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).565), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).557)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).597), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).598), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).599), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).592)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).600), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).592)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).632), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).633), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).634), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).627)), segments: [PathSegment { ident: flag#775, hir_id: HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).635), res: Local(HirId(DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all).627)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2302 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2300 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2301 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_truncate)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2300 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#775), res: Local(HirId(DefId(0:2300 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits).19)), segments: [PathSegment { ident: truncated#775, hir_id: HirId(DefId(0:2300 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits).23), res: Local(HirId(DefId(0:2300 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits).19)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2300 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#775), res: Local(HirId(DefId(0:2300 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits).7)), segments: [PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2300 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits).25), res: Local(HirId(DefId(0:2300 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#775) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2301 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2301 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_truncate).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#775), res: Local(HirId(DefId(0:2301 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_truncate).7)), segments: [PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2301 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_truncate).14), res: Local(HirId(DefId(0:2301 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_truncate).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2301 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_truncate).15), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2301 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_truncate).16), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2301 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_truncate).17), kind: Call(Expr { hir_id: HirId(DefId(0:2301 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_truncate).18), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:2301 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_truncate).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#775), res: SelfTyAlias { alias_to: DefId(0:2296 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#775, hir_id: HirId(DefId(0:2301 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_truncate).19), res: SelfTyAlias { alias_to: DefId(0:2296 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#775) }, PathSegment { ident: all#775, hir_id: HirId(DefId(0:2301 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_truncate).21), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:42 (#775) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:44 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:45: 183:51 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:51 (#775) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2302 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#775, hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).13), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).14), kind: Lit(Spanned { node: Str("ACCMODE", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#885) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#885) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).42), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#775, hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).43), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).44), kind: Lit(Spanned { node: Str("RWMODE", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#895) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#895) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).72), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#775, hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).73), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).74), kind: Lit(Spanned { node: Str("APPEND", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#899) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#899) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).102), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#775, hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).103), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).104), kind: Lit(Spanned { node: Str("CREATE", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#904) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#904) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).132), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#775, hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).133), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).134), kind: Lit(Spanned { node: Str("DIRECTORY", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#909) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#909) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).162), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#775, hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).163), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).164), kind: Lit(Spanned { node: Str("DSYNC", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#914) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#914) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).192), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#775, hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).193), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).194), kind: Lit(Spanned { node: Str("EXCL", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#918) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#918) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).222), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#775, hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).223), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).224), kind: Lit(Spanned { node: Str("FSYNC", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#923) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#923) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).252), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#775, hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).253), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).254), kind: Lit(Spanned { node: Str("NOFOLLOW", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#928) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#928) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).282), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#775, hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).283), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).284), kind: Lit(Spanned { node: Str("NONBLOCK", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#932) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#932) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).312), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#775, hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).313), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).314), kind: Lit(Spanned { node: Str("RDONLY", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#936) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#936) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).342), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#775, hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).343), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).344), kind: Lit(Spanned { node: Str("WRONLY", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#940) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#940) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).372), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#775, hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).373), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).374), kind: Lit(Spanned { node: Str("RDWR", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#946) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#946) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).402), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#775, hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).403), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).404), kind: Lit(Spanned { node: Str("NOCTTY", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#951) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#951) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).432), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#775, hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).433), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).434), kind: Lit(Spanned { node: Str("SYNC", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#960) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#960) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).462), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#775, hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).463), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).464), kind: Lit(Spanned { node: Str("TRUNC", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#964) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#964) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).492), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#775, hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).493), res: Local(HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name).494), kind: Lit(Spanned { node: Str("CLOEXEC", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#972) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#972) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2304 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2304 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_empty).10), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2304 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_empty).11), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2304 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_empty).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#775), res: Local(HirId(DefId(0:2304 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_empty).7)), segments: [PathSegment { ident: f#775, hir_id: HirId(DefId(0:2304 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_empty).13), res: Local(HirId(DefId(0:2304 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_empty).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:23: 213:29 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:29 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2304 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_empty).14), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:2304 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_empty).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:209:24: 209:27 (#0), res: PrimTy(Uint(U32)), segments: [PathSegment { ident: u32#0, hir_id: HirId(DefId(0:2304 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_empty).16), res: PrimTy(Uint(U32)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:209:24: 209:27 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#775), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#775, hir_id: HirId(DefId(0:2304 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_empty).17), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#775, hir_id: HirId(DefId(0:2304 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_empty).18), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#775, hir_id: HirId(DefId(0:2304 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_empty).19), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#775) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).10), kind: Binary(Spanned { node: BitOr, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:40: 219:41 (#775) }, Expr { hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#775), res: SelfTyAlias { alias_to: DefId(0:2296 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#775, hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:2296 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#775) }, PathSegment { ident: all#775, hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#775) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#775) }, Expr { hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#775), res: Local(HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#775, hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).21), res: Local(HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#775) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:50 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).22), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#775), res: Local(HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#775, hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).25), res: Local(HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:56: 219:62 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:62 (#775) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#775), res: SelfTyAlias { alias_to: DefId(0:2296 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#775, hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:2296 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#775) }, PathSegment { ident: all#775, hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#775) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#775), res: Local(HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#775, hir_id: HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).21), res: Local(HirId(DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#775) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:30: 223:31 (#775) }, Expr { hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#775), res: Local(HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#775, hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).21), res: Local(HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#775) }, Expr { hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#775), res: Local(HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#775, hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).25), res: Local(HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#775) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:44 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).26), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:209:24: 209:27 (#0), res: PrimTy(Uint(U32)), segments: [PathSegment { ident: u32#0, hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).28), res: PrimTy(Uint(U32)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:209:24: 209:27 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#775), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#775, hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).29), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#775, hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).30), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#775, hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).31), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#775) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#775), res: Local(HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#775, hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).21), res: Local(HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#775), res: Local(HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#775, hir_id: HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).25), res: Local(HirId(DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#775) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:30: 227:31 (#775) }, Expr { hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#775), res: Local(HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).9)), segments: [PathSegment { ident: f#775, hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).21), res: Local(HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#775) }, Expr { hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#775), res: Local(HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).14)), segments: [PathSegment { ident: other#775, hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).25), res: Local(HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#775) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:44 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).26), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#775), res: Local(HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).14)), segments: [PathSegment { ident: other#775, hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).29), res: Local(HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:54: 227:60 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:60 (#775) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#775), res: Local(HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).9)), segments: [PathSegment { ident: f#775, hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).21), res: Local(HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#775), res: Local(HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).14)), segments: [PathSegment { ident: other#775, hir_id: HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).25), res: Local(HirId(DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#775) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2308 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2313 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::union)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2302 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2309 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2314 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2302 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2310 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2315 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::symmetric_difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2302 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2311 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2308 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2309 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2312 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2302 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2312 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersection).22), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2312 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersection).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2312 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersection).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#775), res: Local(HirId(DefId(0:2312 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersection).9)), segments: [PathSegment { ident: f#775, hir_id: HirId(DefId(0:2312 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersection).25), res: Local(HirId(DefId(0:2312 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersection).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:46: 251:52 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:52 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2312 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersection).26), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2312 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersection).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2312 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersection).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#775), res: Local(HirId(DefId(0:2312 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersection).14)), segments: [PathSegment { ident: other#775, hir_id: HirId(DefId(0:2312 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersection).29), res: Local(HirId(DefId(0:2312 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersection).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:61: 251:67 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:67 (#775) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2313 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2302 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2313 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::union).22), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2313 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::union).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2313 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::union).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#775), res: Local(HirId(DefId(0:2313 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::union).9)), segments: [PathSegment { ident: f#775, hir_id: HirId(DefId(0:2313 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::union).25), res: Local(HirId(DefId(0:2313 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::union).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:46: 255:52 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:52 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2313 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::union).26), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2313 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::union).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2313 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::union).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#775), res: Local(HirId(DefId(0:2313 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::union).14)), segments: [PathSegment { ident: other#775, hir_id: HirId(DefId(0:2313 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::union).29), res: Local(HirId(DefId(0:2313 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::union).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:61: 255:67 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:67 (#775) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2314 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2302 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2314 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::difference).22), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2314 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2314 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#775), res: Local(HirId(DefId(0:2314 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::difference).9)), segments: [PathSegment { ident: f#775, hir_id: HirId(DefId(0:2314 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::difference).25), res: Local(HirId(DefId(0:2314 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:46: 259:52 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:52 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2314 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::difference).26), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:2314 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::difference).27), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2314 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::difference).28), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2314 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::difference).29), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#775), res: Local(HirId(DefId(0:2314 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::difference).14)), segments: [PathSegment { ident: other#775, hir_id: HirId(DefId(0:2314 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::difference).30), res: Local(HirId(DefId(0:2314 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:62: 259:68 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:68 (#775) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:55: 259:68 (#775) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2315 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2302 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2315 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::symmetric_difference).22), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2315 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::symmetric_difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2315 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::symmetric_difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#775), res: Local(HirId(DefId(0:2315 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::symmetric_difference).9)), segments: [PathSegment { ident: f#775, hir_id: HirId(DefId(0:2315 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::symmetric_difference).25), res: Local(HirId(DefId(0:2315 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::symmetric_difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:46: 263:52 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:52 (#775) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2315 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::symmetric_difference).26), kind: MethodCall(PathSegment { ident: bits#775, hir_id: HirId(DefId(0:2315 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::symmetric_difference).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2315 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::symmetric_difference).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#775), res: Local(HirId(DefId(0:2315 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::symmetric_difference).14)), segments: [PathSegment { ident: other#775, hir_id: HirId(DefId(0:2315 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::symmetric_difference).29), res: Local(HirId(DefId(0:2315 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::symmetric_difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#775) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:61: 263:67 (#775)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:67 (#775) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2316 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2301 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2318 ~ rustix[903e]::backend::fs::types::_#3::{impl#17}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2320 ~ rustix[903e]::backend::fs::types::_#3::{impl#18}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2322 ~ rustix[903e]::backend::fs::types::_#3::{impl#19}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2324 ~ rustix[903e]::backend::fs::types::_#3::{impl#20}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2327 ~ rustix[903e]::backend::fs::types::_#3::{impl#21}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2313 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2329 ~ rustix[903e]::backend::fs::types::_#3::{impl#22}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2308 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2332 ~ rustix[903e]::backend::fs::types::_#3::{impl#23}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2315 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2334 ~ rustix[903e]::backend::fs::types::_#3::{impl#24}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2310 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2337 ~ rustix[903e]::backend::fs::types::_#3::{impl#25}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2312 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2339 ~ rustix[903e]::backend::fs::types::_#3::{impl#26}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2312 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2302 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2342 ~ rustix[903e]::backend::fs::types::_#3::{impl#27}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2314 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2344 ~ rustix[903e]::backend::fs::types::_#3::{impl#28}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2309 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2347 ~ rustix[903e]::backend::fs::types::_#3::{impl#29}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2316 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2349 ~ rustix[903e]::backend::fs::types::_#3::{impl#30}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2308 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2352 ~ rustix[903e]::backend::fs::types::_#3::{impl#31}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2297 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2356 ~ rustix[903e]::backend::fs::types::_#3::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2368 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2368 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2357 ~ rustix[903e]::backend::fs::types::_#3::{impl#32}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2368 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2368 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2361 ~ rustix[903e]::backend::fs::types::_#3::{impl#33}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2356 ~ rustix[903e]::backend::fs::types::_#3::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2295 ~ rustix[903e]::backend::fs::types::_#3::{impl#15}::bits_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2363 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2297 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2364 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2298 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2299 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2366 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2300 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2367 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2301 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2368 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2302 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2369 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2303 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2370 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2304 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2371 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2305 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2372 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2306 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2373 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2307 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2374 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2308 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2375 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2309 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2376 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2310 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2377 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2311 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2378 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2312 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2379 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2313 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2380 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2314 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2381 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2315 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2382 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2316 ~ rustix[903e]::backend::fs::types::_#3::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2384 ~ rustix[903e]::backend::fs::types::_#3::{impl#35}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2386 ~ rustix[903e]::backend::fs::types::_#3::{impl#36}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2388 ~ rustix[903e]::backend::fs::types::_#3::{impl#37}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2390 ~ rustix[903e]::backend::fs::types::_#3::{impl#38}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2393 ~ rustix[903e]::backend::fs::types::_#3::{impl#39}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2379 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2395 ~ rustix[903e]::backend::fs::types::_#3::{impl#40}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2374 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2398 ~ rustix[903e]::backend::fs::types::_#3::{impl#41}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2381 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2400 ~ rustix[903e]::backend::fs::types::_#3::{impl#42}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2376 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2403 ~ rustix[903e]::backend::fs::types::_#3::{impl#43}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2378 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2405 ~ rustix[903e]::backend::fs::types::_#3::{impl#44}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2378 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2368 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2408 ~ rustix[903e]::backend::fs::types::_#3::{impl#45}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2380 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2410 ~ rustix[903e]::backend::fs::types::_#3::{impl#46}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2375 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2413 ~ rustix[903e]::backend::fs::types::_#3::{impl#47}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2382 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2415 ~ rustix[903e]::backend::fs::types::_#3::{impl#48}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2374 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2418 ~ rustix[903e]::backend::fs::types::_#3::{impl#49}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2363 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2422 ~ rustix[903e]::backend::fs::types::_#3::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2368 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2368 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2423 ~ rustix[903e]::backend::fs::types::_#3::{impl#50}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2368 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2368 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2365 ~ rustix[903e]::backend::fs::types::_#3::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2427 ~ rustix[903e]::backend::fs::types::_#3::{impl#51}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2422 ~ rustix[903e]::backend::fs::types::_#3::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2434 ~ rustix[903e]::backend::fs::types::{impl#41}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2436 ~ rustix[903e]::backend::fs::types::{impl#42}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2439 ~ rustix[903e]::backend::fs::types::{impl#44}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2439 ~ rustix[903e]::backend::fs::types::{impl#44}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:2439 ~ rustix[903e]::backend::fs::types::{impl#44}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:351:31: 351:31 (#1013), res: Local(HirId(DefId(0:2439 ~ rustix[903e]::backend::fs::types::{impl#44}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:2439 ~ rustix[903e]::backend::fs::types::{impl#44}::eq).8), res: Local(HirId(DefId(0:2439 ~ rustix[903e]::backend::fs::types::{impl#44}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:351:31: 351:40 (#1013) }, 0#1009), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#1013) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2439 ~ rustix[903e]::backend::fs::types::{impl#44}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:2439 ~ rustix[903e]::backend::fs::types::{impl#44}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:351:31: 351:40 (#1013), res: Local(HirId(DefId(0:2439 ~ rustix[903e]::backend::fs::types::{impl#44}::eq).4)), segments: [PathSegment { ident: other#1013, hir_id: HirId(DefId(0:2439 ~ rustix[903e]::backend::fs::types::{impl#44}::eq).11), res: Local(HirId(DefId(0:2439 ~ rustix[903e]::backend::fs::types::{impl#44}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:351:31: 351:40 (#1013) }, 0#1009), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#1013) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2441 ~ rustix[903e]::backend::fs::types::{impl#45}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2444 ~ rustix[903e]::backend::fs::types::{impl#46}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2449 ~ rustix[903e]::backend::fs::types::{impl#48}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2559 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2450 ~ rustix[903e]::backend::fs::types::{impl#48}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2562 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2457 ~ rustix[903e]::backend::fs::types::_#4::{impl#0}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2461 ~ rustix[903e]::backend::fs::types::_#4::{impl#3}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2461 ~ rustix[903e]::backend::fs::types::_#4::{impl#3}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:2461 ~ rustix[903e]::backend::fs::types::_#4::{impl#3}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:31 (#1031), res: Local(HirId(DefId(0:2461 ~ rustix[903e]::backend::fs::types::_#4::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:2461 ~ rustix[903e]::backend::fs::types::_#4::{impl#3}::eq).8), res: Local(HirId(DefId(0:2461 ~ rustix[903e]::backend::fs::types::_#4::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1031) }, 0#1028), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#1031) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2461 ~ rustix[903e]::backend::fs::types::_#4::{impl#3}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:2461 ~ rustix[903e]::backend::fs::types::_#4::{impl#3}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1031), res: Local(HirId(DefId(0:2461 ~ rustix[903e]::backend::fs::types::_#4::{impl#3}::eq).4)), segments: [PathSegment { ident: other#1031, hir_id: HirId(DefId(0:2461 ~ rustix[903e]::backend::fs::types::_#4::{impl#3}::eq).11), res: Local(HirId(DefId(0:2461 ~ rustix[903e]::backend::fs::types::_#4::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1031) }, 0#1028), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#1031) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2463 ~ rustix[903e]::backend::fs::types::_#4::{impl#4}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2465 ~ rustix[903e]::backend::fs::types::_#4::{impl#5}::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3008 ~ core[7d5a]::cmp::PartialOrd::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2467 ~ rustix[903e]::backend::fs::types::_#4::{impl#6}::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2469 ~ rustix[903e]::backend::fs::types::_#4::{impl#7}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2475 ~ rustix[903e]::backend::fs::types::_#4::{impl#9}::default)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2491 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2477 ~ rustix[903e]::backend::fs::types::_#4::{impl#10}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2498 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11182 ~ core[7d5a]::fmt::{impl#9}::write_fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11123 ~ core[7d5a]::fmt::{impl#2}::new_v1_formatted)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11045 ~ core[7d5a]::fmt::rt::{impl#1}::new_lower_hex)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11026 ~ core[7d5a]::fmt::rt::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11071 ~ core[7d5a]::fmt::rt::{impl#2}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2479 ~ rustix[903e]::backend::fs::types::_#4::{impl#11}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:49 ~ bitflags[64b8]::parser::to_writer)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2482 ~ rustix[903e]::backend::fs::types::_#4::{impl#12}::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:52 ~ bitflags[64b8]::parser::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2485 ~ rustix[903e]::backend::fs::types::_#4::{impl#13}::as_ref)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2487 ~ rustix[903e]::backend::fs::types::_#4::{impl#14}::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2496 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2491 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2559 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).37), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1039), res: Local(HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#1039, hir_id: HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).38), res: Local(HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1039), res: Local(HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).32)), segments: [PathSegment { ident: flag#1039, hir_id: HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).40), res: Local(HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1039) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2559 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).72), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1039), res: Local(HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#1039, hir_id: HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).73), res: Local(HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).74), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1039), res: Local(HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).67)), segments: [PathSegment { ident: flag#1039, hir_id: HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).75), res: Local(HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).67)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1039) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2559 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).107), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1039), res: Local(HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#1039, hir_id: HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).108), res: Local(HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).109), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1039), res: Local(HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).102)), segments: [PathSegment { ident: flag#1039, hir_id: HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).110), res: Local(HirId(DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all).102)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1039) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2496 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2494 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2495 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_truncate)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2494 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#1039), res: Local(HirId(DefId(0:2494 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits).19)), segments: [PathSegment { ident: truncated#1039, hir_id: HirId(DefId(0:2494 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits).23), res: Local(HirId(DefId(0:2494 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits).19)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2494 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#1039), res: Local(HirId(DefId(0:2494 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits).7)), segments: [PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2494 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits).25), res: Local(HirId(DefId(0:2494 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#1039) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2495 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2495 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_truncate).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#1039), res: Local(HirId(DefId(0:2495 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_truncate).7)), segments: [PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2495 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_truncate).14), res: Local(HirId(DefId(0:2495 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_truncate).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2495 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_truncate).15), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2495 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_truncate).16), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2495 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_truncate).17), kind: Call(Expr { hir_id: HirId(DefId(0:2495 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_truncate).18), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:2495 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_truncate).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#1039), res: SelfTyAlias { alias_to: DefId(0:2490 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1039, hir_id: HirId(DefId(0:2495 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_truncate).19), res: SelfTyAlias { alias_to: DefId(0:2490 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#1039) }, PathSegment { ident: all#1039, hir_id: HirId(DefId(0:2495 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_truncate).21), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:42 (#1039) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:44 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:45: 183:51 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:51 (#1039) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2496 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2497 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2497 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_name).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1039), res: Local(HirId(DefId(0:2497 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#1039, hir_id: HirId(DefId(0:2497 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_name).13), res: Local(HirId(DefId(0:2497 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2497 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_name).14), kind: Lit(Spanned { node: Str("NOFOLLOW", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1053) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1053) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2559 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2497 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_name).42), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1039), res: Local(HirId(DefId(0:2497 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#1039, hir_id: HirId(DefId(0:2497 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_name).43), res: Local(HirId(DefId(0:2497 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2497 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_name).44), kind: Lit(Spanned { node: Str("NOOWNERCOPY", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1057) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1057) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2559 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2498 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2498 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_empty).10), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2498 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_empty).11), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2498 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_empty).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#1039), res: Local(HirId(DefId(0:2498 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_empty).7)), segments: [PathSegment { ident: f#1039, hir_id: HirId(DefId(0:2498 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_empty).13), res: Local(HirId(DefId(0:2498 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_empty).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:23: 213:29 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:29 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2498 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_empty).14), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:2498 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_empty).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:352:28: 352:31 (#0), res: PrimTy(Uint(U32)), segments: [PathSegment { ident: u32#0, hir_id: HirId(DefId(0:2498 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_empty).16), res: PrimTy(Uint(U32)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:352:28: 352:31 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#1039), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#1039, hir_id: HirId(DefId(0:2498 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_empty).17), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#1039, hir_id: HirId(DefId(0:2498 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_empty).18), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#1039, hir_id: HirId(DefId(0:2498 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_empty).19), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#1039) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).10), kind: Binary(Spanned { node: BitOr, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:40: 219:41 (#1039) }, Expr { hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1039), res: SelfTyAlias { alias_to: DefId(0:2490 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1039, hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:2490 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1039) }, PathSegment { ident: all#1039, hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#1039) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#1039) }, Expr { hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1039), res: Local(HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1039, hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).21), res: Local(HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#1039) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:50 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).22), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#1039), res: Local(HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1039, hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).25), res: Local(HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:56: 219:62 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:62 (#1039) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1039), res: SelfTyAlias { alias_to: DefId(0:2490 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1039, hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:2490 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1039) }, PathSegment { ident: all#1039, hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#1039) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1039), res: Local(HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1039, hir_id: HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).21), res: Local(HirId(DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#1039) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:30: 223:31 (#1039) }, Expr { hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1039), res: Local(HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#1039, hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).21), res: Local(HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#1039) }, Expr { hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1039), res: Local(HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#1039, hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).25), res: Local(HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#1039) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:44 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).26), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:352:28: 352:31 (#0), res: PrimTy(Uint(U32)), segments: [PathSegment { ident: u32#0, hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).28), res: PrimTy(Uint(U32)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:352:28: 352:31 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#1039), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#1039, hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).29), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#1039, hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).30), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#1039, hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).31), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#1039) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1039), res: Local(HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#1039, hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).21), res: Local(HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1039), res: Local(HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#1039, hir_id: HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).25), res: Local(HirId(DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#1039) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:30: 227:31 (#1039) }, Expr { hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1039), res: Local(HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).9)), segments: [PathSegment { ident: f#1039, hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).21), res: Local(HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#1039) }, Expr { hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1039), res: Local(HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1039, hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).25), res: Local(HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#1039) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:44 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).26), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#1039), res: Local(HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1039, hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).29), res: Local(HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:54: 227:60 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:60 (#1039) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1039), res: Local(HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).9)), segments: [PathSegment { ident: f#1039, hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).21), res: Local(HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1039), res: Local(HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1039, hir_id: HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).25), res: Local(HirId(DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#1039) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2502 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2507 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::union)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2496 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2503 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2508 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2496 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2504 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2509 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::symmetric_difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2496 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2505 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2502 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2503 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2506 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2496 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2506 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersection).22), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2506 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersection).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2506 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersection).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#1039), res: Local(HirId(DefId(0:2506 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersection).9)), segments: [PathSegment { ident: f#1039, hir_id: HirId(DefId(0:2506 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersection).25), res: Local(HirId(DefId(0:2506 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersection).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:46: 251:52 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:52 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2506 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersection).26), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2506 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersection).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2506 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersection).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#1039), res: Local(HirId(DefId(0:2506 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersection).14)), segments: [PathSegment { ident: other#1039, hir_id: HirId(DefId(0:2506 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersection).29), res: Local(HirId(DefId(0:2506 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersection).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:61: 251:67 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:67 (#1039) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2507 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2496 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2507 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::union).22), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2507 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::union).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2507 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::union).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#1039), res: Local(HirId(DefId(0:2507 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::union).9)), segments: [PathSegment { ident: f#1039, hir_id: HirId(DefId(0:2507 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::union).25), res: Local(HirId(DefId(0:2507 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::union).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:46: 255:52 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:52 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2507 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::union).26), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2507 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::union).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2507 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::union).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#1039), res: Local(HirId(DefId(0:2507 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::union).14)), segments: [PathSegment { ident: other#1039, hir_id: HirId(DefId(0:2507 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::union).29), res: Local(HirId(DefId(0:2507 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::union).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:61: 255:67 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:67 (#1039) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2508 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2496 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2508 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::difference).22), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2508 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2508 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#1039), res: Local(HirId(DefId(0:2508 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::difference).9)), segments: [PathSegment { ident: f#1039, hir_id: HirId(DefId(0:2508 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::difference).25), res: Local(HirId(DefId(0:2508 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:46: 259:52 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:52 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2508 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::difference).26), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:2508 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::difference).27), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2508 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::difference).28), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2508 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::difference).29), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#1039), res: Local(HirId(DefId(0:2508 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::difference).14)), segments: [PathSegment { ident: other#1039, hir_id: HirId(DefId(0:2508 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::difference).30), res: Local(HirId(DefId(0:2508 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:62: 259:68 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:68 (#1039) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:55: 259:68 (#1039) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2509 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2496 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2509 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::symmetric_difference).22), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2509 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::symmetric_difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2509 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::symmetric_difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#1039), res: Local(HirId(DefId(0:2509 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::symmetric_difference).9)), segments: [PathSegment { ident: f#1039, hir_id: HirId(DefId(0:2509 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::symmetric_difference).25), res: Local(HirId(DefId(0:2509 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::symmetric_difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:46: 263:52 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:52 (#1039) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2509 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::symmetric_difference).26), kind: MethodCall(PathSegment { ident: bits#1039, hir_id: HirId(DefId(0:2509 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::symmetric_difference).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2509 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::symmetric_difference).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#1039), res: Local(HirId(DefId(0:2509 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::symmetric_difference).14)), segments: [PathSegment { ident: other#1039, hir_id: HirId(DefId(0:2509 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::symmetric_difference).29), res: Local(HirId(DefId(0:2509 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::symmetric_difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#1039) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:61: 263:67 (#1039)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:67 (#1039) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2510 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2495 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2512 ~ rustix[903e]::backend::fs::types::_#4::{impl#17}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2514 ~ rustix[903e]::backend::fs::types::_#4::{impl#18}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2516 ~ rustix[903e]::backend::fs::types::_#4::{impl#19}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2518 ~ rustix[903e]::backend::fs::types::_#4::{impl#20}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2521 ~ rustix[903e]::backend::fs::types::_#4::{impl#21}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2507 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2523 ~ rustix[903e]::backend::fs::types::_#4::{impl#22}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2502 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2526 ~ rustix[903e]::backend::fs::types::_#4::{impl#23}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2509 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2528 ~ rustix[903e]::backend::fs::types::_#4::{impl#24}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2504 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2531 ~ rustix[903e]::backend::fs::types::_#4::{impl#25}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2506 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2533 ~ rustix[903e]::backend::fs::types::_#4::{impl#26}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2506 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2496 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2536 ~ rustix[903e]::backend::fs::types::_#4::{impl#27}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2508 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2538 ~ rustix[903e]::backend::fs::types::_#4::{impl#28}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2503 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2541 ~ rustix[903e]::backend::fs::types::_#4::{impl#29}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2510 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2543 ~ rustix[903e]::backend::fs::types::_#4::{impl#30}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2502 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2546 ~ rustix[903e]::backend::fs::types::_#4::{impl#31}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2491 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2550 ~ rustix[903e]::backend::fs::types::_#4::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2562 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2562 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2551 ~ rustix[903e]::backend::fs::types::_#4::{impl#32}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2562 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2562 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2555 ~ rustix[903e]::backend::fs::types::_#4::{impl#33}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2550 ~ rustix[903e]::backend::fs::types::_#4::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2489 ~ rustix[903e]::backend::fs::types::_#4::{impl#15}::bits_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2557 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2491 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2558 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2492 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2559 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2493 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2560 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2494 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2561 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2495 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2562 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2496 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2563 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2497 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2564 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2498 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2565 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2499 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2566 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2500 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2567 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2501 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2568 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2502 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2569 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2503 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2570 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2504 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2571 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2505 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2572 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2506 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2573 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2507 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2574 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2508 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2575 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2509 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2576 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2510 ~ rustix[903e]::backend::fs::types::_#4::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2578 ~ rustix[903e]::backend::fs::types::_#4::{impl#35}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2580 ~ rustix[903e]::backend::fs::types::_#4::{impl#36}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2582 ~ rustix[903e]::backend::fs::types::_#4::{impl#37}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2584 ~ rustix[903e]::backend::fs::types::_#4::{impl#38}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2587 ~ rustix[903e]::backend::fs::types::_#4::{impl#39}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2573 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2589 ~ rustix[903e]::backend::fs::types::_#4::{impl#40}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2568 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2592 ~ rustix[903e]::backend::fs::types::_#4::{impl#41}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2575 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2594 ~ rustix[903e]::backend::fs::types::_#4::{impl#42}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2570 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2597 ~ rustix[903e]::backend::fs::types::_#4::{impl#43}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2572 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2599 ~ rustix[903e]::backend::fs::types::_#4::{impl#44}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2572 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2562 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2559 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2602 ~ rustix[903e]::backend::fs::types::_#4::{impl#45}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2574 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2604 ~ rustix[903e]::backend::fs::types::_#4::{impl#46}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2569 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2607 ~ rustix[903e]::backend::fs::types::_#4::{impl#47}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2576 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2609 ~ rustix[903e]::backend::fs::types::_#4::{impl#48}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2568 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2612 ~ rustix[903e]::backend::fs::types::_#4::{impl#49}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2557 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2616 ~ rustix[903e]::backend::fs::types::_#4::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2562 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2559 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2562 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2559 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2617 ~ rustix[903e]::backend::fs::types::_#4::{impl#50}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2562 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2559 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2562 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2559 ~ rustix[903e]::backend::fs::types::_#4::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2621 ~ rustix[903e]::backend::fs::types::_#4::{impl#51}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2616 ~ rustix[903e]::backend::fs::types::_#4::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2628 ~ rustix[903e]::backend::fs::types::{impl#50}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2630 ~ rustix[903e]::backend::fs::types::{impl#51}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2633 ~ rustix[903e]::backend::fs::types::{impl#53}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2633 ~ rustix[903e]::backend::fs::types::{impl#53}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:2633 ~ rustix[903e]::backend::fs::types::{impl#53}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:381:31: 381:31 (#1070), res: Local(HirId(DefId(0:2633 ~ rustix[903e]::backend::fs::types::{impl#53}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:2633 ~ rustix[903e]::backend::fs::types::{impl#53}::eq).8), res: Local(HirId(DefId(0:2633 ~ rustix[903e]::backend::fs::types::{impl#53}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:381:31: 381:40 (#1070) }, 0#1066), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#1070) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2633 ~ rustix[903e]::backend::fs::types::{impl#53}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:2633 ~ rustix[903e]::backend::fs::types::{impl#53}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:381:31: 381:40 (#1070), res: Local(HirId(DefId(0:2633 ~ rustix[903e]::backend::fs::types::{impl#53}::eq).4)), segments: [PathSegment { ident: other#1070, hir_id: HirId(DefId(0:2633 ~ rustix[903e]::backend::fs::types::{impl#53}::eq).11), res: Local(HirId(DefId(0:2633 ~ rustix[903e]::backend::fs::types::{impl#53}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:381:31: 381:40 (#1070) }, 0#1066), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#1070) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2635 ~ rustix[903e]::backend::fs::types::{impl#54}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2638 ~ rustix[903e]::backend::fs::types::{impl#55}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2643 ~ rustix[903e]::backend::fs::types::{impl#57}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2644 ~ rustix[903e]::backend::fs::types::{impl#57}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2761 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2656 ~ rustix[903e]::backend::fs::types::_#5::{impl#0}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2660 ~ rustix[903e]::backend::fs::types::_#5::{impl#3}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2660 ~ rustix[903e]::backend::fs::types::_#5::{impl#3}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:2660 ~ rustix[903e]::backend::fs::types::_#5::{impl#3}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:31 (#1108), res: Local(HirId(DefId(0:2660 ~ rustix[903e]::backend::fs::types::_#5::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:2660 ~ rustix[903e]::backend::fs::types::_#5::{impl#3}::eq).8), res: Local(HirId(DefId(0:2660 ~ rustix[903e]::backend::fs::types::_#5::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1108) }, 0#1105), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#1108) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2660 ~ rustix[903e]::backend::fs::types::_#5::{impl#3}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:2660 ~ rustix[903e]::backend::fs::types::_#5::{impl#3}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1108), res: Local(HirId(DefId(0:2660 ~ rustix[903e]::backend::fs::types::_#5::{impl#3}::eq).4)), segments: [PathSegment { ident: other#1108, hir_id: HirId(DefId(0:2660 ~ rustix[903e]::backend::fs::types::_#5::{impl#3}::eq).11), res: Local(HirId(DefId(0:2660 ~ rustix[903e]::backend::fs::types::_#5::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1108) }, 0#1105), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#1108) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2662 ~ rustix[903e]::backend::fs::types::_#5::{impl#4}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2664 ~ rustix[903e]::backend::fs::types::_#5::{impl#5}::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3008 ~ core[7d5a]::cmp::PartialOrd::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2666 ~ rustix[903e]::backend::fs::types::_#5::{impl#6}::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2668 ~ rustix[903e]::backend::fs::types::_#5::{impl#7}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2674 ~ rustix[903e]::backend::fs::types::_#5::{impl#9}::default)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2690 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2676 ~ rustix[903e]::backend::fs::types::_#5::{impl#10}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2697 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11182 ~ core[7d5a]::fmt::{impl#9}::write_fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11123 ~ core[7d5a]::fmt::{impl#2}::new_v1_formatted)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11045 ~ core[7d5a]::fmt::rt::{impl#1}::new_lower_hex)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11026 ~ core[7d5a]::fmt::rt::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11071 ~ core[7d5a]::fmt::rt::{impl#2}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2678 ~ rustix[903e]::backend::fs::types::_#5::{impl#11}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:49 ~ bitflags[64b8]::parser::to_writer)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2681 ~ rustix[903e]::backend::fs::types::_#5::{impl#12}::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:52 ~ bitflags[64b8]::parser::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2684 ~ rustix[903e]::backend::fs::types::_#5::{impl#13}::as_ref)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2686 ~ rustix[903e]::backend::fs::types::_#5::{impl#14}::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2695 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2690 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).38), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1116), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).11)), segments: [PathSegment { ident: truncated#1116, hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).39), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).11)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).40), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1116), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).33)), segments: [PathSegment { ident: flag#1116, hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).41), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).33)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1116) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).73), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1116), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).11)), segments: [PathSegment { ident: truncated#1116, hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).74), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).11)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).75), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1116), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).68)), segments: [PathSegment { ident: flag#1116, hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).76), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).68)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1116) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).108), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1116), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).11)), segments: [PathSegment { ident: truncated#1116, hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).109), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).11)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).110), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1116), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).103)), segments: [PathSegment { ident: flag#1116, hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).111), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).103)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1116) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).143), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1116), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).11)), segments: [PathSegment { ident: truncated#1116, hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).144), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).11)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).145), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1116), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).138)), segments: [PathSegment { ident: flag#1116, hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).146), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).138)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1116) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).178), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1116), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).11)), segments: [PathSegment { ident: truncated#1116, hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).179), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).11)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).180), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1116), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).173)), segments: [PathSegment { ident: flag#1116, hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).181), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).173)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1116) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).213), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1116), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).11)), segments: [PathSegment { ident: truncated#1116, hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).214), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).11)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).215), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1116), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).208)), segments: [PathSegment { ident: flag#1116, hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).216), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).208)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1116) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).248), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1116), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).11)), segments: [PathSegment { ident: truncated#1116, hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).249), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).11)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).250), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1116), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).243)), segments: [PathSegment { ident: flag#1116, hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).251), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).243)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1116) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).283), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1116), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).11)), segments: [PathSegment { ident: truncated#1116, hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).284), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).11)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).285), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1116), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).278)), segments: [PathSegment { ident: flag#1116, hir_id: HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).286), res: Local(HirId(DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all).278)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1116) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2695 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2693 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2694 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_truncate)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2693 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#1116), res: Local(HirId(DefId(0:2693 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits).19)), segments: [PathSegment { ident: truncated#1116, hir_id: HirId(DefId(0:2693 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits).23), res: Local(HirId(DefId(0:2693 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits).19)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2693 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#1116), res: Local(HirId(DefId(0:2693 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits).7)), segments: [PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2693 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits).25), res: Local(HirId(DefId(0:2693 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#1116) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2694 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2694 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_truncate).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#1116), res: Local(HirId(DefId(0:2694 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_truncate).7)), segments: [PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2694 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_truncate).14), res: Local(HirId(DefId(0:2694 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_truncate).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2694 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_truncate).15), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2694 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_truncate).16), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2694 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_truncate).17), kind: Call(Expr { hir_id: HirId(DefId(0:2694 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_truncate).18), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:2694 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_truncate).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#1116), res: SelfTyAlias { alias_to: DefId(0:2689 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1116, hir_id: HirId(DefId(0:2694 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_truncate).19), res: SelfTyAlias { alias_to: DefId(0:2689 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#1116) }, PathSegment { ident: all#1116, hir_id: HirId(DefId(0:2694 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_truncate).21), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:42 (#1116) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:44 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:45: 183:51 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:51 (#1116) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2695 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1116), res: Local(HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#1116, hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).13), res: Local(HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).14), kind: Lit(Spanned { node: Str("ACL", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1145) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1145) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).42), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1116), res: Local(HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#1116, hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).43), res: Local(HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).44), kind: Lit(Spanned { node: Str("STAT", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1149) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1149) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).72), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1116), res: Local(HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#1116, hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).73), res: Local(HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).74), kind: Lit(Spanned { node: Str("XATTR", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1153) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1153) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).102), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1116), res: Local(HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#1116, hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).103), res: Local(HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).104), kind: Lit(Spanned { node: Str("DATA", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1157) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1157) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).132), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1116), res: Local(HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#1116, hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).133), res: Local(HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).134), kind: Lit(Spanned { node: Str("SECURITY", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1161) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1161) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).162), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1116), res: Local(HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#1116, hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).163), res: Local(HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).164), kind: Lit(Spanned { node: Str("METADATA", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1165) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1165) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).192), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1116), res: Local(HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#1116, hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).193), res: Local(HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name).194), kind: Lit(Spanned { node: Str("ALL", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1169) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1169) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2697 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2697 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_empty).10), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2697 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_empty).11), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2697 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_empty).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#1116), res: Local(HirId(DefId(0:2697 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_empty).7)), segments: [PathSegment { ident: f#1116, hir_id: HirId(DefId(0:2697 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_empty).13), res: Local(HirId(DefId(0:2697 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_empty).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:23: 213:29 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:29 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2697 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_empty).14), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:2697 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_empty).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:382:31: 382:40 (#0), res: Def(TyAlias, DefId(20:45 ~ libc[9eb8]::unix::c_uint)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:2697 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_empty).16), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: false }, PathSegment { ident: c_uint#0, hir_id: HirId(DefId(0:2697 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_empty).17), res: Def(TyAlias, DefId(20:45 ~ libc[9eb8]::unix::c_uint)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:382:31: 382:40 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#1116), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#1116, hir_id: HirId(DefId(0:2697 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_empty).18), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#1116, hir_id: HirId(DefId(0:2697 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_empty).19), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#1116, hir_id: HirId(DefId(0:2697 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_empty).20), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#1116) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).10), kind: Binary(Spanned { node: BitOr, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:40: 219:41 (#1116) }, Expr { hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1116), res: SelfTyAlias { alias_to: DefId(0:2689 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1116, hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:2689 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1116) }, PathSegment { ident: all#1116, hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#1116) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#1116) }, Expr { hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1116), res: Local(HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1116, hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).21), res: Local(HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#1116) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:50 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).22), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#1116), res: Local(HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1116, hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).25), res: Local(HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:56: 219:62 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:62 (#1116) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1116), res: SelfTyAlias { alias_to: DefId(0:2689 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1116, hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:2689 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1116) }, PathSegment { ident: all#1116, hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#1116) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1116), res: Local(HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1116, hir_id: HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).21), res: Local(HirId(DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#1116) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:30: 223:31 (#1116) }, Expr { hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1116), res: Local(HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#1116, hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).21), res: Local(HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#1116) }, Expr { hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1116), res: Local(HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#1116, hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).25), res: Local(HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#1116) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:44 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).26), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:382:31: 382:40 (#0), res: Def(TyAlias, DefId(20:45 ~ libc[9eb8]::unix::c_uint)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).28), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: false }, PathSegment { ident: c_uint#0, hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).29), res: Def(TyAlias, DefId(20:45 ~ libc[9eb8]::unix::c_uint)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:382:31: 382:40 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#1116), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#1116, hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).30), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#1116, hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).31), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#1116, hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).32), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#1116) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1116), res: Local(HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#1116, hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).21), res: Local(HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1116), res: Local(HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#1116, hir_id: HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).25), res: Local(HirId(DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#1116) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:30: 227:31 (#1116) }, Expr { hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1116), res: Local(HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).9)), segments: [PathSegment { ident: f#1116, hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).21), res: Local(HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#1116) }, Expr { hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1116), res: Local(HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1116, hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).25), res: Local(HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#1116) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:44 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).26), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#1116), res: Local(HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1116, hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).29), res: Local(HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:54: 227:60 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:60 (#1116) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1116), res: Local(HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).9)), segments: [PathSegment { ident: f#1116, hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).21), res: Local(HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1116), res: Local(HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1116, hir_id: HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).25), res: Local(HirId(DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#1116) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2701 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2706 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::union)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2695 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2702 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2707 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2695 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2703 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2708 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::symmetric_difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2695 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2704 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2701 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2702 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2705 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2695 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2705 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersection).22), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2705 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersection).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2705 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersection).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#1116), res: Local(HirId(DefId(0:2705 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersection).9)), segments: [PathSegment { ident: f#1116, hir_id: HirId(DefId(0:2705 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersection).25), res: Local(HirId(DefId(0:2705 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersection).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:46: 251:52 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:52 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2705 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersection).26), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2705 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersection).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2705 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersection).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#1116), res: Local(HirId(DefId(0:2705 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersection).14)), segments: [PathSegment { ident: other#1116, hir_id: HirId(DefId(0:2705 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersection).29), res: Local(HirId(DefId(0:2705 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersection).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:61: 251:67 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:67 (#1116) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2706 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2695 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2706 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::union).22), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2706 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::union).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2706 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::union).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#1116), res: Local(HirId(DefId(0:2706 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::union).9)), segments: [PathSegment { ident: f#1116, hir_id: HirId(DefId(0:2706 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::union).25), res: Local(HirId(DefId(0:2706 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::union).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:46: 255:52 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:52 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2706 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::union).26), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2706 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::union).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2706 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::union).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#1116), res: Local(HirId(DefId(0:2706 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::union).14)), segments: [PathSegment { ident: other#1116, hir_id: HirId(DefId(0:2706 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::union).29), res: Local(HirId(DefId(0:2706 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::union).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:61: 255:67 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:67 (#1116) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2707 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2695 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2707 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::difference).22), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2707 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2707 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#1116), res: Local(HirId(DefId(0:2707 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::difference).9)), segments: [PathSegment { ident: f#1116, hir_id: HirId(DefId(0:2707 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::difference).25), res: Local(HirId(DefId(0:2707 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:46: 259:52 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:52 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2707 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::difference).26), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:2707 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::difference).27), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2707 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::difference).28), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2707 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::difference).29), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#1116), res: Local(HirId(DefId(0:2707 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::difference).14)), segments: [PathSegment { ident: other#1116, hir_id: HirId(DefId(0:2707 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::difference).30), res: Local(HirId(DefId(0:2707 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:62: 259:68 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:68 (#1116) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:55: 259:68 (#1116) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2708 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2695 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2708 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::symmetric_difference).22), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2708 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::symmetric_difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2708 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::symmetric_difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#1116), res: Local(HirId(DefId(0:2708 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::symmetric_difference).9)), segments: [PathSegment { ident: f#1116, hir_id: HirId(DefId(0:2708 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::symmetric_difference).25), res: Local(HirId(DefId(0:2708 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::symmetric_difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:46: 263:52 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:52 (#1116) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2708 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::symmetric_difference).26), kind: MethodCall(PathSegment { ident: bits#1116, hir_id: HirId(DefId(0:2708 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::symmetric_difference).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2708 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::symmetric_difference).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#1116), res: Local(HirId(DefId(0:2708 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::symmetric_difference).14)), segments: [PathSegment { ident: other#1116, hir_id: HirId(DefId(0:2708 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::symmetric_difference).29), res: Local(HirId(DefId(0:2708 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::symmetric_difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#1116) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:61: 263:67 (#1116)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:67 (#1116) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2709 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2694 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2711 ~ rustix[903e]::backend::fs::types::_#5::{impl#17}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2713 ~ rustix[903e]::backend::fs::types::_#5::{impl#18}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2715 ~ rustix[903e]::backend::fs::types::_#5::{impl#19}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2717 ~ rustix[903e]::backend::fs::types::_#5::{impl#20}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2720 ~ rustix[903e]::backend::fs::types::_#5::{impl#21}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2706 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2722 ~ rustix[903e]::backend::fs::types::_#5::{impl#22}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2701 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2725 ~ rustix[903e]::backend::fs::types::_#5::{impl#23}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2708 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2727 ~ rustix[903e]::backend::fs::types::_#5::{impl#24}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2703 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2730 ~ rustix[903e]::backend::fs::types::_#5::{impl#25}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2705 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2732 ~ rustix[903e]::backend::fs::types::_#5::{impl#26}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2705 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2695 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2735 ~ rustix[903e]::backend::fs::types::_#5::{impl#27}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2707 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2737 ~ rustix[903e]::backend::fs::types::_#5::{impl#28}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2702 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2740 ~ rustix[903e]::backend::fs::types::_#5::{impl#29}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2709 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2742 ~ rustix[903e]::backend::fs::types::_#5::{impl#30}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2701 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2745 ~ rustix[903e]::backend::fs::types::_#5::{impl#31}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2690 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2749 ~ rustix[903e]::backend::fs::types::_#5::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2761 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2761 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2750 ~ rustix[903e]::backend::fs::types::_#5::{impl#32}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2761 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2761 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2754 ~ rustix[903e]::backend::fs::types::_#5::{impl#33}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2749 ~ rustix[903e]::backend::fs::types::_#5::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2688 ~ rustix[903e]::backend::fs::types::_#5::{impl#15}::bits_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2756 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2690 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2757 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2691 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2692 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2759 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2693 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2760 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2694 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2761 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2695 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2762 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2696 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2763 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2697 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2764 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2698 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2765 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2699 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2766 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2700 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2767 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2701 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2768 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2702 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2769 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2703 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2770 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2704 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2771 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2705 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2772 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2706 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2773 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2707 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2774 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2708 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2775 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2709 ~ rustix[903e]::backend::fs::types::_#5::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2777 ~ rustix[903e]::backend::fs::types::_#5::{impl#35}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2779 ~ rustix[903e]::backend::fs::types::_#5::{impl#36}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2781 ~ rustix[903e]::backend::fs::types::_#5::{impl#37}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2783 ~ rustix[903e]::backend::fs::types::_#5::{impl#38}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2786 ~ rustix[903e]::backend::fs::types::_#5::{impl#39}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2772 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2788 ~ rustix[903e]::backend::fs::types::_#5::{impl#40}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2767 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2791 ~ rustix[903e]::backend::fs::types::_#5::{impl#41}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2774 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2793 ~ rustix[903e]::backend::fs::types::_#5::{impl#42}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2769 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2796 ~ rustix[903e]::backend::fs::types::_#5::{impl#43}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2771 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2798 ~ rustix[903e]::backend::fs::types::_#5::{impl#44}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2771 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2761 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2801 ~ rustix[903e]::backend::fs::types::_#5::{impl#45}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2773 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2803 ~ rustix[903e]::backend::fs::types::_#5::{impl#46}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2768 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2806 ~ rustix[903e]::backend::fs::types::_#5::{impl#47}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2775 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2808 ~ rustix[903e]::backend::fs::types::_#5::{impl#48}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2767 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2811 ~ rustix[903e]::backend::fs::types::_#5::{impl#49}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2756 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2815 ~ rustix[903e]::backend::fs::types::_#5::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2761 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2761 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2816 ~ rustix[903e]::backend::fs::types::_#5::{impl#50}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2761 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2761 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2758 ~ rustix[903e]::backend::fs::types::_#5::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2820 ~ rustix[903e]::backend::fs::types::_#5::{impl#51}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2815 ~ rustix[903e]::backend::fs::types::_#5::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2846 ~ rustix[903e]::backend::fs::types::{impl#58}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2849 ~ rustix[903e]::backend::fs::types::{impl#60}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11181 ~ core[7d5a]::fmt::{impl#9}::write_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2852 ~ rustix[903e]::backend::fs::types::{impl#62}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2852 ~ rustix[903e]::backend::fs::types::{impl#62}::eq).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:466:30: 466:39 (#1180), res: Local(HirId(DefId(0:2852 ~ rustix[903e]::backend::fs::types::{impl#62}::eq).14)), segments: [PathSegment { ident: __self_discr#1180, hir_id: HirId(DefId(0:2852 ~ rustix[903e]::backend::fs::types::{impl#62}::eq).27), res: Local(HirId(DefId(0:2852 ~ rustix[903e]::backend::fs::types::{impl#62}::eq).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:466:30: 466:39 (#1180) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2852 ~ rustix[903e]::backend::fs::types::{impl#62}::eq).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:466:30: 466:39 (#1180), res: Local(HirId(DefId(0:2852 ~ rustix[903e]::backend::fs::types::{impl#62}::eq).24)), segments: [PathSegment { ident: __arg1_discr#1180, hir_id: HirId(DefId(0:2852 ~ rustix[903e]::backend::fs::types::{impl#62}::eq).29), res: Local(HirId(DefId(0:2852 ~ rustix[903e]::backend::fs::types::{impl#62}::eq).24)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:466:30: 466:39 (#1180) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2854 ~ rustix[903e]::backend::fs::types::{impl#63}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:370 ~ rustix[903e]::backend::fs::types::{impl#3}::from_raw_mode)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:370 ~ rustix[903e]::backend::fs::types::{impl#3}::from_raw_mode).5), kind: Cast(Expr { hir_id: HirId(DefId(0:370 ~ rustix[903e]::backend::fs::types::{impl#3}::from_raw_mode).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:501:16: 501:23 (#0), res: Local(HirId(DefId(0:370 ~ rustix[903e]::backend::fs::types::{impl#3}::from_raw_mode).2)), segments: [PathSegment { ident: st_mode#0, hir_id: HirId(DefId(0:370 ~ rustix[903e]::backend::fs::types::{impl#3}::from_raw_mode).7), res: Local(HirId(DefId(0:370 ~ rustix[903e]::backend::fs::types::{impl#3}::from_raw_mode).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:501:16: 501:23 (#0) }, Ty { hir_id: HirId(DefId(0:370 ~ rustix[903e]::backend::fs::types::{impl#3}::from_raw_mode).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:501:27: 501:36 (#0), res: Def(TyAlias, DefId(20:1561 ~ libc[9eb8]::unix::bsd::apple::mode_t)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:370 ~ rustix[903e]::backend::fs::types::{impl#3}::from_raw_mode).9), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: false }, PathSegment { ident: mode_t#0, hir_id: HirId(DefId(0:370 ~ rustix[903e]::backend::fs::types::{impl#3}::from_raw_mode).10), res: Def(TyAlias, DefId(20:1561 ~ libc[9eb8]::unix::bsd::apple::mode_t)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:501:27: 501:36 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:501:15: 501:37 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:370 ~ rustix[903e]::backend::fs::types::{impl#3}::from_raw_mode).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:501:40: 501:49 (#0), res: Def(Const, DefId(20:1867 ~ libc[9eb8]::unix::bsd::apple::S_IFMT)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:370 ~ rustix[903e]::backend::fs::types::{impl#3}::from_raw_mode).12), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: true }, PathSegment { ident: S_IFMT#0, hir_id: HirId(DefId(0:370 ~ rustix[903e]::backend::fs::types::{impl#3}::from_raw_mode).13), res: Def(Const, DefId(20:1867 ~ libc[9eb8]::unix::bsd::apple::S_IFMT)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:501:40: 501:49 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:371 ~ rustix[903e]::backend::fs::types::{impl#3}::as_raw_mode)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:372 ~ rustix[903e]::backend::fs::types::{impl#3}::from_dirent_d_type)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2861 ~ rustix[903e]::backend::fs::types::{impl#65}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2863 ~ rustix[903e]::backend::fs::types::{impl#66}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2866 ~ rustix[903e]::backend::fs::types::{impl#68}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2866 ~ rustix[903e]::backend::fs::types::{impl#68}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:2866 ~ rustix[903e]::backend::fs::types::{impl#68}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:810:31: 810:31 (#1187), res: Local(HirId(DefId(0:2866 ~ rustix[903e]::backend::fs::types::{impl#68}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:2866 ~ rustix[903e]::backend::fs::types::{impl#68}::eq).8), res: Local(HirId(DefId(0:2866 ~ rustix[903e]::backend::fs::types::{impl#68}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:810:31: 810:40 (#1187) }, 0#1183), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#1187) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2866 ~ rustix[903e]::backend::fs::types::{impl#68}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:2866 ~ rustix[903e]::backend::fs::types::{impl#68}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:810:31: 810:40 (#1187), res: Local(HirId(DefId(0:2866 ~ rustix[903e]::backend::fs::types::{impl#68}::eq).4)), segments: [PathSegment { ident: other#1187, hir_id: HirId(DefId(0:2866 ~ rustix[903e]::backend::fs::types::{impl#68}::eq).11), res: Local(HirId(DefId(0:2866 ~ rustix[903e]::backend::fs::types::{impl#68}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:810:31: 810:40 (#1187) }, 0#1183), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#1187) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2868 ~ rustix[903e]::backend::fs::types::{impl#69}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2871 ~ rustix[903e]::backend::fs::types::{impl#70}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2876 ~ rustix[903e]::backend::fs::types::{impl#72}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2984 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::bits)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2877 ~ rustix[903e]::backend::fs::types::{impl#72}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2987 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2882 ~ rustix[903e]::backend::fs::types::_#6::{impl#0}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2886 ~ rustix[903e]::backend::fs::types::_#6::{impl#3}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2886 ~ rustix[903e]::backend::fs::types::_#6::{impl#3}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:2886 ~ rustix[903e]::backend::fs::types::_#6::{impl#3}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:31 (#1225), res: Local(HirId(DefId(0:2886 ~ rustix[903e]::backend::fs::types::_#6::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:2886 ~ rustix[903e]::backend::fs::types::_#6::{impl#3}::eq).8), res: Local(HirId(DefId(0:2886 ~ rustix[903e]::backend::fs::types::_#6::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1225) }, 0#1222), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#1225) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2886 ~ rustix[903e]::backend::fs::types::_#6::{impl#3}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:2886 ~ rustix[903e]::backend::fs::types::_#6::{impl#3}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1225), res: Local(HirId(DefId(0:2886 ~ rustix[903e]::backend::fs::types::_#6::{impl#3}::eq).4)), segments: [PathSegment { ident: other#1225, hir_id: HirId(DefId(0:2886 ~ rustix[903e]::backend::fs::types::_#6::{impl#3}::eq).11), res: Local(HirId(DefId(0:2886 ~ rustix[903e]::backend::fs::types::_#6::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1225) }, 0#1222), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#1225) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2888 ~ rustix[903e]::backend::fs::types::_#6::{impl#4}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2890 ~ rustix[903e]::backend::fs::types::_#6::{impl#5}::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3008 ~ core[7d5a]::cmp::PartialOrd::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2892 ~ rustix[903e]::backend::fs::types::_#6::{impl#6}::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2894 ~ rustix[903e]::backend::fs::types::_#6::{impl#7}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2900 ~ rustix[903e]::backend::fs::types::_#6::{impl#9}::default)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2916 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2902 ~ rustix[903e]::backend::fs::types::_#6::{impl#10}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2923 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11182 ~ core[7d5a]::fmt::{impl#9}::write_fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11123 ~ core[7d5a]::fmt::{impl#2}::new_v1_formatted)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11045 ~ core[7d5a]::fmt::rt::{impl#1}::new_lower_hex)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11026 ~ core[7d5a]::fmt::rt::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11071 ~ core[7d5a]::fmt::rt::{impl#2}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2904 ~ rustix[903e]::backend::fs::types::_#6::{impl#11}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:49 ~ bitflags[64b8]::parser::to_writer)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2907 ~ rustix[903e]::backend::fs::types::_#6::{impl#12}::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:52 ~ bitflags[64b8]::parser::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2910 ~ rustix[903e]::backend::fs::types::_#6::{impl#13}::as_ref)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2912 ~ rustix[903e]::backend::fs::types::_#6::{impl#14}::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2921 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2916 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2917 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2984 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2917 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::all).37), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1233), res: Local(HirId(DefId(0:2917 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#1233, hir_id: HirId(DefId(0:2917 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::all).38), res: Local(HirId(DefId(0:2917 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1233) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2917 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::all).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1233), res: Local(HirId(DefId(0:2917 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::all).32)), segments: [PathSegment { ident: flag#1233, hir_id: HirId(DefId(0:2917 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::all).40), res: Local(HirId(DefId(0:2917 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::all).32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1233) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2921 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2919 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2920 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_truncate)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2919 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#1233), res: Local(HirId(DefId(0:2919 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits).19)), segments: [PathSegment { ident: truncated#1233, hir_id: HirId(DefId(0:2919 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits).23), res: Local(HirId(DefId(0:2919 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits).19)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#1233) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2919 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#1233), res: Local(HirId(DefId(0:2919 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits).7)), segments: [PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2919 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits).25), res: Local(HirId(DefId(0:2919 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#1233) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2920 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2920 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_truncate).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#1233), res: Local(HirId(DefId(0:2920 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_truncate).7)), segments: [PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2920 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_truncate).14), res: Local(HirId(DefId(0:2920 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_truncate).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#1233) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2920 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_truncate).15), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2920 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_truncate).16), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2920 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_truncate).17), kind: Call(Expr { hir_id: HirId(DefId(0:2920 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_truncate).18), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:2920 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_truncate).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#1233), res: SelfTyAlias { alias_to: DefId(0:2915 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1233, hir_id: HirId(DefId(0:2920 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_truncate).19), res: SelfTyAlias { alias_to: DefId(0:2915 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#1233) }, PathSegment { ident: all#1233, hir_id: HirId(DefId(0:2920 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_truncate).21), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:42 (#1233) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:44 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:45: 183:51 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:51 (#1233) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2917 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2921 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2922 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2923 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2923 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_empty).10), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2923 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_empty).11), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2923 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_empty).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#1233), res: Local(HirId(DefId(0:2923 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_empty).7)), segments: [PathSegment { ident: f#1233, hir_id: HirId(DefId(0:2923 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_empty).13), res: Local(HirId(DefId(0:2923 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_empty).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:23: 213:29 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:29 (#1233) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2923 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_empty).14), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:2923 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_empty).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:811:32: 811:35 (#0), res: PrimTy(Uint(U32)), segments: [PathSegment { ident: u32#0, hir_id: HirId(DefId(0:2923 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_empty).16), res: PrimTy(Uint(U32)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:811:32: 811:35 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#1233), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#1233, hir_id: HirId(DefId(0:2923 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_empty).17), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#1233, hir_id: HirId(DefId(0:2923 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_empty).18), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#1233, hir_id: HirId(DefId(0:2923 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_empty).19), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#1233) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).10), kind: Binary(Spanned { node: BitOr, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:40: 219:41 (#1233) }, Expr { hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1233), res: SelfTyAlias { alias_to: DefId(0:2915 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1233, hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:2915 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1233) }, PathSegment { ident: all#1233, hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#1233) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#1233) }, Expr { hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1233), res: Local(HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1233, hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).21), res: Local(HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#1233) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:50 (#1233) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).22), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#1233), res: Local(HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1233, hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).25), res: Local(HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:56: 219:62 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:62 (#1233) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1233), res: SelfTyAlias { alias_to: DefId(0:2915 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1233, hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:2915 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1233) }, PathSegment { ident: all#1233, hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#1233) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#1233) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1233), res: Local(HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1233, hir_id: HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).21), res: Local(HirId(DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#1233) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2917 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:30: 223:31 (#1233) }, Expr { hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1233), res: Local(HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#1233, hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).21), res: Local(HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#1233) }, Expr { hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1233), res: Local(HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#1233, hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).25), res: Local(HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#1233) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:44 (#1233) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).26), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:811:32: 811:35 (#0), res: PrimTy(Uint(U32)), segments: [PathSegment { ident: u32#0, hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).28), res: PrimTy(Uint(U32)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:811:32: 811:35 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#1233), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#1233, hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).29), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#1233, hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).30), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#1233, hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).31), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#1233) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1233), res: Local(HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#1233, hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).21), res: Local(HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#1233) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1233), res: Local(HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#1233, hir_id: HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).25), res: Local(HirId(DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#1233) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:30: 227:31 (#1233) }, Expr { hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1233), res: Local(HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).9)), segments: [PathSegment { ident: f#1233, hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).21), res: Local(HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#1233) }, Expr { hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1233), res: Local(HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1233, hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).25), res: Local(HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#1233) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:44 (#1233) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).26), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#1233), res: Local(HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1233, hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).29), res: Local(HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:54: 227:60 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:60 (#1233) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1233), res: Local(HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).9)), segments: [PathSegment { ident: f#1233, hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).21), res: Local(HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#1233) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1233), res: Local(HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1233, hir_id: HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).25), res: Local(HirId(DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#1233) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2927 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2932 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::union)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2921 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2928 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2933 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2921 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2929 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2934 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::symmetric_difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:2921 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2930 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2927 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2928 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2931 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2921 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2931 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersection).22), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2931 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersection).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2931 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersection).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#1233), res: Local(HirId(DefId(0:2931 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersection).9)), segments: [PathSegment { ident: f#1233, hir_id: HirId(DefId(0:2931 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersection).25), res: Local(HirId(DefId(0:2931 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersection).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:46: 251:52 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:52 (#1233) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2931 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersection).26), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2931 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersection).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2931 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersection).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#1233), res: Local(HirId(DefId(0:2931 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersection).14)), segments: [PathSegment { ident: other#1233, hir_id: HirId(DefId(0:2931 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersection).29), res: Local(HirId(DefId(0:2931 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersection).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:61: 251:67 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:67 (#1233) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2932 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2921 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2932 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::union).22), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2932 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::union).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2932 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::union).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#1233), res: Local(HirId(DefId(0:2932 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::union).9)), segments: [PathSegment { ident: f#1233, hir_id: HirId(DefId(0:2932 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::union).25), res: Local(HirId(DefId(0:2932 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::union).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:46: 255:52 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:52 (#1233) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2932 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::union).26), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2932 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::union).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2932 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::union).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#1233), res: Local(HirId(DefId(0:2932 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::union).14)), segments: [PathSegment { ident: other#1233, hir_id: HirId(DefId(0:2932 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::union).29), res: Local(HirId(DefId(0:2932 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::union).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:61: 255:67 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:67 (#1233) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2933 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2921 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2933 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::difference).22), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2933 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2933 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#1233), res: Local(HirId(DefId(0:2933 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::difference).9)), segments: [PathSegment { ident: f#1233, hir_id: HirId(DefId(0:2933 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::difference).25), res: Local(HirId(DefId(0:2933 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:46: 259:52 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:52 (#1233) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2933 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::difference).26), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:2933 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::difference).27), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2933 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::difference).28), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2933 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::difference).29), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#1233), res: Local(HirId(DefId(0:2933 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::difference).14)), segments: [PathSegment { ident: other#1233, hir_id: HirId(DefId(0:2933 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::difference).30), res: Local(HirId(DefId(0:2933 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:62: 259:68 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:68 (#1233) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:55: 259:68 (#1233) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2934 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2921 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:2934 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::symmetric_difference).22), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2934 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::symmetric_difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2934 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::symmetric_difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#1233), res: Local(HirId(DefId(0:2934 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::symmetric_difference).9)), segments: [PathSegment { ident: f#1233, hir_id: HirId(DefId(0:2934 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::symmetric_difference).25), res: Local(HirId(DefId(0:2934 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::symmetric_difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:46: 263:52 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:52 (#1233) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:2934 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::symmetric_difference).26), kind: MethodCall(PathSegment { ident: bits#1233, hir_id: HirId(DefId(0:2934 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::symmetric_difference).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:2934 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::symmetric_difference).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#1233), res: Local(HirId(DefId(0:2934 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::symmetric_difference).14)), segments: [PathSegment { ident: other#1233, hir_id: HirId(DefId(0:2934 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::symmetric_difference).29), res: Local(HirId(DefId(0:2934 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::symmetric_difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#1233) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:61: 263:67 (#1233)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:67 (#1233) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2935 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2920 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2937 ~ rustix[903e]::backend::fs::types::_#6::{impl#17}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2939 ~ rustix[903e]::backend::fs::types::_#6::{impl#18}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2941 ~ rustix[903e]::backend::fs::types::_#6::{impl#19}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2943 ~ rustix[903e]::backend::fs::types::_#6::{impl#20}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2946 ~ rustix[903e]::backend::fs::types::_#6::{impl#21}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2932 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2948 ~ rustix[903e]::backend::fs::types::_#6::{impl#22}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2927 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2951 ~ rustix[903e]::backend::fs::types::_#6::{impl#23}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2934 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2953 ~ rustix[903e]::backend::fs::types::_#6::{impl#24}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2929 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2956 ~ rustix[903e]::backend::fs::types::_#6::{impl#25}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2931 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2958 ~ rustix[903e]::backend::fs::types::_#6::{impl#26}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2931 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2921 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2961 ~ rustix[903e]::backend::fs::types::_#6::{impl#27}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2933 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2963 ~ rustix[903e]::backend::fs::types::_#6::{impl#28}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2928 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2966 ~ rustix[903e]::backend::fs::types::_#6::{impl#29}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2935 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2968 ~ rustix[903e]::backend::fs::types::_#6::{impl#30}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2927 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2971 ~ rustix[903e]::backend::fs::types::_#6::{impl#31}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2916 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2975 ~ rustix[903e]::backend::fs::types::_#6::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2987 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2987 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2976 ~ rustix[903e]::backend::fs::types::_#6::{impl#32}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2987 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2987 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2980 ~ rustix[903e]::backend::fs::types::_#6::{impl#33}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2975 ~ rustix[903e]::backend::fs::types::_#6::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2914 ~ rustix[903e]::backend::fs::types::_#6::{impl#15}::bits_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2982 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2916 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2983 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2917 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2984 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2918 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2985 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2919 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2986 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2920 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2987 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2921 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2988 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2922 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2989 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2923 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2990 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2924 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2991 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2925 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2992 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2926 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2993 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2927 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2994 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2928 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2995 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2929 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2996 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2930 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2997 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2931 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2998 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2932 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2999 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2933 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3000 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2934 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3001 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2935 ~ rustix[903e]::backend::fs::types::_#6::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3003 ~ rustix[903e]::backend::fs::types::_#6::{impl#35}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3005 ~ rustix[903e]::backend::fs::types::_#6::{impl#36}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3007 ~ rustix[903e]::backend::fs::types::_#6::{impl#37}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3009 ~ rustix[903e]::backend::fs::types::_#6::{impl#38}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3012 ~ rustix[903e]::backend::fs::types::_#6::{impl#39}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2998 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3014 ~ rustix[903e]::backend::fs::types::_#6::{impl#40}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2993 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3017 ~ rustix[903e]::backend::fs::types::_#6::{impl#41}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3000 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3019 ~ rustix[903e]::backend::fs::types::_#6::{impl#42}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2995 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3022 ~ rustix[903e]::backend::fs::types::_#6::{impl#43}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2997 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3024 ~ rustix[903e]::backend::fs::types::_#6::{impl#44}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2997 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2987 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2984 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3027 ~ rustix[903e]::backend::fs::types::_#6::{impl#45}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2999 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3029 ~ rustix[903e]::backend::fs::types::_#6::{impl#46}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2994 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3032 ~ rustix[903e]::backend::fs::types::_#6::{impl#47}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3001 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3034 ~ rustix[903e]::backend::fs::types::_#6::{impl#48}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2993 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3037 ~ rustix[903e]::backend::fs::types::_#6::{impl#49}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2982 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3041 ~ rustix[903e]::backend::fs::types::_#6::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2987 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2984 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2987 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2984 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3042 ~ rustix[903e]::backend::fs::types::_#6::{impl#50}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2987 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2984 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:2987 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:2984 ~ rustix[903e]::backend::fs::types::_#6::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3046 ~ rustix[903e]::backend::fs::types::_#6::{impl#51}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3041 ~ rustix[903e]::backend::fs::types::_#6::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3053 ~ rustix[903e]::backend::fs::types::{impl#74}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3055 ~ rustix[903e]::backend::fs::types::{impl#75}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3058 ~ rustix[903e]::backend::fs::types::{impl#77}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3058 ~ rustix[903e]::backend::fs::types::{impl#77}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:3058 ~ rustix[903e]::backend::fs::types::{impl#77}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:900:31: 900:31 (#1306), res: Local(HirId(DefId(0:3058 ~ rustix[903e]::backend::fs::types::{impl#77}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:3058 ~ rustix[903e]::backend::fs::types::{impl#77}::eq).8), res: Local(HirId(DefId(0:3058 ~ rustix[903e]::backend::fs::types::{impl#77}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:900:31: 900:40 (#1306) }, 0#1302), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#1306) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3058 ~ rustix[903e]::backend::fs::types::{impl#77}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:3058 ~ rustix[903e]::backend::fs::types::{impl#77}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:900:31: 900:40 (#1306), res: Local(HirId(DefId(0:3058 ~ rustix[903e]::backend::fs::types::{impl#77}::eq).4)), segments: [PathSegment { ident: other#1306, hir_id: HirId(DefId(0:3058 ~ rustix[903e]::backend::fs::types::{impl#77}::eq).11), res: Local(HirId(DefId(0:3058 ~ rustix[903e]::backend::fs::types::{impl#77}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:900:31: 900:40 (#1306) }, 0#1302), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#1306) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3060 ~ rustix[903e]::backend::fs::types::{impl#78}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3063 ~ rustix[903e]::backend::fs::types::{impl#79}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3068 ~ rustix[903e]::backend::fs::types::{impl#81}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3178 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::bits)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3069 ~ rustix[903e]::backend::fs::types::{impl#81}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3181 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3076 ~ rustix[903e]::backend::fs::types::_#7::{impl#0}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3080 ~ rustix[903e]::backend::fs::types::_#7::{impl#3}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3080 ~ rustix[903e]::backend::fs::types::_#7::{impl#3}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:3080 ~ rustix[903e]::backend::fs::types::_#7::{impl#3}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:31 (#1354), res: Local(HirId(DefId(0:3080 ~ rustix[903e]::backend::fs::types::_#7::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:3080 ~ rustix[903e]::backend::fs::types::_#7::{impl#3}::eq).8), res: Local(HirId(DefId(0:3080 ~ rustix[903e]::backend::fs::types::_#7::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1354) }, 0#1351), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#1354) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3080 ~ rustix[903e]::backend::fs::types::_#7::{impl#3}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:3080 ~ rustix[903e]::backend::fs::types::_#7::{impl#3}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1354), res: Local(HirId(DefId(0:3080 ~ rustix[903e]::backend::fs::types::_#7::{impl#3}::eq).4)), segments: [PathSegment { ident: other#1354, hir_id: HirId(DefId(0:3080 ~ rustix[903e]::backend::fs::types::_#7::{impl#3}::eq).11), res: Local(HirId(DefId(0:3080 ~ rustix[903e]::backend::fs::types::_#7::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1354) }, 0#1351), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#1354) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3082 ~ rustix[903e]::backend::fs::types::_#7::{impl#4}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3084 ~ rustix[903e]::backend::fs::types::_#7::{impl#5}::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3008 ~ core[7d5a]::cmp::PartialOrd::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3086 ~ rustix[903e]::backend::fs::types::_#7::{impl#6}::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3088 ~ rustix[903e]::backend::fs::types::_#7::{impl#7}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3094 ~ rustix[903e]::backend::fs::types::_#7::{impl#9}::default)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3110 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3096 ~ rustix[903e]::backend::fs::types::_#7::{impl#10}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3117 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11182 ~ core[7d5a]::fmt::{impl#9}::write_fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11123 ~ core[7d5a]::fmt::{impl#2}::new_v1_formatted)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11045 ~ core[7d5a]::fmt::rt::{impl#1}::new_lower_hex)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11026 ~ core[7d5a]::fmt::rt::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11071 ~ core[7d5a]::fmt::rt::{impl#2}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3098 ~ rustix[903e]::backend::fs::types::_#7::{impl#11}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:49 ~ bitflags[64b8]::parser::to_writer)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3101 ~ rustix[903e]::backend::fs::types::_#7::{impl#12}::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:52 ~ bitflags[64b8]::parser::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3104 ~ rustix[903e]::backend::fs::types::_#7::{impl#13}::as_ref)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3106 ~ rustix[903e]::backend::fs::types::_#7::{impl#14}::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3115 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3110 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3178 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).37), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1362), res: Local(HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#1362, hir_id: HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).38), res: Local(HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1362), res: Local(HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).32)), segments: [PathSegment { ident: flag#1362, hir_id: HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).40), res: Local(HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1362) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3178 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).72), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1362), res: Local(HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#1362, hir_id: HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).73), res: Local(HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).74), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1362), res: Local(HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).67)), segments: [PathSegment { ident: flag#1362, hir_id: HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).75), res: Local(HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).67)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1362) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3178 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).107), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1362), res: Local(HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#1362, hir_id: HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).108), res: Local(HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).109), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1362), res: Local(HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).102)), segments: [PathSegment { ident: flag#1362, hir_id: HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).110), res: Local(HirId(DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all).102)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1362) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3115 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3113 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3114 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_truncate)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3113 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#1362), res: Local(HirId(DefId(0:3113 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits).19)), segments: [PathSegment { ident: truncated#1362, hir_id: HirId(DefId(0:3113 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits).23), res: Local(HirId(DefId(0:3113 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits).19)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3113 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#1362), res: Local(HirId(DefId(0:3113 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits).7)), segments: [PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3113 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits).25), res: Local(HirId(DefId(0:3113 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#1362) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3114 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3114 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_truncate).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#1362), res: Local(HirId(DefId(0:3114 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_truncate).7)), segments: [PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3114 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_truncate).14), res: Local(HirId(DefId(0:3114 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_truncate).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3114 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_truncate).15), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3114 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_truncate).16), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3114 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_truncate).17), kind: Call(Expr { hir_id: HirId(DefId(0:3114 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_truncate).18), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:3114 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_truncate).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#1362), res: SelfTyAlias { alias_to: DefId(0:3109 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1362, hir_id: HirId(DefId(0:3114 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_truncate).19), res: SelfTyAlias { alias_to: DefId(0:3109 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#1362) }, PathSegment { ident: all#1362, hir_id: HirId(DefId(0:3114 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_truncate).21), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:42 (#1362) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:44 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:45: 183:51 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:51 (#1362) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3115 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3116 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3116 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_name).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1362), res: Local(HirId(DefId(0:3116 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#1362, hir_id: HirId(DefId(0:3116 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_name).13), res: Local(HirId(DefId(0:3116 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3116 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_name).14), kind: Lit(Spanned { node: Str("NOSUID", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1427) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1427) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3178 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3116 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_name).42), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1362), res: Local(HirId(DefId(0:3116 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#1362, hir_id: HirId(DefId(0:3116 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_name).43), res: Local(HirId(DefId(0:3116 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3116 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_name).44), kind: Lit(Spanned { node: Str("RDONLY", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1432) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1432) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3178 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3117 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3117 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_empty).10), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3117 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_empty).11), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3117 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_empty).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#1362), res: Local(HirId(DefId(0:3117 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_empty).7)), segments: [PathSegment { ident: f#1362, hir_id: HirId(DefId(0:3117 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_empty).13), res: Local(HirId(DefId(0:3117 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_empty).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:23: 213:29 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:29 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3117 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_empty).14), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:3117 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_empty).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:901:35: 901:38 (#0), res: PrimTy(Uint(U64)), segments: [PathSegment { ident: u64#0, hir_id: HirId(DefId(0:3117 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_empty).16), res: PrimTy(Uint(U64)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:901:35: 901:38 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#1362), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#1362, hir_id: HirId(DefId(0:3117 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_empty).17), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#1362, hir_id: HirId(DefId(0:3117 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_empty).18), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#1362, hir_id: HirId(DefId(0:3117 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_empty).19), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#1362) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).10), kind: Binary(Spanned { node: BitOr, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:40: 219:41 (#1362) }, Expr { hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1362), res: SelfTyAlias { alias_to: DefId(0:3109 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1362, hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:3109 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1362) }, PathSegment { ident: all#1362, hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#1362) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#1362) }, Expr { hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1362), res: Local(HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1362, hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).21), res: Local(HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#1362) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:50 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).22), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#1362), res: Local(HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1362, hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).25), res: Local(HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:56: 219:62 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:62 (#1362) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1362), res: SelfTyAlias { alias_to: DefId(0:3109 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1362, hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:3109 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1362) }, PathSegment { ident: all#1362, hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#1362) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1362), res: Local(HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1362, hir_id: HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).21), res: Local(HirId(DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#1362) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:30: 223:31 (#1362) }, Expr { hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1362), res: Local(HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#1362, hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).21), res: Local(HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#1362) }, Expr { hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1362), res: Local(HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#1362, hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).25), res: Local(HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#1362) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:44 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).26), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:901:35: 901:38 (#0), res: PrimTy(Uint(U64)), segments: [PathSegment { ident: u64#0, hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).28), res: PrimTy(Uint(U64)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:901:35: 901:38 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#1362), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#1362, hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).29), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#1362, hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).30), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#1362, hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).31), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#1362) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1362), res: Local(HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#1362, hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).21), res: Local(HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1362), res: Local(HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#1362, hir_id: HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).25), res: Local(HirId(DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#1362) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:30: 227:31 (#1362) }, Expr { hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1362), res: Local(HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).9)), segments: [PathSegment { ident: f#1362, hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).21), res: Local(HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#1362) }, Expr { hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1362), res: Local(HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1362, hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).25), res: Local(HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#1362) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:44 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).26), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#1362), res: Local(HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1362, hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).29), res: Local(HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:54: 227:60 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:60 (#1362) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1362), res: Local(HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).9)), segments: [PathSegment { ident: f#1362, hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).21), res: Local(HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1362), res: Local(HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1362, hir_id: HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).25), res: Local(HirId(DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#1362) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3121 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3126 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::union)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:3115 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3122 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3127 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:3115 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3123 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3128 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::symmetric_difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:3115 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3124 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3121 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3122 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3125 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3115 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3125 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersection).22), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3125 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersection).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3125 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersection).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#1362), res: Local(HirId(DefId(0:3125 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersection).9)), segments: [PathSegment { ident: f#1362, hir_id: HirId(DefId(0:3125 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersection).25), res: Local(HirId(DefId(0:3125 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersection).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:46: 251:52 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:52 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3125 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersection).26), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3125 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersection).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3125 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersection).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#1362), res: Local(HirId(DefId(0:3125 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersection).14)), segments: [PathSegment { ident: other#1362, hir_id: HirId(DefId(0:3125 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersection).29), res: Local(HirId(DefId(0:3125 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersection).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:61: 251:67 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:67 (#1362) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3126 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3115 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3126 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::union).22), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3126 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::union).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3126 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::union).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#1362), res: Local(HirId(DefId(0:3126 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::union).9)), segments: [PathSegment { ident: f#1362, hir_id: HirId(DefId(0:3126 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::union).25), res: Local(HirId(DefId(0:3126 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::union).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:46: 255:52 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:52 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3126 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::union).26), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3126 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::union).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3126 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::union).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#1362), res: Local(HirId(DefId(0:3126 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::union).14)), segments: [PathSegment { ident: other#1362, hir_id: HirId(DefId(0:3126 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::union).29), res: Local(HirId(DefId(0:3126 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::union).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:61: 255:67 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:67 (#1362) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3127 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3115 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3127 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::difference).22), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3127 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3127 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#1362), res: Local(HirId(DefId(0:3127 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::difference).9)), segments: [PathSegment { ident: f#1362, hir_id: HirId(DefId(0:3127 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::difference).25), res: Local(HirId(DefId(0:3127 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:46: 259:52 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:52 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3127 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::difference).26), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:3127 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::difference).27), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3127 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::difference).28), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3127 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::difference).29), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#1362), res: Local(HirId(DefId(0:3127 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::difference).14)), segments: [PathSegment { ident: other#1362, hir_id: HirId(DefId(0:3127 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::difference).30), res: Local(HirId(DefId(0:3127 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:62: 259:68 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:68 (#1362) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:55: 259:68 (#1362) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3128 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3115 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3128 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::symmetric_difference).22), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3128 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::symmetric_difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3128 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::symmetric_difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#1362), res: Local(HirId(DefId(0:3128 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::symmetric_difference).9)), segments: [PathSegment { ident: f#1362, hir_id: HirId(DefId(0:3128 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::symmetric_difference).25), res: Local(HirId(DefId(0:3128 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::symmetric_difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:46: 263:52 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:52 (#1362) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3128 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::symmetric_difference).26), kind: MethodCall(PathSegment { ident: bits#1362, hir_id: HirId(DefId(0:3128 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::symmetric_difference).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3128 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::symmetric_difference).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#1362), res: Local(HirId(DefId(0:3128 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::symmetric_difference).14)), segments: [PathSegment { ident: other#1362, hir_id: HirId(DefId(0:3128 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::symmetric_difference).29), res: Local(HirId(DefId(0:3128 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::symmetric_difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#1362) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:61: 263:67 (#1362)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:67 (#1362) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3129 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3114 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3131 ~ rustix[903e]::backend::fs::types::_#7::{impl#17}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3133 ~ rustix[903e]::backend::fs::types::_#7::{impl#18}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3135 ~ rustix[903e]::backend::fs::types::_#7::{impl#19}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3137 ~ rustix[903e]::backend::fs::types::_#7::{impl#20}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3140 ~ rustix[903e]::backend::fs::types::_#7::{impl#21}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3126 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3142 ~ rustix[903e]::backend::fs::types::_#7::{impl#22}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3121 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3145 ~ rustix[903e]::backend::fs::types::_#7::{impl#23}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3128 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3147 ~ rustix[903e]::backend::fs::types::_#7::{impl#24}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3123 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3150 ~ rustix[903e]::backend::fs::types::_#7::{impl#25}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3125 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3152 ~ rustix[903e]::backend::fs::types::_#7::{impl#26}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3125 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3115 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3155 ~ rustix[903e]::backend::fs::types::_#7::{impl#27}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3127 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3157 ~ rustix[903e]::backend::fs::types::_#7::{impl#28}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3122 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3160 ~ rustix[903e]::backend::fs::types::_#7::{impl#29}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3129 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3162 ~ rustix[903e]::backend::fs::types::_#7::{impl#30}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3121 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3165 ~ rustix[903e]::backend::fs::types::_#7::{impl#31}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3110 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3169 ~ rustix[903e]::backend::fs::types::_#7::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3181 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3181 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3170 ~ rustix[903e]::backend::fs::types::_#7::{impl#32}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3181 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3181 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3174 ~ rustix[903e]::backend::fs::types::_#7::{impl#33}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3169 ~ rustix[903e]::backend::fs::types::_#7::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3108 ~ rustix[903e]::backend::fs::types::_#7::{impl#15}::bits_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3176 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3110 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3177 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3111 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3178 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3112 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3179 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3113 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3180 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3114 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3181 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3115 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3182 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3116 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3183 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3117 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3184 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3118 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3185 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3119 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3186 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3120 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3187 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3121 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3188 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3122 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3189 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3123 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3190 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3124 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3191 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3125 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3192 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3126 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3193 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3127 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3194 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3128 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3195 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3129 ~ rustix[903e]::backend::fs::types::_#7::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3197 ~ rustix[903e]::backend::fs::types::_#7::{impl#35}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3199 ~ rustix[903e]::backend::fs::types::_#7::{impl#36}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3201 ~ rustix[903e]::backend::fs::types::_#7::{impl#37}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3203 ~ rustix[903e]::backend::fs::types::_#7::{impl#38}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3206 ~ rustix[903e]::backend::fs::types::_#7::{impl#39}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3192 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3208 ~ rustix[903e]::backend::fs::types::_#7::{impl#40}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3187 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3211 ~ rustix[903e]::backend::fs::types::_#7::{impl#41}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3194 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3213 ~ rustix[903e]::backend::fs::types::_#7::{impl#42}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3189 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3216 ~ rustix[903e]::backend::fs::types::_#7::{impl#43}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3191 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3218 ~ rustix[903e]::backend::fs::types::_#7::{impl#44}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3191 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3181 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3178 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3221 ~ rustix[903e]::backend::fs::types::_#7::{impl#45}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3193 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3223 ~ rustix[903e]::backend::fs::types::_#7::{impl#46}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3188 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3226 ~ rustix[903e]::backend::fs::types::_#7::{impl#47}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3195 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3228 ~ rustix[903e]::backend::fs::types::_#7::{impl#48}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3187 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3231 ~ rustix[903e]::backend::fs::types::_#7::{impl#49}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3176 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3235 ~ rustix[903e]::backend::fs::types::_#7::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3181 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3178 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3181 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3178 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3236 ~ rustix[903e]::backend::fs::types::_#7::{impl#50}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3181 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3178 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3181 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3178 ~ rustix[903e]::backend::fs::types::_#7::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3240 ~ rustix[903e]::backend::fs::types::_#7::{impl#51}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3235 ~ rustix[903e]::backend::fs::types::_#7::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3261 ~ rustix[903e]::backend::fs::types::{impl#82}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3264 ~ rustix[903e]::backend::fs::types::{impl#84}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11181 ~ core[7d5a]::fmt::{impl#9}::write_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3267 ~ rustix[903e]::backend::fs::types::{impl#86}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3267 ~ rustix[903e]::backend::fs::types::{impl#86}::eq).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:953:30: 953:39 (#1451), res: Local(HirId(DefId(0:3267 ~ rustix[903e]::backend::fs::types::{impl#86}::eq).14)), segments: [PathSegment { ident: __self_discr#1451, hir_id: HirId(DefId(0:3267 ~ rustix[903e]::backend::fs::types::{impl#86}::eq).27), res: Local(HirId(DefId(0:3267 ~ rustix[903e]::backend::fs::types::{impl#86}::eq).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:953:30: 953:39 (#1451) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3267 ~ rustix[903e]::backend::fs::types::{impl#86}::eq).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:953:30: 953:39 (#1451), res: Local(HirId(DefId(0:3267 ~ rustix[903e]::backend::fs::types::{impl#86}::eq).24)), segments: [PathSegment { ident: __arg1_discr#1451, hir_id: HirId(DefId(0:3267 ~ rustix[903e]::backend::fs::types::{impl#86}::eq).29), res: Local(HirId(DefId(0:3267 ~ rustix[903e]::backend::fs::types::{impl#86}::eq).24)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/fs/types.rs:953:30: 953:39 (#1451) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3269 ~ rustix[903e]::backend::fs::types::{impl#87}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3275 ~ rustix[903e]::backend::fs::types::{impl#89}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3280 ~ rustix[903e]::backend::io::errno::{impl#2}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3283 ~ rustix[903e]::backend::io::errno::{impl#4}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3283 ~ rustix[903e]::backend::io::errno::{impl#4}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:3283 ~ rustix[903e]::backend::io::errno::{impl#4}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/errno.rs:36:14: 36:14 (#1462), res: Local(HirId(DefId(0:3283 ~ rustix[903e]::backend::io::errno::{impl#4}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:3283 ~ rustix[903e]::backend::io::errno::{impl#4}::eq).8), res: Local(HirId(DefId(0:3283 ~ rustix[903e]::backend::io::errno::{impl#4}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/errno.rs:36:14: 36:23 (#1462) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/errno.rs:37:18: 37:37 (#1462) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3283 ~ rustix[903e]::backend::io::errno::{impl#4}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:3283 ~ rustix[903e]::backend::io::errno::{impl#4}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/errno.rs:36:14: 36:23 (#1462), res: Local(HirId(DefId(0:3283 ~ rustix[903e]::backend::io::errno::{impl#4}::eq).4)), segments: [PathSegment { ident: other#1462, hir_id: HirId(DefId(0:3283 ~ rustix[903e]::backend::io::errno::{impl#4}::eq).11), res: Local(HirId(DefId(0:3283 ~ rustix[903e]::backend::io::errno::{impl#4}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/errno.rs:36:14: 36:23 (#1462) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/errno.rs:37:18: 37:37 (#1462) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3285 ~ rustix[903e]::backend::io::errno::{impl#5}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3289 ~ rustix[903e]::backend::io::errno::{impl#7}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:494 ~ rustix[903e]::backend::io::errno::{impl#1}::from_io_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9699 ~ core[7d5a]::option::{impl#0}::and_then)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:3252 ~ std[e3cd]::io::error::{impl#8}::raw_os_error)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:494 ~ rustix[903e]::backend::io::errno::{impl#1}::from_io_error).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/errno.rs:1083:32: 1083:35 (#0), res: Local(HirId(DefId(0:494 ~ rustix[903e]::backend::io::errno::{impl#1}::from_io_error).11)), segments: [PathSegment { ident: raw#0, hir_id: HirId(DefId(0:494 ~ rustix[903e]::backend::io::errno::{impl#1}::from_io_error).15), res: Local(HirId(DefId(0:494 ~ rustix[903e]::backend::io::errno::{impl#1}::from_io_error).11)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/errno.rs:1083:32: 1083:35 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:494 ~ rustix[903e]::backend::io::errno::{impl#1}::from_io_error).16), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/errno.rs:1083:39: 1083:40 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/errno.rs:1083:39: 1083:40 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:496 ~ rustix[903e]::backend::io::errno::{impl#1}::raw_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:497 ~ rustix[903e]::backend::io::errno::{impl#1}::from_raw_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:498 ~ rustix[903e]::backend::io::errno::{impl#1}::last_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(21:37 ~ errno[a1de]::errno)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3296 ~ rustix[903e]::backend::io::types::{impl#1}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3298 ~ rustix[903e]::backend::io::types::{impl#2}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3301 ~ rustix[903e]::backend::io::types::{impl#4}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3301 ~ rustix[903e]::backend::io::types::{impl#4}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:3301 ~ rustix[903e]::backend::io::types::{impl#4}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/types.rs:10:31: 10:31 (#1471), res: Local(HirId(DefId(0:3301 ~ rustix[903e]::backend::io::types::{impl#4}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:3301 ~ rustix[903e]::backend::io::types::{impl#4}::eq).8), res: Local(HirId(DefId(0:3301 ~ rustix[903e]::backend::io::types::{impl#4}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/types.rs:10:31: 10:40 (#1471) }, 0#1467), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#1471) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3301 ~ rustix[903e]::backend::io::types::{impl#4}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:3301 ~ rustix[903e]::backend::io::types::{impl#4}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/types.rs:10:31: 10:40 (#1471), res: Local(HirId(DefId(0:3301 ~ rustix[903e]::backend::io::types::{impl#4}::eq).4)), segments: [PathSegment { ident: other#1471, hir_id: HirId(DefId(0:3301 ~ rustix[903e]::backend::io::types::{impl#4}::eq).11), res: Local(HirId(DefId(0:3301 ~ rustix[903e]::backend::io::types::{impl#4}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/types.rs:10:31: 10:40 (#1471) }, 0#1467), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#1471) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3303 ~ rustix[903e]::backend::io::types::{impl#5}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3306 ~ rustix[903e]::backend::io::types::{impl#6}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3311 ~ rustix[903e]::backend::io::types::{impl#8}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3420 ~ rustix[903e]::backend::io::types::_::{impl#34}::bits)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3312 ~ rustix[903e]::backend::io::types::{impl#8}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3423 ~ rustix[903e]::backend::io::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3318 ~ rustix[903e]::backend::io::types::_::{impl#0}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3322 ~ rustix[903e]::backend::io::types::_::{impl#3}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3322 ~ rustix[903e]::backend::io::types::_::{impl#3}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:3322 ~ rustix[903e]::backend::io::types::_::{impl#3}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:31 (#1486), res: Local(HirId(DefId(0:3322 ~ rustix[903e]::backend::io::types::_::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:3322 ~ rustix[903e]::backend::io::types::_::{impl#3}::eq).8), res: Local(HirId(DefId(0:3322 ~ rustix[903e]::backend::io::types::_::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1486) }, 0#1483), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#1486) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3322 ~ rustix[903e]::backend::io::types::_::{impl#3}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:3322 ~ rustix[903e]::backend::io::types::_::{impl#3}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1486), res: Local(HirId(DefId(0:3322 ~ rustix[903e]::backend::io::types::_::{impl#3}::eq).4)), segments: [PathSegment { ident: other#1486, hir_id: HirId(DefId(0:3322 ~ rustix[903e]::backend::io::types::_::{impl#3}::eq).11), res: Local(HirId(DefId(0:3322 ~ rustix[903e]::backend::io::types::_::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1486) }, 0#1483), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#1486) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3324 ~ rustix[903e]::backend::io::types::_::{impl#4}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3326 ~ rustix[903e]::backend::io::types::_::{impl#5}::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3008 ~ core[7d5a]::cmp::PartialOrd::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3328 ~ rustix[903e]::backend::io::types::_::{impl#6}::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3330 ~ rustix[903e]::backend::io::types::_::{impl#7}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3336 ~ rustix[903e]::backend::io::types::_::{impl#9}::default)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3352 ~ rustix[903e]::backend::io::types::_::{impl#16}::empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3338 ~ rustix[903e]::backend::io::types::_::{impl#10}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3359 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11182 ~ core[7d5a]::fmt::{impl#9}::write_fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11123 ~ core[7d5a]::fmt::{impl#2}::new_v1_formatted)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11045 ~ core[7d5a]::fmt::rt::{impl#1}::new_lower_hex)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11026 ~ core[7d5a]::fmt::rt::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11071 ~ core[7d5a]::fmt::rt::{impl#2}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3340 ~ rustix[903e]::backend::io::types::_::{impl#11}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:49 ~ bitflags[64b8]::parser::to_writer)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3343 ~ rustix[903e]::backend::io::types::_::{impl#12}::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:52 ~ bitflags[64b8]::parser::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3346 ~ rustix[903e]::backend::io::types::_::{impl#13}::as_ref)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3348 ~ rustix[903e]::backend::io::types::_::{impl#14}::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3357 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3352 ~ rustix[903e]::backend::io::types::_::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3420 ~ rustix[903e]::backend::io::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all).37), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1494), res: Local(HirId(DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#1494, hir_id: HirId(DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all).38), res: Local(HirId(DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1494) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1494), res: Local(HirId(DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all).32)), segments: [PathSegment { ident: flag#1494, hir_id: HirId(DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all).40), res: Local(HirId(DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all).32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1494) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3420 ~ rustix[903e]::backend::io::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all).72), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1494), res: Local(HirId(DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#1494, hir_id: HirId(DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all).73), res: Local(HirId(DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1494) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all).74), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1494), res: Local(HirId(DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all).67)), segments: [PathSegment { ident: flag#1494, hir_id: HirId(DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all).75), res: Local(HirId(DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all).67)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1494) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3357 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3355 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3356 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_truncate)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3355 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#1494), res: Local(HirId(DefId(0:3355 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits).19)), segments: [PathSegment { ident: truncated#1494, hir_id: HirId(DefId(0:3355 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits).23), res: Local(HirId(DefId(0:3355 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits).19)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#1494) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3355 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#1494), res: Local(HirId(DefId(0:3355 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits).7)), segments: [PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3355 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits).25), res: Local(HirId(DefId(0:3355 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#1494) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3356 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3356 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_truncate).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#1494), res: Local(HirId(DefId(0:3356 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_truncate).7)), segments: [PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3356 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_truncate).14), res: Local(HirId(DefId(0:3356 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_truncate).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#1494) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3356 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_truncate).15), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3356 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_truncate).16), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3356 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_truncate).17), kind: Call(Expr { hir_id: HirId(DefId(0:3356 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_truncate).18), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:3356 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_truncate).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#1494), res: SelfTyAlias { alias_to: DefId(0:3351 ~ rustix[903e]::backend::io::types::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1494, hir_id: HirId(DefId(0:3356 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_truncate).19), res: SelfTyAlias { alias_to: DefId(0:3351 ~ rustix[903e]::backend::io::types::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#1494) }, PathSegment { ident: all#1494, hir_id: HirId(DefId(0:3356 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_truncate).21), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:42 (#1494) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:44 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:45: 183:51 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:51 (#1494) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3357 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3358 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3358 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_name).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1494), res: Local(HirId(DefId(0:3358 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#1494, hir_id: HirId(DefId(0:3358 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_name).13), res: Local(HirId(DefId(0:3358 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1494) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3358 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_name).14), kind: Lit(Spanned { node: Str("CLOEXEC", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1505) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1505) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3420 ~ rustix[903e]::backend::io::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3359 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3359 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_empty).10), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3359 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_empty).11), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3359 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_empty).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#1494), res: Local(HirId(DefId(0:3359 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_empty).7)), segments: [PathSegment { ident: f#1494, hir_id: HirId(DefId(0:3359 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_empty).13), res: Local(HirId(DefId(0:3359 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_empty).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:23: 213:29 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:29 (#1494) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3359 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_empty).14), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:3359 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_empty).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/types.rs:11:25: 11:28 (#0), res: PrimTy(Uint(U32)), segments: [PathSegment { ident: u32#0, hir_id: HirId(DefId(0:3359 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_empty).16), res: PrimTy(Uint(U32)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/types.rs:11:25: 11:28 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#1494), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#1494, hir_id: HirId(DefId(0:3359 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_empty).17), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#1494, hir_id: HirId(DefId(0:3359 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_empty).18), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#1494, hir_id: HirId(DefId(0:3359 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_empty).19), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#1494) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).10), kind: Binary(Spanned { node: BitOr, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:40: 219:41 (#1494) }, Expr { hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1494), res: SelfTyAlias { alias_to: DefId(0:3351 ~ rustix[903e]::backend::io::types::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1494, hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:3351 ~ rustix[903e]::backend::io::types::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1494) }, PathSegment { ident: all#1494, hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#1494) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#1494) }, Expr { hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1494), res: Local(HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1494, hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).21), res: Local(HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#1494) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:50 (#1494) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).22), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#1494), res: Local(HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1494, hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).25), res: Local(HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:56: 219:62 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:62 (#1494) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1494), res: SelfTyAlias { alias_to: DefId(0:3351 ~ rustix[903e]::backend::io::types::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1494, hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:3351 ~ rustix[903e]::backend::io::types::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1494) }, PathSegment { ident: all#1494, hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#1494) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#1494) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1494), res: Local(HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1494, hir_id: HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).21), res: Local(HirId(DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#1494) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:30: 223:31 (#1494) }, Expr { hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1494), res: Local(HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#1494, hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).21), res: Local(HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#1494) }, Expr { hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1494), res: Local(HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#1494, hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).25), res: Local(HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#1494) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:44 (#1494) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).26), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/types.rs:11:25: 11:28 (#0), res: PrimTy(Uint(U32)), segments: [PathSegment { ident: u32#0, hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).28), res: PrimTy(Uint(U32)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/types.rs:11:25: 11:28 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#1494), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#1494, hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).29), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#1494, hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).30), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#1494, hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).31), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#1494) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1494), res: Local(HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#1494, hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).21), res: Local(HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#1494) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1494), res: Local(HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#1494, hir_id: HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).25), res: Local(HirId(DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#1494) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:30: 227:31 (#1494) }, Expr { hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1494), res: Local(HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).9)), segments: [PathSegment { ident: f#1494, hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).21), res: Local(HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#1494) }, Expr { hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1494), res: Local(HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1494, hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).25), res: Local(HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#1494) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:44 (#1494) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).26), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#1494), res: Local(HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1494, hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).29), res: Local(HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:54: 227:60 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:60 (#1494) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1494), res: Local(HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).9)), segments: [PathSegment { ident: f#1494, hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).21), res: Local(HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#1494) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1494), res: Local(HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1494, hir_id: HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).25), res: Local(HirId(DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#1494) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3363 ~ rustix[903e]::backend::io::types::_::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3368 ~ rustix[903e]::backend::io::types::_::{impl#16}::union)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:3357 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3364 ~ rustix[903e]::backend::io::types::_::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3369 ~ rustix[903e]::backend::io::types::_::{impl#16}::difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:3357 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3365 ~ rustix[903e]::backend::io::types::_::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3370 ~ rustix[903e]::backend::io::types::_::{impl#16}::symmetric_difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:3357 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3366 ~ rustix[903e]::backend::io::types::_::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3363 ~ rustix[903e]::backend::io::types::_::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3364 ~ rustix[903e]::backend::io::types::_::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3367 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3357 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3367 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersection).22), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3367 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersection).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3367 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersection).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#1494), res: Local(HirId(DefId(0:3367 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersection).9)), segments: [PathSegment { ident: f#1494, hir_id: HirId(DefId(0:3367 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersection).25), res: Local(HirId(DefId(0:3367 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersection).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:46: 251:52 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:52 (#1494) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3367 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersection).26), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3367 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersection).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3367 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersection).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#1494), res: Local(HirId(DefId(0:3367 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersection).14)), segments: [PathSegment { ident: other#1494, hir_id: HirId(DefId(0:3367 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersection).29), res: Local(HirId(DefId(0:3367 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersection).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:61: 251:67 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:67 (#1494) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3368 ~ rustix[903e]::backend::io::types::_::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3357 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3368 ~ rustix[903e]::backend::io::types::_::{impl#16}::union).22), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3368 ~ rustix[903e]::backend::io::types::_::{impl#16}::union).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3368 ~ rustix[903e]::backend::io::types::_::{impl#16}::union).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#1494), res: Local(HirId(DefId(0:3368 ~ rustix[903e]::backend::io::types::_::{impl#16}::union).9)), segments: [PathSegment { ident: f#1494, hir_id: HirId(DefId(0:3368 ~ rustix[903e]::backend::io::types::_::{impl#16}::union).25), res: Local(HirId(DefId(0:3368 ~ rustix[903e]::backend::io::types::_::{impl#16}::union).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:46: 255:52 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:52 (#1494) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3368 ~ rustix[903e]::backend::io::types::_::{impl#16}::union).26), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3368 ~ rustix[903e]::backend::io::types::_::{impl#16}::union).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3368 ~ rustix[903e]::backend::io::types::_::{impl#16}::union).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#1494), res: Local(HirId(DefId(0:3368 ~ rustix[903e]::backend::io::types::_::{impl#16}::union).14)), segments: [PathSegment { ident: other#1494, hir_id: HirId(DefId(0:3368 ~ rustix[903e]::backend::io::types::_::{impl#16}::union).29), res: Local(HirId(DefId(0:3368 ~ rustix[903e]::backend::io::types::_::{impl#16}::union).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:61: 255:67 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:67 (#1494) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3369 ~ rustix[903e]::backend::io::types::_::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3357 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3369 ~ rustix[903e]::backend::io::types::_::{impl#16}::difference).22), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3369 ~ rustix[903e]::backend::io::types::_::{impl#16}::difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3369 ~ rustix[903e]::backend::io::types::_::{impl#16}::difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#1494), res: Local(HirId(DefId(0:3369 ~ rustix[903e]::backend::io::types::_::{impl#16}::difference).9)), segments: [PathSegment { ident: f#1494, hir_id: HirId(DefId(0:3369 ~ rustix[903e]::backend::io::types::_::{impl#16}::difference).25), res: Local(HirId(DefId(0:3369 ~ rustix[903e]::backend::io::types::_::{impl#16}::difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:46: 259:52 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:52 (#1494) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3369 ~ rustix[903e]::backend::io::types::_::{impl#16}::difference).26), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:3369 ~ rustix[903e]::backend::io::types::_::{impl#16}::difference).27), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3369 ~ rustix[903e]::backend::io::types::_::{impl#16}::difference).28), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3369 ~ rustix[903e]::backend::io::types::_::{impl#16}::difference).29), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#1494), res: Local(HirId(DefId(0:3369 ~ rustix[903e]::backend::io::types::_::{impl#16}::difference).14)), segments: [PathSegment { ident: other#1494, hir_id: HirId(DefId(0:3369 ~ rustix[903e]::backend::io::types::_::{impl#16}::difference).30), res: Local(HirId(DefId(0:3369 ~ rustix[903e]::backend::io::types::_::{impl#16}::difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:62: 259:68 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:68 (#1494) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:55: 259:68 (#1494) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3370 ~ rustix[903e]::backend::io::types::_::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3357 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3370 ~ rustix[903e]::backend::io::types::_::{impl#16}::symmetric_difference).22), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3370 ~ rustix[903e]::backend::io::types::_::{impl#16}::symmetric_difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3370 ~ rustix[903e]::backend::io::types::_::{impl#16}::symmetric_difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#1494), res: Local(HirId(DefId(0:3370 ~ rustix[903e]::backend::io::types::_::{impl#16}::symmetric_difference).9)), segments: [PathSegment { ident: f#1494, hir_id: HirId(DefId(0:3370 ~ rustix[903e]::backend::io::types::_::{impl#16}::symmetric_difference).25), res: Local(HirId(DefId(0:3370 ~ rustix[903e]::backend::io::types::_::{impl#16}::symmetric_difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:46: 263:52 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:52 (#1494) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3370 ~ rustix[903e]::backend::io::types::_::{impl#16}::symmetric_difference).26), kind: MethodCall(PathSegment { ident: bits#1494, hir_id: HirId(DefId(0:3370 ~ rustix[903e]::backend::io::types::_::{impl#16}::symmetric_difference).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3370 ~ rustix[903e]::backend::io::types::_::{impl#16}::symmetric_difference).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#1494), res: Local(HirId(DefId(0:3370 ~ rustix[903e]::backend::io::types::_::{impl#16}::symmetric_difference).14)), segments: [PathSegment { ident: other#1494, hir_id: HirId(DefId(0:3370 ~ rustix[903e]::backend::io::types::_::{impl#16}::symmetric_difference).29), res: Local(HirId(DefId(0:3370 ~ rustix[903e]::backend::io::types::_::{impl#16}::symmetric_difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#1494) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:61: 263:67 (#1494)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:67 (#1494) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3371 ~ rustix[903e]::backend::io::types::_::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3356 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3373 ~ rustix[903e]::backend::io::types::_::{impl#17}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3375 ~ rustix[903e]::backend::io::types::_::{impl#18}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3377 ~ rustix[903e]::backend::io::types::_::{impl#19}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3379 ~ rustix[903e]::backend::io::types::_::{impl#20}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3382 ~ rustix[903e]::backend::io::types::_::{impl#21}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3368 ~ rustix[903e]::backend::io::types::_::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3384 ~ rustix[903e]::backend::io::types::_::{impl#22}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3363 ~ rustix[903e]::backend::io::types::_::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3387 ~ rustix[903e]::backend::io::types::_::{impl#23}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3370 ~ rustix[903e]::backend::io::types::_::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3389 ~ rustix[903e]::backend::io::types::_::{impl#24}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3365 ~ rustix[903e]::backend::io::types::_::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3392 ~ rustix[903e]::backend::io::types::_::{impl#25}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3367 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3394 ~ rustix[903e]::backend::io::types::_::{impl#26}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3367 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3357 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3397 ~ rustix[903e]::backend::io::types::_::{impl#27}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3369 ~ rustix[903e]::backend::io::types::_::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3399 ~ rustix[903e]::backend::io::types::_::{impl#28}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3364 ~ rustix[903e]::backend::io::types::_::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3402 ~ rustix[903e]::backend::io::types::_::{impl#29}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3371 ~ rustix[903e]::backend::io::types::_::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3404 ~ rustix[903e]::backend::io::types::_::{impl#30}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3363 ~ rustix[903e]::backend::io::types::_::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3407 ~ rustix[903e]::backend::io::types::_::{impl#31}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3352 ~ rustix[903e]::backend::io::types::_::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3411 ~ rustix[903e]::backend::io::types::_::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3423 ~ rustix[903e]::backend::io::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3423 ~ rustix[903e]::backend::io::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3412 ~ rustix[903e]::backend::io::types::_::{impl#32}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3423 ~ rustix[903e]::backend::io::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3423 ~ rustix[903e]::backend::io::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3416 ~ rustix[903e]::backend::io::types::_::{impl#33}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3411 ~ rustix[903e]::backend::io::types::_::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3350 ~ rustix[903e]::backend::io::types::_::{impl#15}::bits_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3418 ~ rustix[903e]::backend::io::types::_::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3352 ~ rustix[903e]::backend::io::types::_::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3419 ~ rustix[903e]::backend::io::types::_::{impl#34}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3353 ~ rustix[903e]::backend::io::types::_::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3420 ~ rustix[903e]::backend::io::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3354 ~ rustix[903e]::backend::io::types::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3421 ~ rustix[903e]::backend::io::types::_::{impl#34}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3355 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3422 ~ rustix[903e]::backend::io::types::_::{impl#34}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3356 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3423 ~ rustix[903e]::backend::io::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3357 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3424 ~ rustix[903e]::backend::io::types::_::{impl#34}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3358 ~ rustix[903e]::backend::io::types::_::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3425 ~ rustix[903e]::backend::io::types::_::{impl#34}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3359 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3426 ~ rustix[903e]::backend::io::types::_::{impl#34}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3360 ~ rustix[903e]::backend::io::types::_::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3427 ~ rustix[903e]::backend::io::types::_::{impl#34}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3361 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3428 ~ rustix[903e]::backend::io::types::_::{impl#34}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3362 ~ rustix[903e]::backend::io::types::_::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3429 ~ rustix[903e]::backend::io::types::_::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3363 ~ rustix[903e]::backend::io::types::_::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3430 ~ rustix[903e]::backend::io::types::_::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3364 ~ rustix[903e]::backend::io::types::_::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3431 ~ rustix[903e]::backend::io::types::_::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3365 ~ rustix[903e]::backend::io::types::_::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3432 ~ rustix[903e]::backend::io::types::_::{impl#34}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3366 ~ rustix[903e]::backend::io::types::_::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3433 ~ rustix[903e]::backend::io::types::_::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3367 ~ rustix[903e]::backend::io::types::_::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3434 ~ rustix[903e]::backend::io::types::_::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3368 ~ rustix[903e]::backend::io::types::_::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3435 ~ rustix[903e]::backend::io::types::_::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3369 ~ rustix[903e]::backend::io::types::_::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3436 ~ rustix[903e]::backend::io::types::_::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3370 ~ rustix[903e]::backend::io::types::_::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3437 ~ rustix[903e]::backend::io::types::_::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3371 ~ rustix[903e]::backend::io::types::_::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3439 ~ rustix[903e]::backend::io::types::_::{impl#35}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3441 ~ rustix[903e]::backend::io::types::_::{impl#36}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3443 ~ rustix[903e]::backend::io::types::_::{impl#37}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3445 ~ rustix[903e]::backend::io::types::_::{impl#38}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3448 ~ rustix[903e]::backend::io::types::_::{impl#39}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3434 ~ rustix[903e]::backend::io::types::_::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3450 ~ rustix[903e]::backend::io::types::_::{impl#40}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3429 ~ rustix[903e]::backend::io::types::_::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3453 ~ rustix[903e]::backend::io::types::_::{impl#41}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3436 ~ rustix[903e]::backend::io::types::_::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3455 ~ rustix[903e]::backend::io::types::_::{impl#42}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3431 ~ rustix[903e]::backend::io::types::_::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3458 ~ rustix[903e]::backend::io::types::_::{impl#43}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3433 ~ rustix[903e]::backend::io::types::_::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3460 ~ rustix[903e]::backend::io::types::_::{impl#44}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3433 ~ rustix[903e]::backend::io::types::_::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3423 ~ rustix[903e]::backend::io::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3420 ~ rustix[903e]::backend::io::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3463 ~ rustix[903e]::backend::io::types::_::{impl#45}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3435 ~ rustix[903e]::backend::io::types::_::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3465 ~ rustix[903e]::backend::io::types::_::{impl#46}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3430 ~ rustix[903e]::backend::io::types::_::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3468 ~ rustix[903e]::backend::io::types::_::{impl#47}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3437 ~ rustix[903e]::backend::io::types::_::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3470 ~ rustix[903e]::backend::io::types::_::{impl#48}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3429 ~ rustix[903e]::backend::io::types::_::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3473 ~ rustix[903e]::backend::io::types::_::{impl#49}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3418 ~ rustix[903e]::backend::io::types::_::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3477 ~ rustix[903e]::backend::io::types::_::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3423 ~ rustix[903e]::backend::io::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3420 ~ rustix[903e]::backend::io::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3423 ~ rustix[903e]::backend::io::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3420 ~ rustix[903e]::backend::io::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3478 ~ rustix[903e]::backend::io::types::_::{impl#50}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3423 ~ rustix[903e]::backend::io::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3420 ~ rustix[903e]::backend::io::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3423 ~ rustix[903e]::backend::io::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3420 ~ rustix[903e]::backend::io::types::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3482 ~ rustix[903e]::backend::io::types::_::{impl#51}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3477 ~ rustix[903e]::backend::io::types::_::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3489 ~ rustix[903e]::backend::io::types::{impl#10}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3491 ~ rustix[903e]::backend::io::types::{impl#11}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3494 ~ rustix[903e]::backend::io::types::{impl#13}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3494 ~ rustix[903e]::backend::io::types::{impl#13}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:3494 ~ rustix[903e]::backend::io::types::{impl#13}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/types.rs:51:31: 51:31 (#1518), res: Local(HirId(DefId(0:3494 ~ rustix[903e]::backend::io::types::{impl#13}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:3494 ~ rustix[903e]::backend::io::types::{impl#13}::eq).8), res: Local(HirId(DefId(0:3494 ~ rustix[903e]::backend::io::types::{impl#13}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/types.rs:51:31: 51:40 (#1518) }, 0#1514), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#1518) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3494 ~ rustix[903e]::backend::io::types::{impl#13}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:3494 ~ rustix[903e]::backend::io::types::{impl#13}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/types.rs:51:31: 51:40 (#1518), res: Local(HirId(DefId(0:3494 ~ rustix[903e]::backend::io::types::{impl#13}::eq).4)), segments: [PathSegment { ident: other#1518, hir_id: HirId(DefId(0:3494 ~ rustix[903e]::backend::io::types::{impl#13}::eq).11), res: Local(HirId(DefId(0:3494 ~ rustix[903e]::backend::io::types::{impl#13}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/types.rs:51:31: 51:40 (#1518) }, 0#1514), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#1518) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3496 ~ rustix[903e]::backend::io::types::{impl#14}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3499 ~ rustix[903e]::backend::io::types::{impl#15}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3504 ~ rustix[903e]::backend::io::types::{impl#17}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3612 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::bits)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3505 ~ rustix[903e]::backend::io::types::{impl#17}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3615 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3510 ~ rustix[903e]::backend::io::types::_#1::{impl#0}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3514 ~ rustix[903e]::backend::io::types::_#1::{impl#3}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3514 ~ rustix[903e]::backend::io::types::_#1::{impl#3}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:3514 ~ rustix[903e]::backend::io::types::_#1::{impl#3}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:31 (#1532), res: Local(HirId(DefId(0:3514 ~ rustix[903e]::backend::io::types::_#1::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:3514 ~ rustix[903e]::backend::io::types::_#1::{impl#3}::eq).8), res: Local(HirId(DefId(0:3514 ~ rustix[903e]::backend::io::types::_#1::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1532) }, 0#1529), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#1532) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3514 ~ rustix[903e]::backend::io::types::_#1::{impl#3}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:3514 ~ rustix[903e]::backend::io::types::_#1::{impl#3}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1532), res: Local(HirId(DefId(0:3514 ~ rustix[903e]::backend::io::types::_#1::{impl#3}::eq).4)), segments: [PathSegment { ident: other#1532, hir_id: HirId(DefId(0:3514 ~ rustix[903e]::backend::io::types::_#1::{impl#3}::eq).11), res: Local(HirId(DefId(0:3514 ~ rustix[903e]::backend::io::types::_#1::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1532) }, 0#1529), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#1532) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3516 ~ rustix[903e]::backend::io::types::_#1::{impl#4}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3518 ~ rustix[903e]::backend::io::types::_#1::{impl#5}::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3008 ~ core[7d5a]::cmp::PartialOrd::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3520 ~ rustix[903e]::backend::io::types::_#1::{impl#6}::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3522 ~ rustix[903e]::backend::io::types::_#1::{impl#7}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3528 ~ rustix[903e]::backend::io::types::_#1::{impl#9}::default)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3544 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3530 ~ rustix[903e]::backend::io::types::_#1::{impl#10}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3551 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11182 ~ core[7d5a]::fmt::{impl#9}::write_fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11123 ~ core[7d5a]::fmt::{impl#2}::new_v1_formatted)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11045 ~ core[7d5a]::fmt::rt::{impl#1}::new_lower_hex)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11026 ~ core[7d5a]::fmt::rt::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11071 ~ core[7d5a]::fmt::rt::{impl#2}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3532 ~ rustix[903e]::backend::io::types::_#1::{impl#11}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:49 ~ bitflags[64b8]::parser::to_writer)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3535 ~ rustix[903e]::backend::io::types::_#1::{impl#12}::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:52 ~ bitflags[64b8]::parser::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3538 ~ rustix[903e]::backend::io::types::_#1::{impl#13}::as_ref)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3540 ~ rustix[903e]::backend::io::types::_#1::{impl#14}::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3549 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3544 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3545 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3612 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3545 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::all).37), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1540), res: Local(HirId(DefId(0:3545 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::all).10)), segments: [PathSegment { ident: truncated#1540, hir_id: HirId(DefId(0:3545 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::all).38), res: Local(HirId(DefId(0:3545 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::all).10)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1540) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3545 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::all).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1540), res: Local(HirId(DefId(0:3545 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::all).32)), segments: [PathSegment { ident: flag#1540, hir_id: HirId(DefId(0:3545 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::all).40), res: Local(HirId(DefId(0:3545 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::all).32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1540) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3549 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3547 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3548 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_truncate)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3547 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#1540), res: Local(HirId(DefId(0:3547 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits).19)), segments: [PathSegment { ident: truncated#1540, hir_id: HirId(DefId(0:3547 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits).23), res: Local(HirId(DefId(0:3547 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits).19)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#1540) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3547 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#1540), res: Local(HirId(DefId(0:3547 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits).7)), segments: [PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3547 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits).25), res: Local(HirId(DefId(0:3547 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#1540) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3548 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3548 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_truncate).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#1540), res: Local(HirId(DefId(0:3548 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_truncate).7)), segments: [PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3548 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_truncate).14), res: Local(HirId(DefId(0:3548 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_truncate).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#1540) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3548 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_truncate).15), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3548 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_truncate).16), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3548 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_truncate).17), kind: Call(Expr { hir_id: HirId(DefId(0:3548 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_truncate).18), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:3548 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_truncate).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#1540), res: SelfTyAlias { alias_to: DefId(0:3543 ~ rustix[903e]::backend::io::types::_#1::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1540, hir_id: HirId(DefId(0:3548 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_truncate).19), res: SelfTyAlias { alias_to: DefId(0:3543 ~ rustix[903e]::backend::io::types::_#1::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#1540) }, PathSegment { ident: all#1540, hir_id: HirId(DefId(0:3548 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_truncate).21), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:42 (#1540) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:44 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:45: 183:51 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:51 (#1540) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3545 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3549 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3550 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3551 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3551 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_empty).10), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3551 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_empty).11), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3551 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_empty).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#1540), res: Local(HirId(DefId(0:3551 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_empty).7)), segments: [PathSegment { ident: f#1540, hir_id: HirId(DefId(0:3551 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_empty).13), res: Local(HirId(DefId(0:3551 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_empty).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:23: 213:29 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:29 (#1540) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3551 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_empty).14), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:3551 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_empty).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/types.rs:52:26: 52:29 (#0), res: PrimTy(Uint(U32)), segments: [PathSegment { ident: u32#0, hir_id: HirId(DefId(0:3551 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_empty).16), res: PrimTy(Uint(U32)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/types.rs:52:26: 52:29 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#1540), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#1540, hir_id: HirId(DefId(0:3551 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_empty).17), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#1540, hir_id: HirId(DefId(0:3551 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_empty).18), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#1540, hir_id: HirId(DefId(0:3551 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_empty).19), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#1540) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).10), kind: Binary(Spanned { node: BitOr, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:40: 219:41 (#1540) }, Expr { hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1540), res: SelfTyAlias { alias_to: DefId(0:3543 ~ rustix[903e]::backend::io::types::_#1::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1540, hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:3543 ~ rustix[903e]::backend::io::types::_#1::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1540) }, PathSegment { ident: all#1540, hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#1540) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#1540) }, Expr { hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1540), res: Local(HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1540, hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).21), res: Local(HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#1540) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:50 (#1540) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).22), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#1540), res: Local(HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1540, hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).25), res: Local(HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:56: 219:62 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:62 (#1540) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1540), res: SelfTyAlias { alias_to: DefId(0:3543 ~ rustix[903e]::backend::io::types::_#1::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1540, hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:3543 ~ rustix[903e]::backend::io::types::_#1::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1540) }, PathSegment { ident: all#1540, hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#1540) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#1540) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1540), res: Local(HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1540, hir_id: HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).21), res: Local(HirId(DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#1540) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3545 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:30: 223:31 (#1540) }, Expr { hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1540), res: Local(HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#1540, hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).21), res: Local(HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#1540) }, Expr { hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1540), res: Local(HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#1540, hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).25), res: Local(HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#1540) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:44 (#1540) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).26), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/types.rs:52:26: 52:29 (#0), res: PrimTy(Uint(U32)), segments: [PathSegment { ident: u32#0, hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).28), res: PrimTy(Uint(U32)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/backend/libc/io/types.rs:52:26: 52:29 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#1540), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#1540, hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).29), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#1540, hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).30), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#1540, hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).31), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#1540) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1540), res: Local(HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#1540, hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).21), res: Local(HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#1540) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1540), res: Local(HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#1540, hir_id: HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).25), res: Local(HirId(DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#1540) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:30: 227:31 (#1540) }, Expr { hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1540), res: Local(HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).9)), segments: [PathSegment { ident: f#1540, hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).21), res: Local(HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#1540) }, Expr { hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1540), res: Local(HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1540, hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).25), res: Local(HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#1540) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:44 (#1540) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).26), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#1540), res: Local(HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1540, hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).29), res: Local(HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:54: 227:60 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:60 (#1540) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1540), res: Local(HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).9)), segments: [PathSegment { ident: f#1540, hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).21), res: Local(HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#1540) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1540), res: Local(HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1540, hir_id: HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).25), res: Local(HirId(DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#1540) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3555 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3560 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::union)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:3549 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3556 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3561 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:3549 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3557 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3562 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::symmetric_difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:3549 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3558 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3555 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3556 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3559 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3549 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3559 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersection).22), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3559 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersection).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3559 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersection).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#1540), res: Local(HirId(DefId(0:3559 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersection).9)), segments: [PathSegment { ident: f#1540, hir_id: HirId(DefId(0:3559 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersection).25), res: Local(HirId(DefId(0:3559 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersection).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:46: 251:52 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:52 (#1540) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3559 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersection).26), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3559 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersection).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3559 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersection).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#1540), res: Local(HirId(DefId(0:3559 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersection).14)), segments: [PathSegment { ident: other#1540, hir_id: HirId(DefId(0:3559 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersection).29), res: Local(HirId(DefId(0:3559 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersection).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:61: 251:67 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:67 (#1540) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3560 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3549 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3560 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::union).22), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3560 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::union).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3560 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::union).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#1540), res: Local(HirId(DefId(0:3560 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::union).9)), segments: [PathSegment { ident: f#1540, hir_id: HirId(DefId(0:3560 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::union).25), res: Local(HirId(DefId(0:3560 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::union).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:46: 255:52 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:52 (#1540) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3560 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::union).26), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3560 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::union).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3560 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::union).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#1540), res: Local(HirId(DefId(0:3560 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::union).14)), segments: [PathSegment { ident: other#1540, hir_id: HirId(DefId(0:3560 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::union).29), res: Local(HirId(DefId(0:3560 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::union).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:61: 255:67 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:67 (#1540) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3561 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3549 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3561 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::difference).22), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3561 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3561 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#1540), res: Local(HirId(DefId(0:3561 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::difference).9)), segments: [PathSegment { ident: f#1540, hir_id: HirId(DefId(0:3561 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::difference).25), res: Local(HirId(DefId(0:3561 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:46: 259:52 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:52 (#1540) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3561 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::difference).26), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:3561 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::difference).27), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3561 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::difference).28), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3561 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::difference).29), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#1540), res: Local(HirId(DefId(0:3561 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::difference).14)), segments: [PathSegment { ident: other#1540, hir_id: HirId(DefId(0:3561 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::difference).30), res: Local(HirId(DefId(0:3561 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:62: 259:68 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:68 (#1540) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:55: 259:68 (#1540) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3562 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3549 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3562 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::symmetric_difference).22), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3562 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::symmetric_difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3562 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::symmetric_difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#1540), res: Local(HirId(DefId(0:3562 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::symmetric_difference).9)), segments: [PathSegment { ident: f#1540, hir_id: HirId(DefId(0:3562 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::symmetric_difference).25), res: Local(HirId(DefId(0:3562 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::symmetric_difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:46: 263:52 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:52 (#1540) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3562 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::symmetric_difference).26), kind: MethodCall(PathSegment { ident: bits#1540, hir_id: HirId(DefId(0:3562 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::symmetric_difference).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3562 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::symmetric_difference).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#1540), res: Local(HirId(DefId(0:3562 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::symmetric_difference).14)), segments: [PathSegment { ident: other#1540, hir_id: HirId(DefId(0:3562 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::symmetric_difference).29), res: Local(HirId(DefId(0:3562 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::symmetric_difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#1540) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:61: 263:67 (#1540)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:67 (#1540) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3563 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3548 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3565 ~ rustix[903e]::backend::io::types::_#1::{impl#17}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3567 ~ rustix[903e]::backend::io::types::_#1::{impl#18}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3569 ~ rustix[903e]::backend::io::types::_#1::{impl#19}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3571 ~ rustix[903e]::backend::io::types::_#1::{impl#20}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3574 ~ rustix[903e]::backend::io::types::_#1::{impl#21}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3560 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3576 ~ rustix[903e]::backend::io::types::_#1::{impl#22}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3555 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3579 ~ rustix[903e]::backend::io::types::_#1::{impl#23}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3562 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3581 ~ rustix[903e]::backend::io::types::_#1::{impl#24}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3557 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3584 ~ rustix[903e]::backend::io::types::_#1::{impl#25}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3559 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3586 ~ rustix[903e]::backend::io::types::_#1::{impl#26}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3559 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3549 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3589 ~ rustix[903e]::backend::io::types::_#1::{impl#27}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3561 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3591 ~ rustix[903e]::backend::io::types::_#1::{impl#28}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3556 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3594 ~ rustix[903e]::backend::io::types::_#1::{impl#29}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3563 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3596 ~ rustix[903e]::backend::io::types::_#1::{impl#30}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3555 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3599 ~ rustix[903e]::backend::io::types::_#1::{impl#31}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3544 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3603 ~ rustix[903e]::backend::io::types::_#1::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3615 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3615 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3604 ~ rustix[903e]::backend::io::types::_#1::{impl#32}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3615 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3615 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3608 ~ rustix[903e]::backend::io::types::_#1::{impl#33}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3603 ~ rustix[903e]::backend::io::types::_#1::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3542 ~ rustix[903e]::backend::io::types::_#1::{impl#15}::bits_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3610 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3544 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3611 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3545 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3612 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3546 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3613 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3547 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3614 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3548 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3615 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3549 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3616 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3550 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3617 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3551 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3618 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3552 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3619 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3553 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3620 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3554 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3621 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3555 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3622 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3556 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3623 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3557 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3624 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3558 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3625 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3559 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3626 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3560 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3627 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3561 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3628 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3562 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3629 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3563 ~ rustix[903e]::backend::io::types::_#1::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3631 ~ rustix[903e]::backend::io::types::_#1::{impl#35}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3633 ~ rustix[903e]::backend::io::types::_#1::{impl#36}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3635 ~ rustix[903e]::backend::io::types::_#1::{impl#37}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3637 ~ rustix[903e]::backend::io::types::_#1::{impl#38}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3640 ~ rustix[903e]::backend::io::types::_#1::{impl#39}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3626 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3642 ~ rustix[903e]::backend::io::types::_#1::{impl#40}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3621 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3645 ~ rustix[903e]::backend::io::types::_#1::{impl#41}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3628 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3647 ~ rustix[903e]::backend::io::types::_#1::{impl#42}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3623 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3650 ~ rustix[903e]::backend::io::types::_#1::{impl#43}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3625 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3652 ~ rustix[903e]::backend::io::types::_#1::{impl#44}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3625 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3615 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3612 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3655 ~ rustix[903e]::backend::io::types::_#1::{impl#45}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3627 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3657 ~ rustix[903e]::backend::io::types::_#1::{impl#46}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3622 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3660 ~ rustix[903e]::backend::io::types::_#1::{impl#47}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3629 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3662 ~ rustix[903e]::backend::io::types::_#1::{impl#48}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3621 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3665 ~ rustix[903e]::backend::io::types::_#1::{impl#49}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3610 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3669 ~ rustix[903e]::backend::io::types::_#1::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3615 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3612 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3615 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3612 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3670 ~ rustix[903e]::backend::io::types::_#1::{impl#50}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3615 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3612 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3615 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3612 ~ rustix[903e]::backend::io::types::_#1::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3674 ~ rustix[903e]::backend::io::types::_#1::{impl#51}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3669 ~ rustix[903e]::backend::io::types::_#1::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:529 ~ rustix[903e]::backend::io::syscalls::read)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:297 ~ libc[9eb8]::unix::{extern#2}::read)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3014 ~ core[7d5a]::cmp::min)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:530 ~ rustix[903e]::backend::io::syscalls::write)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:316 ~ libc[9eb8]::unix::{extern#2}::write)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2560 ~ core[7d5a]::ptr::const_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13278 ~ core[7d5a]::slice::{impl#0}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3014 ~ core[7d5a]::cmp::min)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:531 ~ rustix[903e]::backend::io::syscalls::pread)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3014 ~ core[7d5a]::cmp::min)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:317 ~ libc[9eb8]::unix::{extern#2}::pread)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:532 ~ rustix[903e]::backend::io::syscalls::pwrite)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3014 ~ core[7d5a]::cmp::min)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:318 ~ libc[9eb8]::unix::{extern#2}::pwrite)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2560 ~ core[7d5a]::ptr::const_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13278 ~ core[7d5a]::slice::{impl#0}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:533 ~ rustix[903e]::backend::io::syscalls::readv)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:1200 ~ libc[9eb8]::unix::bsd::{extern#0}::readv)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2560 ~ core[7d5a]::ptr::const_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13278 ~ core[7d5a]::slice::{impl#0}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3014 ~ core[7d5a]::cmp::min)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:534 ~ rustix[903e]::backend::io::syscalls::writev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:1199 ~ libc[9eb8]::unix::bsd::{extern#0}::writev)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2560 ~ core[7d5a]::ptr::const_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13278 ~ core[7d5a]::slice::{impl#0}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3014 ~ core[7d5a]::cmp::min)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:535 ~ rustix[903e]::backend::io::syscalls::preadv)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1601 ~ rustix[903e]::backend::c::readwrite_pv::preadv)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2560 ~ core[7d5a]::ptr::const_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13278 ~ core[7d5a]::slice::{impl#0}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3014 ~ core[7d5a]::cmp::min)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:536 ~ rustix[903e]::backend::io::syscalls::pwritev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ rustix[903e]::backend::conv::ret_usize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1603 ~ rustix[903e]::backend::c::readwrite_pv::pwritev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2560 ~ core[7d5a]::ptr::const_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13278 ~ core[7d5a]::slice::{impl#0}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3014 ~ core[7d5a]::cmp::min)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:538 ~ rustix[903e]::backend::io::syscalls::close)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:268 ~ libc[9eb8]::unix::{extern#2}::close)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:539 ~ rustix[903e]::backend::io::syscalls::ioctl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:96 ~ rustix[903e]::backend::conv::ret_c_int)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:1171 ~ libc[9eb8]::unix::bsd::{extern#0}::ioctl)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:540 ~ rustix[903e]::backend::io::syscalls::ioctl_readonly)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:539 ~ rustix[903e]::backend::io::syscalls::ioctl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:541 ~ rustix[903e]::backend::io::syscalls::fcntl_getfd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:96 ~ rustix[903e]::backend::conv::ret_c_int)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:249 ~ libc[9eb8]::unix::{extern#2}::fcntl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3423 ~ rustix[903e]::backend::io::types::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1721 ~ core[7d5a]::intrinsics::{extern#1}::transmute)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:542 ~ rustix[903e]::backend::io::syscalls::fcntl_setfd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:93 ~ rustix[903e]::backend::conv::ret)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:249 ~ libc[9eb8]::unix::{extern#2}::fcntl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:543 ~ rustix[903e]::backend::io::syscalls::fcntl_dupfd_cloexec)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:100 ~ rustix[903e]::backend::conv::ret_owned_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:249 ~ libc[9eb8]::unix::{extern#2}::fcntl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] [WARN] arg ct doesnt match up
[DEBUG] Trying to get func ty of defid DefId(0:544 ~ rustix[903e]::backend::io::syscalls::dup)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:100 ~ rustix[903e]::backend::conv::ret_owned_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:269 ~ libc[9eb8]::unix::{extern#2}::dup)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:545 ~ rustix[903e]::backend::io::syscalls::dup2)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:101 ~ rustix[903e]::backend::conv::ret_discarded_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:270 ~ libc[9eb8]::unix::{extern#2}::dup2)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ rustix[903e]::backend::conv::borrowed_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:546 ~ rustix[903e]::backend::io::syscalls::dup3)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:545 ~ rustix[903e]::backend::io::syscalls::dup2)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:553 ~ rustix[903e]::backend::ugid::syscalls::getuid)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:290 ~ libc[9eb8]::unix::{extern#2}::getuid)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1592 ~ rustix[903e]::ugid::{impl#0}::from_raw)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:554 ~ rustix[903e]::backend::ugid::syscalls::geteuid)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:281 ~ libc[9eb8]::unix::{extern#2}::geteuid)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1592 ~ rustix[903e]::ugid::{impl#0}::from_raw)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:555 ~ rustix[903e]::backend::ugid::syscalls::getgid)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:282 ~ libc[9eb8]::unix::{extern#2}::getgid)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1597 ~ rustix[903e]::ugid::{impl#1}::from_raw)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:556 ~ rustix[903e]::backend::ugid::syscalls::getegid)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(20:280 ~ libc[9eb8]::unix::{extern#2}::getegid)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1597 ~ rustix[903e]::ugid::{impl#1}::from_raw)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:599 ~ rustix[903e]::fs::abs::open)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:240 ~ rustix[903e]::backend::fs::syscalls::open)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:602 ~ rustix[903e]::fs::abs::chmod)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:267 ~ rustix[903e]::backend::fs::syscalls::chmod)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:605 ~ rustix[903e]::fs::abs::stat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:257 ~ rustix[903e]::backend::fs::syscalls::stat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:607 ~ rustix[903e]::fs::abs::lstat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:258 ~ rustix[903e]::backend::fs::syscalls::lstat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:609 ~ rustix[903e]::fs::abs::readlink)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:613 ~ rustix[903e]::fs::abs::_readlink)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:613 ~ rustix[903e]::fs::abs::_readlink)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7511 ~ alloc[5873]::vec::{impl#1}::clear)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(5:7440 ~ alloc[5873]::vec::{impl#1}::reserve)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(5:7526 ~ alloc[5873]::vec::{impl#2}::resize)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(5:7439 ~ alloc[5873]::vec::{impl#1}::capacity)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:244 ~ rustix[903e]::backend::fs::syscalls::readlink)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).71), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/abs.rs:128:17: 128:22 (#0), res: Local(HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).67)), segments: [PathSegment { ident: nread#0, hir_id: HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).72), res: Local(HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).67)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/abs.rs:128:17: 128:22 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).73), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).74), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).75), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/abs.rs:128:26: 128:32 (#0), res: Local(HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).4)), segments: [PathSegment { ident: buffer#0, hir_id: HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).76), res: Local(HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/abs.rs:128:26: 128:32 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/abs.rs:128:33: 128:38 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/abs.rs:128:26: 128:38 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).89), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/abs.rs:129:12: 129:17 (#0), res: Local(HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).67)), segments: [PathSegment { ident: nread#0, hir_id: HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).90), res: Local(HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).67)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/abs.rs:129:12: 129:17 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).91), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).92), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).93), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/abs.rs:129:20: 129:26 (#0), res: Local(HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).4)), segments: [PathSegment { ident: buffer#0, hir_id: HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).94), res: Local(HirId(DefId(0:613 ~ rustix[903e]::fs::abs::_readlink).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/abs.rs:129:20: 129:26 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/abs.rs:129:27: 129:32 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/abs.rs:129:20: 129:32 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7526 ~ alloc[5873]::vec::{impl#2}::resize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10419 ~ core[7d5a]::result::{impl#0}::unwrap)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7440 ~ alloc[5873]::vec::{impl#1}::reserve)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7526 ~ alloc[5873]::vec::{impl#2}::resize)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7439 ~ alloc[5873]::vec::{impl#1}::capacity)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:614 ~ rustix[903e]::fs::abs::rename)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:253 ~ rustix[903e]::backend::fs::syscalls::rename)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:619 ~ rustix[903e]::fs::abs::unlink)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:251 ~ rustix[903e]::backend::fs::syscalls::unlink)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:621 ~ rustix[903e]::fs::abs::rmdir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:250 ~ rustix[903e]::backend::fs::syscalls::rmdir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:623 ~ rustix[903e]::fs::abs::link)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:248 ~ rustix[903e]::backend::fs::syscalls::link)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:628 ~ rustix[903e]::fs::abs::symlink)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:255 ~ rustix[903e]::backend::fs::syscalls::symlink)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:633 ~ rustix[903e]::fs::abs::mkdir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:246 ~ rustix[903e]::backend::fs::syscalls::mkdir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:636 ~ rustix[903e]::fs::abs::access)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:260 ~ rustix[903e]::backend::fs::syscalls::access)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:639 ~ rustix[903e]::fs::abs::statfs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:242 ~ rustix[903e]::backend::fs::syscalls::statfs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:641 ~ rustix[903e]::fs::abs::statvfs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:243 ~ rustix[903e]::backend::fs::syscalls::statvfs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:643 ~ rustix[903e]::fs::abs::chown)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:285 ~ rustix[903e]::backend::fs::syscalls::chown)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:677 ~ rustix[903e]::fs::at::openat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:241 ~ rustix[903e]::backend::fs::syscalls::openat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:681 ~ rustix[903e]::fs::at::readlinkat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7511 ~ alloc[5873]::vec::{impl#1}::clear)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7440 ~ alloc[5873]::vec::{impl#1}::reserve)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:245 ~ rustix[903e]::backend::fs::syscalls::readlinkat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7520 ~ alloc[5873]::vec::{impl#1}::spare_capacity_mut)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).63), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:103:23: 103:28 (#0), res: Local(HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).56)), segments: [PathSegment { ident: nread#0, hir_id: HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).64), res: Local(HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).56)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:103:23: 103:28 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).65), kind: MethodCall(PathSegment { ident: capacity#0, hir_id: HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).66), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).67), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:103:32: 103:38 (#0), res: Local(HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).6)), segments: [PathSegment { ident: buffer#0, hir_id: HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).68), res: Local(HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:103:32: 103:38 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:103:39: 103:49 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:103:32: 103:49 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7439 ~ alloc[5873]::vec::{impl#1}::capacity)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).84), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:104:12: 104:17 (#0), res: Local(HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).56)), segments: [PathSegment { ident: nread#0, hir_id: HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).85), res: Local(HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).56)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:104:12: 104:17 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).86), kind: MethodCall(PathSegment { ident: capacity#0, hir_id: HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).87), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).88), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:104:20: 104:26 (#0), res: Local(HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).6)), segments: [PathSegment { ident: buffer#0, hir_id: HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).89), res: Local(HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:104:20: 104:26 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:104:27: 104:37 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:104:20: 104:37 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7439 ~ alloc[5873]::vec::{impl#1}::capacity)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7453 ~ alloc[5873]::vec::{impl#1}::set_len)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(5:4970 ~ alloc[5873]::ffi::c_str::{impl#1}::from_vec_unchecked)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:7440 ~ alloc[5873]::vec::{impl#1}::reserve)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).123), kind: MethodCall(PathSegment { ident: capacity#0, hir_id: HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).124), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).125), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:132:24: 132:30 (#0), res: Local(HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).6)), segments: [PathSegment { ident: buffer#0, hir_id: HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).126), res: Local(HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:132:24: 132:30 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:132:31: 132:41 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:132:24: 132:41 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:686 ~ rustix[903e]::fs::at::_readlinkat).127), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:132:44: 132:45 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/at.rs:132:44: 132:45 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:7439 ~ alloc[5873]::vec::{impl#1}::capacity)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:687 ~ rustix[903e]::fs::at::readlinkat_raw)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:691 ~ rustix[903e]::fs::at::_readlinkat_raw)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:691 ~ rustix[903e]::fs::at::_readlinkat_raw)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:245 ~ rustix[903e]::backend::fs::syscalls::readlinkat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:13131 ~ core[7d5a]::slice::raw::from_raw_parts_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13279 ~ core[7d5a]::slice::{impl#0}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:693 ~ rustix[903e]::fs::at::mkdirat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:247 ~ rustix[903e]::backend::fs::syscalls::mkdirat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:697 ~ rustix[903e]::fs::at::linkat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:249 ~ rustix[903e]::backend::fs::syscalls::linkat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:704 ~ rustix[903e]::fs::at::unlinkat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:252 ~ rustix[903e]::backend::fs::syscalls::unlinkat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:708 ~ rustix[903e]::fs::at::renameat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:254 ~ rustix[903e]::backend::fs::syscalls::renameat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:715 ~ rustix[903e]::fs::at::symlinkat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:256 ~ rustix[903e]::backend::fs::syscalls::symlinkat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:721 ~ rustix[903e]::fs::at::statat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:259 ~ rustix[903e]::backend::fs::syscalls::statat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:725 ~ rustix[903e]::fs::at::accessat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:261 ~ rustix[903e]::backend::fs::syscalls::accessat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:729 ~ rustix[903e]::fs::at::utimensat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:262 ~ rustix[903e]::backend::fs::syscalls::utimensat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:733 ~ rustix[903e]::fs::at::chmodat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:268 ~ rustix[903e]::backend::fs::syscalls::chmodat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:737 ~ rustix[903e]::fs::at::fclonefileat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:269 ~ rustix[903e]::backend::fs::syscalls::fclonefileat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:742 ~ rustix[903e]::fs::at::chownat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:270 ~ rustix[903e]::backend::fs::syscalls::chownat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:760 ~ rustix[903e]::fs::cwd::cwd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4979 ~ std[e3cd]::os::fd::owned::{impl#0}::borrow_raw)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:777 ~ rustix[903e]::fs::fcntl::fcntl_getfl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:271 ~ rustix[903e]::backend::fs::syscalls::fcntl_getfl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:779 ~ rustix[903e]::fs::fcntl::fcntl_setfl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:272 ~ rustix[903e]::backend::fs::syscalls::fcntl_setfl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:781 ~ rustix[903e]::fs::fcntl::fcntl_lock)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:273 ~ rustix[903e]::backend::fs::syscalls::fcntl_lock)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:788 ~ rustix[903e]::fs::fcntl_apple::fcntl_rdadvise)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:318 ~ rustix[903e]::backend::fs::syscalls::fcntl_rdadvise)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:790 ~ rustix[903e]::fs::fcntl_apple::fcntl_fullfsync)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:319 ~ rustix[903e]::backend::fs::syscalls::fcntl_fullfsync)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:792 ~ rustix[903e]::fs::fcntl_apple::fcntl_nocache)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:320 ~ rustix[903e]::backend::fs::syscalls::fcntl_nocache)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:794 ~ rustix[903e]::fs::fcntl_apple::fcntl_global_nocache)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:321 ~ rustix[903e]::backend::fs::syscalls::fcntl_global_nocache)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:803 ~ rustix[903e]::fs::fcopyfile::fcopyfile)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:302 ~ rustix[903e]::backend::fs::syscalls::fcopyfile)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:806 ~ rustix[903e]::fs::fcopyfile::copyfile_state_alloc)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:305 ~ rustix[903e]::backend::fs::syscalls::copyfile_state_alloc)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:807 ~ rustix[903e]::fs::fcopyfile::copyfile_state_free)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:308 ~ rustix[903e]::backend::fs::syscalls::copyfile_state_free)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:808 ~ rustix[903e]::fs::fcopyfile::copyfile_state_get_copied)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:312 ~ rustix[903e]::backend::fs::syscalls::copyfile_state_get_copied)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:809 ~ rustix[903e]::fs::fcopyfile::copyfile_state_get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:313 ~ rustix[903e]::backend::fs::syscalls::copyfile_state_get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3679 ~ rustix[903e]::fs::fd::{impl#1}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:832 ~ rustix[903e]::fs::fd::{impl#0}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10794 ~ core[7d5a]::fmt::builders::{impl#3}::finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11194 ~ core[7d5a]::fmt::{impl#9}::debug_struct)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:833 ~ rustix[903e]::fs::fd::seek)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:282 ~ rustix[903e]::backend::fs::syscalls::seek)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:835 ~ rustix[903e]::fs::fd::tell)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:283 ~ rustix[903e]::backend::fs::syscalls::tell)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:837 ~ rustix[903e]::fs::fd::fchmod)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:284 ~ rustix[903e]::backend::fs::syscalls::fchmod)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:839 ~ rustix[903e]::fs::fd::fchown)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:286 ~ rustix[903e]::backend::fs::syscalls::fchown)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:841 ~ rustix[903e]::fs::fd::fstat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:289 ~ rustix[903e]::backend::fs::syscalls::fstat)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:843 ~ rustix[903e]::fs::fd::fstatfs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:290 ~ rustix[903e]::backend::fs::syscalls::fstatfs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:845 ~ rustix[903e]::fs::fd::fstatvfs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:291 ~ rustix[903e]::backend::fs::syscalls::fstatvfs)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:847 ~ rustix[903e]::fs::fd::futimens)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:293 ~ rustix[903e]::backend::fs::syscalls::futimens)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:849 ~ rustix[903e]::fs::fd::fallocate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:297 ~ rustix[903e]::backend::fs::syscalls::fallocate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:851 ~ rustix[903e]::fs::fd::is_file_read_write)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:853 ~ rustix[903e]::fs::fd::_is_file_read_write)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:853 ~ rustix[903e]::fs::fd::_is_file_read_write)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:271 ~ rustix[903e]::backend::fs::syscalls::fcntl_getfl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:853 ~ rustix[903e]::fs::fd::_is_file_read_write).34), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/fd.rs:277:11: 277:15 (#0), res: Local(HirId(DefId(0:853 ~ rustix[903e]::fs::fd::_is_file_read_write).31)), segments: [PathSegment { ident: mode#0, hir_id: HirId(DefId(0:853 ~ rustix[903e]::fs::fd::_is_file_read_write).35), res: Local(HirId(DefId(0:853 ~ rustix[903e]::fs::fd::_is_file_read_write).31)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/fd.rs:277:11: 277:15 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:853 ~ rustix[903e]::fs::fd::_is_file_read_write).36), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:853 ~ rustix[903e]::fs::fd::_is_file_read_write).38), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/fd.rs:277:18: 277:24 (#0), res: Def(Struct, DefId(0:2220 ~ rustix[903e]::backend::fs::types::OFlags)), segments: [PathSegment { ident: OFlags#0, hir_id: HirId(DefId(0:853 ~ rustix[903e]::fs::fd::_is_file_read_write).37), res: Def(Struct, DefId(0:2220 ~ rustix[903e]::backend::fs::types::OFlags)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/fd.rs:277:18: 277:24 (#0) }, PathSegment { ident: RWMODE#0, hir_id: HirId(DefId(0:853 ~ rustix[903e]::fs::fd::_is_file_read_write).39), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/fd.rs:277:18: 277:32 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:854 ~ rustix[903e]::fs::fd::fsync)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:299 ~ rustix[903e]::backend::fs::syscalls::fsync)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:856 ~ rustix[903e]::fs::fd::ftruncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:300 ~ rustix[903e]::backend::fs::syscalls::ftruncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:858 ~ rustix[903e]::fs::fd::flock)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:287 ~ rustix[903e]::backend::fs::syscalls::flock)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:866 ~ rustix[903e]::fs::getpath::getpath)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:316 ~ rustix[903e]::backend::fs::syscalls::getpath)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:875 ~ rustix[903e]::fs::makedev::makedev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:192 ~ rustix[903e]::backend::fs::makedev::makedev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:876 ~ rustix[903e]::fs::makedev::minor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:194 ~ rustix[903e]::backend::fs::makedev::minor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:877 ~ rustix[903e]::fs::makedev::major)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:193 ~ rustix[903e]::backend::fs::makedev::major)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).26), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572) }, Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).14)), segments: [PathSegment { ident: __self_discr#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).28), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572) }, Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).29), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).24)), segments: [PathSegment { ident: __arg1_discr#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).30), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).24)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).31), kind: Match(Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).32), kind: Tup([Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).33), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:16 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).34), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572) }, Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).35), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).4)), segments: [PathSegment { ident: other#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).36), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572) }, [Arm { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).46), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), pat: Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).45), kind: Tuple([Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).40), kind: TupleStruct(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:18:5: 18:5 (#1572), res: Def(Ctor(Variant, Fn), DefId(0:3682 ~ rustix[903e]::fs::seek_from::SeekFrom::Start::{constructor#0})), segments: [PathSegment { ident: SeekFrom#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).37), res: Def(Enum, DefId(0:3680 ~ rustix[903e]::fs::seek_from::SeekFrom)), args: None, infer_args: true }, PathSegment { ident: Start#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).38), res: Def(Ctor(Variant, Fn), DefId(0:3682 ~ rustix[903e]::fs::seek_from::SeekFrom::Start::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).39), kind: Binding(BindingMode(No, Not), HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).39), __self_0#1572, None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:18:79: 18:82 (#1572), default_binding_modes: true }], None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), default_binding_modes: true }, Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).44), kind: TupleStruct(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:18:5: 18:5 (#1572), res: Def(Ctor(Variant, Fn), DefId(0:3682 ~ rustix[903e]::fs::seek_from::SeekFrom::Start::{constructor#0})), segments: [PathSegment { ident: SeekFrom#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).41), res: Def(Enum, DefId(0:3680 ~ rustix[903e]::fs::seek_from::SeekFrom)), args: None, infer_args: true }, PathSegment { ident: Start#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).42), res: Def(Ctor(Variant, Fn), DefId(0:3682 ~ rustix[903e]::fs::seek_from::SeekFrom::Start::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).43), kind: Binding(BindingMode(No, Not), HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).43), __arg1_0#1572, None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:18:79: 18:82 (#1572), default_binding_modes: true }], None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), default_binding_modes: true }], None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).47), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:18:79: 18:82 (#1572) }, Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).48), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:18:79: 18:82 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).39)), segments: [PathSegment { ident: __self_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).49), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).39)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:18:79: 18:82 (#1572) }, Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).50), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:18:79: 18:82 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).43)), segments: [PathSegment { ident: __arg1_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).51), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).43)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:18:79: 18:82 (#1572) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:18:79: 18:82 (#1572) } }, Arm { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).61), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), pat: Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).60), kind: Tuple([Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).55), kind: TupleStruct(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:26:5: 26:5 (#1572), res: Def(Ctor(Variant, Fn), DefId(0:3685 ~ rustix[903e]::fs::seek_from::SeekFrom::End::{constructor#0})), segments: [PathSegment { ident: SeekFrom#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).52), res: Def(Enum, DefId(0:3680 ~ rustix[903e]::fs::seek_from::SeekFrom)), args: None, infer_args: true }, PathSegment { ident: End#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).53), res: Def(Ctor(Variant, Fn), DefId(0:3685 ~ rustix[903e]::fs::seek_from::SeekFrom::End::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).54), kind: Binding(BindingMode(No, Not), HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).54), __self_0#1572, None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:26:77: 26:80 (#1572), default_binding_modes: true }], None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), default_binding_modes: true }, Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).59), kind: TupleStruct(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:26:5: 26:5 (#1572), res: Def(Ctor(Variant, Fn), DefId(0:3685 ~ rustix[903e]::fs::seek_from::SeekFrom::End::{constructor#0})), segments: [PathSegment { ident: SeekFrom#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).56), res: Def(Enum, DefId(0:3680 ~ rustix[903e]::fs::seek_from::SeekFrom)), args: None, infer_args: true }, PathSegment { ident: End#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).57), res: Def(Ctor(Variant, Fn), DefId(0:3685 ~ rustix[903e]::fs::seek_from::SeekFrom::End::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).58), kind: Binding(BindingMode(No, Not), HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).58), __arg1_0#1572, None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:26:77: 26:80 (#1572), default_binding_modes: true }], None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), default_binding_modes: true }], None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).62), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:26:77: 26:80 (#1572) }, Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).63), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:26:77: 26:80 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).54)), segments: [PathSegment { ident: __self_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).64), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).54)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:26:77: 26:80 (#1572) }, Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).65), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:26:77: 26:80 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).58)), segments: [PathSegment { ident: __arg1_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).66), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).58)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:26:77: 26:80 (#1572) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:26:77: 26:80 (#1572) } }, Arm { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).76), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), pat: Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).75), kind: Tuple([Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).70), kind: TupleStruct(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:34:5: 34:5 (#1572), res: Def(Ctor(Variant, Fn), DefId(0:3688 ~ rustix[903e]::fs::seek_from::SeekFrom::Current::{constructor#0})), segments: [PathSegment { ident: SeekFrom#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).67), res: Def(Enum, DefId(0:3680 ~ rustix[903e]::fs::seek_from::SeekFrom)), args: None, infer_args: true }, PathSegment { ident: Current#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).68), res: Def(Ctor(Variant, Fn), DefId(0:3688 ~ rustix[903e]::fs::seek_from::SeekFrom::Current::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).69), kind: Binding(BindingMode(No, Not), HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).69), __self_0#1572, None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:34:81: 34:84 (#1572), default_binding_modes: true }], None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), default_binding_modes: true }, Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).74), kind: TupleStruct(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:34:5: 34:5 (#1572), res: Def(Ctor(Variant, Fn), DefId(0:3688 ~ rustix[903e]::fs::seek_from::SeekFrom::Current::{constructor#0})), segments: [PathSegment { ident: SeekFrom#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).71), res: Def(Enum, DefId(0:3680 ~ rustix[903e]::fs::seek_from::SeekFrom)), args: None, infer_args: true }, PathSegment { ident: Current#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).72), res: Def(Ctor(Variant, Fn), DefId(0:3688 ~ rustix[903e]::fs::seek_from::SeekFrom::Current::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).73), kind: Binding(BindingMode(No, Not), HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).73), __arg1_0#1572, None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:34:81: 34:84 (#1572), default_binding_modes: true }], None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), default_binding_modes: true }], None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).77), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:34:81: 34:84 (#1572) }, Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).78), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:34:81: 34:84 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).69)), segments: [PathSegment { ident: __self_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).79), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).69)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:34:81: 34:84 (#1572) }, Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).80), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:34:81: 34:84 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).73)), segments: [PathSegment { ident: __arg1_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).81), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).73)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:34:81: 34:84 (#1572) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:34:81: 34:84 (#1572) } }, Arm { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).91), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), pat: Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).90), kind: Tuple([Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).85), kind: TupleStruct(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:44:5: 44:5 (#1572), res: Def(Ctor(Variant, Fn), DefId(0:3691 ~ rustix[903e]::fs::seek_from::SeekFrom::Data::{constructor#0})), segments: [PathSegment { ident: SeekFrom#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).82), res: Def(Enum, DefId(0:3680 ~ rustix[903e]::fs::seek_from::SeekFrom)), args: None, infer_args: true }, PathSegment { ident: Data#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).83), res: Def(Ctor(Variant, Fn), DefId(0:3691 ~ rustix[903e]::fs::seek_from::SeekFrom::Data::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).84), kind: Binding(BindingMode(No, Not), HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).84), __self_0#1572, None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:44:10: 44:13 (#1572), default_binding_modes: true }], None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), default_binding_modes: true }, Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).89), kind: TupleStruct(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:44:5: 44:5 (#1572), res: Def(Ctor(Variant, Fn), DefId(0:3691 ~ rustix[903e]::fs::seek_from::SeekFrom::Data::{constructor#0})), segments: [PathSegment { ident: SeekFrom#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).86), res: Def(Enum, DefId(0:3680 ~ rustix[903e]::fs::seek_from::SeekFrom)), args: None, infer_args: true }, PathSegment { ident: Data#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).87), res: Def(Ctor(Variant, Fn), DefId(0:3691 ~ rustix[903e]::fs::seek_from::SeekFrom::Data::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).88), kind: Binding(BindingMode(No, Not), HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).88), __arg1_0#1572, None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:44:10: 44:13 (#1572), default_binding_modes: true }], None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), default_binding_modes: true }], None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).92), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:44:10: 44:13 (#1572) }, Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).93), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:44:10: 44:13 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).84)), segments: [PathSegment { ident: __self_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).94), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).84)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:44:10: 44:13 (#1572) }, Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).95), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:44:10: 44:13 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).88)), segments: [PathSegment { ident: __arg1_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).96), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).88)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:44:10: 44:13 (#1572) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:44:10: 44:13 (#1572) } }, Arm { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).106), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), pat: Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).105), kind: Tuple([Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).100), kind: TupleStruct(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:52:5: 52:5 (#1572), res: Def(Ctor(Variant, Fn), DefId(0:3694 ~ rustix[903e]::fs::seek_from::SeekFrom::Hole::{constructor#0})), segments: [PathSegment { ident: SeekFrom#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).97), res: Def(Enum, DefId(0:3680 ~ rustix[903e]::fs::seek_from::SeekFrom)), args: None, infer_args: true }, PathSegment { ident: Hole#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).98), res: Def(Ctor(Variant, Fn), DefId(0:3694 ~ rustix[903e]::fs::seek_from::SeekFrom::Hole::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).99), kind: Binding(BindingMode(No, Not), HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).99), __self_0#1572, None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:52:10: 52:13 (#1572), default_binding_modes: true }], None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), default_binding_modes: true }, Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).104), kind: TupleStruct(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:52:5: 52:5 (#1572), res: Def(Ctor(Variant, Fn), DefId(0:3694 ~ rustix[903e]::fs::seek_from::SeekFrom::Hole::{constructor#0})), segments: [PathSegment { ident: SeekFrom#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).101), res: Def(Enum, DefId(0:3680 ~ rustix[903e]::fs::seek_from::SeekFrom)), args: None, infer_args: true }, PathSegment { ident: Hole#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).102), res: Def(Ctor(Variant, Fn), DefId(0:3694 ~ rustix[903e]::fs::seek_from::SeekFrom::Hole::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).103), kind: Binding(BindingMode(No, Not), HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).103), __arg1_0#1572, None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:52:10: 52:13 (#1572), default_binding_modes: true }], None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), default_binding_modes: true }], None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).107), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:52:10: 52:13 (#1572) }, Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).108), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:52:10: 52:13 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).99)), segments: [PathSegment { ident: __self_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).109), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).99)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:52:10: 52:13 (#1572) }, Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).110), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:52:10: 52:13 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).103)), segments: [PathSegment { ident: __arg1_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).111), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).103)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:52:10: 52:13 (#1572) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:52:10: 52:13 (#1572) } }, Arm { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).113), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), pat: Pat { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).112), kind: Wild, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).114), kind: Block(Block { stmts: [], expr: Some(Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).115), kind: Call(Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).116), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:16 (#1572), res: Def(Fn, DefId(2:1708 ~ core[7d5a]::intrinsics::{extern#0}::unreachable)), segments: [PathSegment { ident: $crate#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).117), res: Err, args: None, infer_args: true }, PathSegment { ident: intrinsics#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).118), res: Def(Mod, DefId(2:1290 ~ core[7d5a]::intrinsics)), args: None, infer_args: true }, PathSegment { ident: unreachable#0, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).119), res: Def(Fn, DefId(2:1708 ~ core[7d5a]::intrinsics::{extern#0}::unreachable)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572) }), hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).120), rules: UnsafeBlock(CompilerGenerated), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), targeted_by_break: false }, None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572) } }], Normal), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).14)), segments: [PathSegment { ident: __self_discr#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).28), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).29), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).24)), segments: [PathSegment { ident: __arg1_discr#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).30), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).24)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:13:16: 13:25 (#1572) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).48), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:18:79: 18:82 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).39)), segments: [PathSegment { ident: __self_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).49), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).39)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:18:79: 18:82 (#1572) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).50), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:18:79: 18:82 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).43)), segments: [PathSegment { ident: __arg1_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).51), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).43)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:18:79: 18:82 (#1572) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).63), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:26:77: 26:80 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).54)), segments: [PathSegment { ident: __self_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).64), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).54)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:26:77: 26:80 (#1572) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).65), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:26:77: 26:80 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).58)), segments: [PathSegment { ident: __arg1_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).66), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).58)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:26:77: 26:80 (#1572) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).78), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:34:81: 34:84 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).69)), segments: [PathSegment { ident: __self_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).79), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).69)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:34:81: 34:84 (#1572) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).80), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:34:81: 34:84 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).73)), segments: [PathSegment { ident: __arg1_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).81), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).73)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:34:81: 34:84 (#1572) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).93), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:44:10: 44:13 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).84)), segments: [PathSegment { ident: __self_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).94), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).84)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:44:10: 44:13 (#1572) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).95), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:44:10: 44:13 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).88)), segments: [PathSegment { ident: __arg1_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).96), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).88)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:44:10: 44:13 (#1572) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).108), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:52:10: 52:13 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).99)), segments: [PathSegment { ident: __self_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).109), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).99)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:52:10: 52:13 (#1572) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).110), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:52:10: 52:13 (#1572), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).103)), segments: [PathSegment { ident: __arg1_0#1572, hir_id: HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).111), res: Local(HirId(DefId(0:3699 ~ rustix[903e]::fs::seek_from::{impl#2}::eq).103)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/seek_from.rs:52:10: 52:13 (#1572) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1708 ~ core[7d5a]::intrinsics::{extern#0}::unreachable)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3701 ~ rustix[903e]::fs::seek_from::{impl#3}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3703 ~ rustix[903e]::fs::seek_from::{impl#4}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3705 ~ rustix[903e]::fs::seek_from::{impl#5}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:889 ~ rustix[903e]::fs::sync::sync)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:288 ~ rustix[903e]::backend::fs::syscalls::sync)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3712 ~ rustix[903e]::fs::xattr::{impl#1}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3714 ~ rustix[903e]::fs::xattr::{impl#2}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3717 ~ rustix[903e]::fs::xattr::{impl#4}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3717 ~ rustix[903e]::fs::xattr::{impl#4}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:3717 ~ rustix[903e]::fs::xattr::{impl#4}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/xattr.rs:10:31: 10:31 (#1581), res: Local(HirId(DefId(0:3717 ~ rustix[903e]::fs::xattr::{impl#4}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:3717 ~ rustix[903e]::fs::xattr::{impl#4}::eq).8), res: Local(HirId(DefId(0:3717 ~ rustix[903e]::fs::xattr::{impl#4}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/xattr.rs:10:31: 10:40 (#1581) }, 0#1577), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#1581) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3717 ~ rustix[903e]::fs::xattr::{impl#4}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:3717 ~ rustix[903e]::fs::xattr::{impl#4}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/xattr.rs:10:31: 10:40 (#1581), res: Local(HirId(DefId(0:3717 ~ rustix[903e]::fs::xattr::{impl#4}::eq).4)), segments: [PathSegment { ident: other#1581, hir_id: HirId(DefId(0:3717 ~ rustix[903e]::fs::xattr::{impl#4}::eq).11), res: Local(HirId(DefId(0:3717 ~ rustix[903e]::fs::xattr::{impl#4}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/xattr.rs:10:31: 10:40 (#1581) }, 0#1577), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:17:37: 17:98 (#1581) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3719 ~ rustix[903e]::fs::xattr::{impl#5}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3722 ~ rustix[903e]::fs::xattr::{impl#6}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3727 ~ rustix[903e]::fs::xattr::{impl#8}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3837 ~ rustix[903e]::fs::xattr::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3728 ~ rustix[903e]::fs::xattr::{impl#8}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3840 ~ rustix[903e]::fs::xattr::_::{impl#34}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3735 ~ rustix[903e]::fs::xattr::_::{impl#0}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3739 ~ rustix[903e]::fs::xattr::_::{impl#3}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3739 ~ rustix[903e]::fs::xattr::_::{impl#3}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:3739 ~ rustix[903e]::fs::xattr::_::{impl#3}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:31 (#1599), res: Local(HirId(DefId(0:3739 ~ rustix[903e]::fs::xattr::_::{impl#3}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:3739 ~ rustix[903e]::fs::xattr::_::{impl#3}::eq).8), res: Local(HirId(DefId(0:3739 ~ rustix[903e]::fs::xattr::_::{impl#3}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1599) }, 0#1596), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#1599) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3739 ~ rustix[903e]::fs::xattr::_::{impl#3}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:3739 ~ rustix[903e]::fs::xattr::_::{impl#3}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1599), res: Local(HirId(DefId(0:3739 ~ rustix[903e]::fs::xattr::_::{impl#3}::eq).4)), segments: [PathSegment { ident: other#1599, hir_id: HirId(DefId(0:3739 ~ rustix[903e]::fs::xattr::_::{impl#3}::eq).11), res: Local(HirId(DefId(0:3739 ~ rustix[903e]::fs::xattr::_::{impl#3}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:18:31: 18:40 (#1599) }, 0#1596), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/internal.rs:20:39: 20:41 (#1599) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3741 ~ rustix[903e]::fs::xattr::_::{impl#4}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3743 ~ rustix[903e]::fs::xattr::_::{impl#5}::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3008 ~ core[7d5a]::cmp::PartialOrd::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3745 ~ rustix[903e]::fs::xattr::_::{impl#6}::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3747 ~ rustix[903e]::fs::xattr::_::{impl#7}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3753 ~ rustix[903e]::fs::xattr::_::{impl#9}::default)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3769 ~ rustix[903e]::fs::xattr::_::{impl#16}::empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3755 ~ rustix[903e]::fs::xattr::_::{impl#10}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3776 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11182 ~ core[7d5a]::fmt::{impl#9}::write_fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11123 ~ core[7d5a]::fmt::{impl#2}::new_v1_formatted)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11045 ~ core[7d5a]::fmt::rt::{impl#1}::new_lower_hex)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11026 ~ core[7d5a]::fmt::rt::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11071 ~ core[7d5a]::fmt::rt::{impl#2}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3757 ~ rustix[903e]::fs::xattr::_::{impl#11}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:49 ~ bitflags[64b8]::parser::to_writer)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3760 ~ rustix[903e]::fs::xattr::_::{impl#12}::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:52 ~ bitflags[64b8]::parser::from_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3763 ~ rustix[903e]::fs::xattr::_::{impl#13}::as_ref)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3765 ~ rustix[903e]::fs::xattr::_::{impl#14}::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3774 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_retain)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3769 ~ rustix[903e]::fs::xattr::_::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3837 ~ rustix[903e]::fs::xattr::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).38), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1607), res: Local(HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).11)), segments: [PathSegment { ident: truncated#1607, hir_id: HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).39), res: Local(HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).11)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).40), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1607), res: Local(HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).33)), segments: [PathSegment { ident: flag#1607, hir_id: HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).41), res: Local(HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).33)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1607) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3837 ~ rustix[903e]::fs::xattr::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).73), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1607), res: Local(HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).11)), segments: [PathSegment { ident: truncated#1607, hir_id: HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).74), res: Local(HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).11)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).75), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1607), res: Local(HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).68)), segments: [PathSegment { ident: flag#1607, hir_id: HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).76), res: Local(HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).68)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1607) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3837 ~ rustix[903e]::fs::xattr::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:99 ~ bitflags[64b8]::traits::{impl#0}::value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).108), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1607), res: Local(HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).11)), segments: [PathSegment { ident: truncated#1607, hir_id: HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).109), res: Local(HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).11)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:45: 158:54 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).110), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1607), res: Local(HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).103)), segments: [PathSegment { ident: flag#1607, hir_id: HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).111), res: Local(HirId(DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all).103)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:158:57: 158:61 (#1607) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3774 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3772 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3773 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_truncate)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3772 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits).22), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#1607), res: Local(HirId(DefId(0:3772 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits).19)), segments: [PathSegment { ident: truncated#1607, hir_id: HirId(DefId(0:3772 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits).23), res: Local(HirId(DefId(0:3772 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits).19)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:24: 175:33 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3772 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#1607), res: Local(HirId(DefId(0:3772 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits).7)), segments: [PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3772 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits).25), res: Local(HirId(DefId(0:3772 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:175:37: 175:41 (#1607) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3773 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3773 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_truncate).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#1607), res: Local(HirId(DefId(0:3773 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_truncate).7)), segments: [PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3773 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_truncate).14), res: Local(HirId(DefId(0:3773 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_truncate).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:26: 183:30 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3773 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_truncate).15), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3773 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_truncate).16), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3773 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_truncate).17), kind: Call(Expr { hir_id: HirId(DefId(0:3773 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_truncate).18), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:3773 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_truncate).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#1607), res: SelfTyAlias { alias_to: DefId(0:3768 ~ rustix[903e]::fs::xattr::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1607, hir_id: HirId(DefId(0:3773 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_truncate).19), res: SelfTyAlias { alias_to: DefId(0:3768 ~ rustix[903e]::fs::xattr::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:37 (#1607) }, PathSegment { ident: all#1607, hir_id: HirId(DefId(0:3773 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_truncate).21), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:42 (#1607) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:44 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:45: 183:51 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:183:33: 183:51 (#1607) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3774 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3775 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3775 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_name).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1607), res: Local(HirId(DefId(0:3775 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#1607, hir_id: HirId(DefId(0:3775 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_name).13), res: Local(HirId(DefId(0:3775 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3775 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_name).14), kind: Lit(Spanned { node: Str("CREATE", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1621) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1621) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3837 ~ rustix[903e]::fs::xattr::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3775 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_name).42), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1607), res: Local(HirId(DefId(0:3775 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_name).7)), segments: [PathSegment { ident: name#1607, hir_id: HirId(DefId(0:3775 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_name).43), res: Local(HirId(DefId(0:3775 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_name).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:44: 198:48 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3775 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_name).44), kind: Lit(Spanned { node: Str("REPLACE", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1625) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:198:52: 198:94 (#1625) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3837 ~ rustix[903e]::fs::xattr::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3776 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3776 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_empty).10), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3776 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_empty).11), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3776 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_empty).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#1607), res: Local(HirId(DefId(0:3776 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_empty).7)), segments: [PathSegment { ident: f#1607, hir_id: HirId(DefId(0:3776 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_empty).13), res: Local(HirId(DefId(0:3776 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_empty).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:22 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:23: 213:29 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:21: 213:29 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3776 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_empty).14), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:3776 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_empty).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/xattr.rs:11:28: 11:37 (#0), res: Def(TyAlias, DefId(20:45 ~ libc[9eb8]::unix::c_uint)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:3776 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_empty).16), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: false }, PathSegment { ident: c_uint#0, hir_id: HirId(DefId(0:3776 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_empty).17), res: Def(TyAlias, DefId(20:45 ~ libc[9eb8]::unix::c_uint)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/xattr.rs:11:28: 11:37 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#1607), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#1607, hir_id: HirId(DefId(0:3776 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_empty).18), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#1607, hir_id: HirId(DefId(0:3776 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_empty).19), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#1607, hir_id: HirId(DefId(0:3776 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_empty).20), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:213:33: 213:60 (#1607) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).10), kind: Binary(Spanned { node: BitOr, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:40: 219:41 (#1607) }, Expr { hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1607), res: SelfTyAlias { alias_to: DefId(0:3768 ~ rustix[903e]::fs::xattr::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1607, hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:3768 ~ rustix[903e]::fs::xattr::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1607) }, PathSegment { ident: all#1607, hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#1607) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#1607) }, Expr { hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1607), res: Local(HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1607, hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).21), res: Local(HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#1607) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:50 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).22), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#1607), res: Local(HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1607, hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).25), res: Local(HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:55 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:56: 219:62 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:54: 219:62 (#1607) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).11), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).13), kind: Call(Expr { hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).16), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1607), res: SelfTyAlias { alias_to: DefId(0:3768 ~ rustix[903e]::fs::xattr::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#1607, hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).15), res: SelfTyAlias { alias_to: DefId(0:3768 ~ rustix[903e]::fs::xattr::_::{impl#16}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:25 (#1607) }, PathSegment { ident: all#1607, hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).17), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:30 (#1607) }, []), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:32 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:33: 219:39 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:21: 219:39 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).18), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1607), res: Local(HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).7)), segments: [PathSegment { ident: f#1607, hir_id: HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).21), res: Local(HirId(DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all).7)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:43 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:44: 219:50 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:219:42: 219:50 (#1607) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:30: 223:31 (#1607) }, Expr { hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1607), res: Local(HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#1607, hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).21), res: Local(HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#1607) }, Expr { hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1607), res: Local(HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#1607, hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).25), res: Local(HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#1607) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:44 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).26), kind: Path(Resolved(Some(Ty { hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/xattr.rs:11:28: 11:37 (#0), res: Def(TyAlias, DefId(20:45 ~ libc[9eb8]::unix::c_uint)), segments: [PathSegment { ident: c#0, hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).28), res: Def(Mod, DefId(0:117 ~ rustix[903e]::backend::c)), args: None, infer_args: false }, PathSegment { ident: c_uint#0, hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).29), res: Def(TyAlias, DefId(20:45 ~ libc[9eb8]::unix::c_uint)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/fs/xattr.rs:11:28: 11:37 (#0) }), Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#1607), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), segments: [PathSegment { ident: $crate#1607, hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).30), res: Err, args: None, infer_args: false }, PathSegment { ident: Bits#1607, hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).31), res: Def(Trait, DefId(22:127 ~ bitflags[64b8]::traits::Bits)), args: None, infer_args: false }, PathSegment { ident: EMPTY#1607, hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).32), res: Def(AssocConst, DefId(22:128 ~ bitflags[64b8]::traits::Bits::EMPTY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:48: 223:75 (#1607) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).18), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1607), res: Local(HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).9)), segments: [PathSegment { ident: f#1607, hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).21), res: Local(HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:22 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:23: 223:29 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:21: 223:29 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).22), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1607), res: Local(HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).14)), segments: [PathSegment { ident: other#1607, hir_id: HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).25), res: Local(HirId(DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:37 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:38: 223:44 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:223:32: 223:44 (#1607) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).17), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:30: 227:31 (#1607) }, Expr { hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1607), res: Local(HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).9)), segments: [PathSegment { ident: f#1607, hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).21), res: Local(HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#1607) }, Expr { hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1607), res: Local(HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1607, hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).25), res: Local(HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#1607) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:44 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).26), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#1607), res: Local(HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1607, hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).29), res: Local(HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:53 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:54: 227:60 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:48: 227:60 (#1607) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).18), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).19), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1607), res: Local(HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).9)), segments: [PathSegment { ident: f#1607, hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).21), res: Local(HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:22 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:23: 227:29 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:21: 227:29 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).22), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1607), res: Local(HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).14)), segments: [PathSegment { ident: other#1607, hir_id: HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).25), res: Local(HirId(DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:37 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:38: 227:44 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:227:32: 227:44 (#1607) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3780 ~ rustix[903e]::fs::xattr::_::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3785 ~ rustix[903e]::fs::xattr::_::{impl#16}::union)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:3774 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3781 ~ rustix[903e]::fs::xattr::_::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3786 ~ rustix[903e]::fs::xattr::_::{impl#16}::difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:3774 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3782 ~ rustix[903e]::fs::xattr::_::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3787 ~ rustix[903e]::fs::xattr::_::{impl#16}::symmetric_difference)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:3774 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3783 ~ rustix[903e]::fs::xattr::_::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3780 ~ rustix[903e]::fs::xattr::_::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3781 ~ rustix[903e]::fs::xattr::_::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3784 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3774 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3784 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersection).22), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3784 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersection).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3784 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersection).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#1607), res: Local(HirId(DefId(0:3784 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersection).9)), segments: [PathSegment { ident: f#1607, hir_id: HirId(DefId(0:3784 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersection).25), res: Local(HirId(DefId(0:3784 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersection).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:45 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:46: 251:52 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:44: 251:52 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3784 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersection).26), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3784 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersection).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3784 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersection).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#1607), res: Local(HirId(DefId(0:3784 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersection).14)), segments: [PathSegment { ident: other#1607, hir_id: HirId(DefId(0:3784 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersection).29), res: Local(HirId(DefId(0:3784 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersection).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:60 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:61: 251:67 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:251:55: 251:67 (#1607) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3785 ~ rustix[903e]::fs::xattr::_::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3774 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3785 ~ rustix[903e]::fs::xattr::_::{impl#16}::union).22), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3785 ~ rustix[903e]::fs::xattr::_::{impl#16}::union).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3785 ~ rustix[903e]::fs::xattr::_::{impl#16}::union).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#1607), res: Local(HirId(DefId(0:3785 ~ rustix[903e]::fs::xattr::_::{impl#16}::union).9)), segments: [PathSegment { ident: f#1607, hir_id: HirId(DefId(0:3785 ~ rustix[903e]::fs::xattr::_::{impl#16}::union).25), res: Local(HirId(DefId(0:3785 ~ rustix[903e]::fs::xattr::_::{impl#16}::union).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:45 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:46: 255:52 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:44: 255:52 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3785 ~ rustix[903e]::fs::xattr::_::{impl#16}::union).26), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3785 ~ rustix[903e]::fs::xattr::_::{impl#16}::union).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3785 ~ rustix[903e]::fs::xattr::_::{impl#16}::union).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#1607), res: Local(HirId(DefId(0:3785 ~ rustix[903e]::fs::xattr::_::{impl#16}::union).14)), segments: [PathSegment { ident: other#1607, hir_id: HirId(DefId(0:3785 ~ rustix[903e]::fs::xattr::_::{impl#16}::union).29), res: Local(HirId(DefId(0:3785 ~ rustix[903e]::fs::xattr::_::{impl#16}::union).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:60 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:61: 255:67 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:255:55: 255:67 (#1607) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3786 ~ rustix[903e]::fs::xattr::_::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3774 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3786 ~ rustix[903e]::fs::xattr::_::{impl#16}::difference).22), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3786 ~ rustix[903e]::fs::xattr::_::{impl#16}::difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3786 ~ rustix[903e]::fs::xattr::_::{impl#16}::difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#1607), res: Local(HirId(DefId(0:3786 ~ rustix[903e]::fs::xattr::_::{impl#16}::difference).9)), segments: [PathSegment { ident: f#1607, hir_id: HirId(DefId(0:3786 ~ rustix[903e]::fs::xattr::_::{impl#16}::difference).25), res: Local(HirId(DefId(0:3786 ~ rustix[903e]::fs::xattr::_::{impl#16}::difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:45 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:46: 259:52 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:44: 259:52 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3786 ~ rustix[903e]::fs::xattr::_::{impl#16}::difference).26), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:3786 ~ rustix[903e]::fs::xattr::_::{impl#16}::difference).27), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3786 ~ rustix[903e]::fs::xattr::_::{impl#16}::difference).28), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3786 ~ rustix[903e]::fs::xattr::_::{impl#16}::difference).29), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#1607), res: Local(HirId(DefId(0:3786 ~ rustix[903e]::fs::xattr::_::{impl#16}::difference).14)), segments: [PathSegment { ident: other#1607, hir_id: HirId(DefId(0:3786 ~ rustix[903e]::fs::xattr::_::{impl#16}::difference).30), res: Local(HirId(DefId(0:3786 ~ rustix[903e]::fs::xattr::_::{impl#16}::difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:61 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:62: 259:68 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:56: 259:68 (#1607) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:259:55: 259:68 (#1607) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3787 ~ rustix[903e]::fs::xattr::_::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3774 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3787 ~ rustix[903e]::fs::xattr::_::{impl#16}::symmetric_difference).22), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3787 ~ rustix[903e]::fs::xattr::_::{impl#16}::symmetric_difference).23), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3787 ~ rustix[903e]::fs::xattr::_::{impl#16}::symmetric_difference).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#1607), res: Local(HirId(DefId(0:3787 ~ rustix[903e]::fs::xattr::_::{impl#16}::symmetric_difference).9)), segments: [PathSegment { ident: f#1607, hir_id: HirId(DefId(0:3787 ~ rustix[903e]::fs::xattr::_::{impl#16}::symmetric_difference).25), res: Local(HirId(DefId(0:3787 ~ rustix[903e]::fs::xattr::_::{impl#16}::symmetric_difference).9)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:45 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:46: 263:52 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:44: 263:52 (#1607) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3787 ~ rustix[903e]::fs::xattr::_::{impl#16}::symmetric_difference).26), kind: MethodCall(PathSegment { ident: bits#1607, hir_id: HirId(DefId(0:3787 ~ rustix[903e]::fs::xattr::_::{impl#16}::symmetric_difference).27), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:3787 ~ rustix[903e]::fs::xattr::_::{impl#16}::symmetric_difference).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#1607), res: Local(HirId(DefId(0:3787 ~ rustix[903e]::fs::xattr::_::{impl#16}::symmetric_difference).14)), segments: [PathSegment { ident: other#1607, hir_id: HirId(DefId(0:3787 ~ rustix[903e]::fs::xattr::_::{impl#16}::symmetric_difference).29), res: Local(HirId(DefId(0:3787 ~ rustix[903e]::fs::xattr::_::{impl#16}::symmetric_difference).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:60 (#1607) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:61: 263:67 (#1607)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.6.0/src/public.rs:263:55: 263:67 (#1607) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3788 ~ rustix[903e]::fs::xattr::_::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3773 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3790 ~ rustix[903e]::fs::xattr::_::{impl#17}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3792 ~ rustix[903e]::fs::xattr::_::{impl#18}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3794 ~ rustix[903e]::fs::xattr::_::{impl#19}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3796 ~ rustix[903e]::fs::xattr::_::{impl#20}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3799 ~ rustix[903e]::fs::xattr::_::{impl#21}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3785 ~ rustix[903e]::fs::xattr::_::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3801 ~ rustix[903e]::fs::xattr::_::{impl#22}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3780 ~ rustix[903e]::fs::xattr::_::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3804 ~ rustix[903e]::fs::xattr::_::{impl#23}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3787 ~ rustix[903e]::fs::xattr::_::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3806 ~ rustix[903e]::fs::xattr::_::{impl#24}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3782 ~ rustix[903e]::fs::xattr::_::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3809 ~ rustix[903e]::fs::xattr::_::{impl#25}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3784 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3811 ~ rustix[903e]::fs::xattr::_::{impl#26}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3784 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3774 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3814 ~ rustix[903e]::fs::xattr::_::{impl#27}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3786 ~ rustix[903e]::fs::xattr::_::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3816 ~ rustix[903e]::fs::xattr::_::{impl#28}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3781 ~ rustix[903e]::fs::xattr::_::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3819 ~ rustix[903e]::fs::xattr::_::{impl#29}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3788 ~ rustix[903e]::fs::xattr::_::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3821 ~ rustix[903e]::fs::xattr::_::{impl#30}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3780 ~ rustix[903e]::fs::xattr::_::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3824 ~ rustix[903e]::fs::xattr::_::{impl#31}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3769 ~ rustix[903e]::fs::xattr::_::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3828 ~ rustix[903e]::fs::xattr::_::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3840 ~ rustix[903e]::fs::xattr::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3840 ~ rustix[903e]::fs::xattr::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3829 ~ rustix[903e]::fs::xattr::_::{impl#32}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3840 ~ rustix[903e]::fs::xattr::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3840 ~ rustix[903e]::fs::xattr::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3833 ~ rustix[903e]::fs::xattr::_::{impl#33}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3828 ~ rustix[903e]::fs::xattr::_::{impl#32}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3767 ~ rustix[903e]::fs::xattr::_::{impl#15}::bits_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3835 ~ rustix[903e]::fs::xattr::_::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3769 ~ rustix[903e]::fs::xattr::_::{impl#16}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3836 ~ rustix[903e]::fs::xattr::_::{impl#34}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3770 ~ rustix[903e]::fs::xattr::_::{impl#16}::all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3837 ~ rustix[903e]::fs::xattr::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3771 ~ rustix[903e]::fs::xattr::_::{impl#16}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3838 ~ rustix[903e]::fs::xattr::_::{impl#34}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3772 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3839 ~ rustix[903e]::fs::xattr::_::{impl#34}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3773 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_truncate)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3840 ~ rustix[903e]::fs::xattr::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3774 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3841 ~ rustix[903e]::fs::xattr::_::{impl#34}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3775 ~ rustix[903e]::fs::xattr::_::{impl#16}::from_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3842 ~ rustix[903e]::fs::xattr::_::{impl#34}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3776 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3843 ~ rustix[903e]::fs::xattr::_::{impl#34}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3777 ~ rustix[903e]::fs::xattr::_::{impl#16}::is_all)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3844 ~ rustix[903e]::fs::xattr::_::{impl#34}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3778 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersects)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3845 ~ rustix[903e]::fs::xattr::_::{impl#34}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3779 ~ rustix[903e]::fs::xattr::_::{impl#16}::contains)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3846 ~ rustix[903e]::fs::xattr::_::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3780 ~ rustix[903e]::fs::xattr::_::{impl#16}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3847 ~ rustix[903e]::fs::xattr::_::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3781 ~ rustix[903e]::fs::xattr::_::{impl#16}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3848 ~ rustix[903e]::fs::xattr::_::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3782 ~ rustix[903e]::fs::xattr::_::{impl#16}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3849 ~ rustix[903e]::fs::xattr::_::{impl#34}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3783 ~ rustix[903e]::fs::xattr::_::{impl#16}::set)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3850 ~ rustix[903e]::fs::xattr::_::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3784 ~ rustix[903e]::fs::xattr::_::{impl#16}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3851 ~ rustix[903e]::fs::xattr::_::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3785 ~ rustix[903e]::fs::xattr::_::{impl#16}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3852 ~ rustix[903e]::fs::xattr::_::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3786 ~ rustix[903e]::fs::xattr::_::{impl#16}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3853 ~ rustix[903e]::fs::xattr::_::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3787 ~ rustix[903e]::fs::xattr::_::{impl#16}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3854 ~ rustix[903e]::fs::xattr::_::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3788 ~ rustix[903e]::fs::xattr::_::{impl#16}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3856 ~ rustix[903e]::fs::xattr::_::{impl#35}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11146 ~ core[7d5a]::fmt::Binary::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3858 ~ rustix[903e]::fs::xattr::_::{impl#36}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11144 ~ core[7d5a]::fmt::Octal::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3860 ~ rustix[903e]::fs::xattr::_::{impl#37}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11148 ~ core[7d5a]::fmt::LowerHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3862 ~ rustix[903e]::fs::xattr::_::{impl#38}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11150 ~ core[7d5a]::fmt::UpperHex::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3865 ~ rustix[903e]::fs::xattr::_::{impl#39}::bitor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3851 ~ rustix[903e]::fs::xattr::_::{impl#34}::union)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3867 ~ rustix[903e]::fs::xattr::_::{impl#40}::bitor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3846 ~ rustix[903e]::fs::xattr::_::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3870 ~ rustix[903e]::fs::xattr::_::{impl#41}::bitxor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3853 ~ rustix[903e]::fs::xattr::_::{impl#34}::symmetric_difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3872 ~ rustix[903e]::fs::xattr::_::{impl#42}::bitxor_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3848 ~ rustix[903e]::fs::xattr::_::{impl#34}::toggle)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3875 ~ rustix[903e]::fs::xattr::_::{impl#43}::bitand)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3850 ~ rustix[903e]::fs::xattr::_::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3877 ~ rustix[903e]::fs::xattr::_::{impl#44}::bitand_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3850 ~ rustix[903e]::fs::xattr::_::{impl#34}::intersection)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3840 ~ rustix[903e]::fs::xattr::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3837 ~ rustix[903e]::fs::xattr::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3880 ~ rustix[903e]::fs::xattr::_::{impl#45}::sub)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3852 ~ rustix[903e]::fs::xattr::_::{impl#34}::difference)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3882 ~ rustix[903e]::fs::xattr::_::{impl#46}::sub_assign)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3847 ~ rustix[903e]::fs::xattr::_::{impl#34}::remove)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3885 ~ rustix[903e]::fs::xattr::_::{impl#47}::not)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3854 ~ rustix[903e]::fs::xattr::_::{impl#34}::complement)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3887 ~ rustix[903e]::fs::xattr::_::{impl#48}::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3846 ~ rustix[903e]::fs::xattr::_::{impl#34}::insert)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3890 ~ rustix[903e]::fs::xattr::_::{impl#49}::from_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3835 ~ rustix[903e]::fs::xattr::_::{impl#34}::empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:8717 ~ core[7d5a]::iter::traits::collect::Extend::extend)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3894 ~ rustix[903e]::fs::xattr::_::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:20 ~ bitflags[64b8]::iter::{impl#1}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3840 ~ rustix[903e]::fs::xattr::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3837 ~ rustix[903e]::fs::xattr::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3840 ~ rustix[903e]::fs::xattr::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3837 ~ rustix[903e]::fs::xattr::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3895 ~ rustix[903e]::fs::xattr::_::{impl#50}::iter_names)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(22:36 ~ bitflags[64b8]::iter::{impl#4}::__private_const_new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3840 ~ rustix[903e]::fs::xattr::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3837 ~ rustix[903e]::fs::xattr::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3840 ~ rustix[903e]::fs::xattr::_::{impl#34}::from_bits_retain)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3837 ~ rustix[903e]::fs::xattr::_::{impl#34}::bits)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3899 ~ rustix[903e]::fs::xattr::_::{impl#51}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3894 ~ rustix[903e]::fs::xattr::_::{impl#50}::iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:898 ~ rustix[903e]::fs::xattr::getxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:339 ~ rustix[903e]::backend::fs::syscalls::getxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:903 ~ rustix[903e]::fs::xattr::lgetxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:340 ~ rustix[903e]::backend::fs::syscalls::lgetxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:908 ~ rustix[903e]::fs::xattr::fgetxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:341 ~ rustix[903e]::backend::fs::syscalls::fgetxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:912 ~ rustix[903e]::fs::xattr::setxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:342 ~ rustix[903e]::backend::fs::syscalls::setxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:917 ~ rustix[903e]::fs::xattr::lsetxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:343 ~ rustix[903e]::backend::fs::syscalls::lsetxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:922 ~ rustix[903e]::fs::xattr::fsetxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:344 ~ rustix[903e]::backend::fs::syscalls::fsetxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:926 ~ rustix[903e]::fs::xattr::listxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:345 ~ rustix[903e]::backend::fs::syscalls::listxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:929 ~ rustix[903e]::fs::xattr::llistxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:346 ~ rustix[903e]::backend::fs::syscalls::llistxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:932 ~ rustix[903e]::fs::xattr::flistxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:347 ~ rustix[903e]::backend::fs::syscalls::flistxattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:934 ~ rustix[903e]::fs::xattr::removexattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:348 ~ rustix[903e]::backend::fs::syscalls::removexattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:939 ~ rustix[903e]::fs::xattr::lremovexattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:349 ~ rustix[903e]::backend::fs::syscalls::lremovexattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:944 ~ rustix[903e]::fs::xattr::fremovexattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:350 ~ rustix[903e]::backend::fs::syscalls::fremovexattr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:977 ~ rustix[903e]::fs::{impl#0}::atime)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:978 ~ rustix[903e]::fs::{impl#0}::mtime)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:979 ~ rustix[903e]::fs::{impl#0}::ctime)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:984 ~ rustix[903e]::io::close::close)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:538 ~ rustix[903e]::backend::io::syscalls::close)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:992 ~ rustix[903e]::io::dup::dup)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:544 ~ rustix[903e]::backend::io::syscalls::dup)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:994 ~ rustix[903e]::io::dup::dup2)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:545 ~ rustix[903e]::backend::io::syscalls::dup2)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:996 ~ rustix[903e]::io::dup::dup3)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:546 ~ rustix[903e]::backend::io::syscalls::dup3)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1008 ~ rustix[903e]::io::errno::{impl#0}::kind)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:3258 ~ std[e3cd]::io::error::{impl#8}::kind)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:3166 ~ core[7d5a]::convert::From::from)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1010 ~ rustix[903e]::io::errno::{impl#1}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3166 ~ core[7d5a]::convert::From::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1012 ~ rustix[903e]::io::errno::{impl#2}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11137 ~ core[7d5a]::fmt::Debug::fmt)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:3166 ~ core[7d5a]::convert::From::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1015 ~ rustix[903e]::io::errno::{impl#4}::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:3251 ~ std[e3cd]::io::error::{impl#8}::from_raw_os_error)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:496 ~ rustix[903e]::backend::io::errno::{impl#1}::raw_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1016 ~ rustix[903e]::io::errno::retry_on_intr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1016 ~ rustix[903e]::io::errno::retry_on_intr).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/io/errno.rs:67:15: 67:16 (#0), res: Local(HirId(DefId(0:1016 ~ rustix[903e]::io::errno::retry_on_intr).2)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1016 ~ rustix[903e]::io::errno::retry_on_intr).7), res: Local(HirId(DefId(0:1016 ~ rustix[903e]::io::errno::retry_on_intr).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/io/errno.rs:67:15: 67:16 (#0) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1016 ~ rustix[903e]::io::errno::retry_on_intr).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/io/errno.rs:67:15: 67:16 (#0), res: Local(HirId(DefId(0:1016 ~ rustix[903e]::io::errno::retry_on_intr).2)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1016 ~ rustix[903e]::io::errno::retry_on_intr).7), res: Local(HirId(DefId(0:1016 ~ rustix[903e]::io::errno::retry_on_intr).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/io/errno.rs:67:15: 67:16 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:1028 ~ rustix[903e]::io::fcntl::fcntl_getfd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:541 ~ rustix[903e]::backend::io::syscalls::fcntl_getfd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1030 ~ rustix[903e]::io::fcntl::fcntl_setfd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:542 ~ rustix[903e]::backend::io::syscalls::fcntl_setfd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1032 ~ rustix[903e]::io::fcntl::fcntl_dupfd_cloexec)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:543 ~ rustix[903e]::backend::io::syscalls::fcntl_dupfd_cloexec)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1041 ~ rustix[903e]::io::ioctl::ioctl_fioclex)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1119 ~ rustix[903e]::ioctl::patterns::{impl#1}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1265 ~ rustix[903e]::ioctl::ioctl)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1044 ~ rustix[903e]::io::ioctl::ioctl_fionbio)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1160 ~ rustix[903e]::ioctl::patterns::{impl#7}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:3163 ~ core[7d5a]::convert::Into::into)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1265 ~ rustix[903e]::ioctl::ioctl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1047 ~ rustix[903e]::io::ioctl::ioctl_fionread)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1139 ~ rustix[903e]::ioctl::patterns::{impl#4}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1265 ~ rustix[903e]::ioctl::ioctl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1061 ~ rustix[903e]::io::read_write::read)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:529 ~ rustix[903e]::backend::io::syscalls::read)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13279 ~ core[7d5a]::slice::{impl#0}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1063 ~ rustix[903e]::io::read_write::read_uninit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:529 ~ rustix[903e]::backend::io::syscalls::read)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13279 ~ core[7d5a]::slice::{impl#0}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:7 ~ rustix[903e]::buffer::split_init)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1065 ~ rustix[903e]::io::read_write::write)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:530 ~ rustix[903e]::backend::io::syscalls::write)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1067 ~ rustix[903e]::io::read_write::pread)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:531 ~ rustix[903e]::backend::io::syscalls::pread)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13279 ~ core[7d5a]::slice::{impl#0}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1069 ~ rustix[903e]::io::read_write::pread_uninit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:531 ~ rustix[903e]::backend::io::syscalls::pread)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13279 ~ core[7d5a]::slice::{impl#0}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:7 ~ rustix[903e]::buffer::split_init)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1071 ~ rustix[903e]::io::read_write::pwrite)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:532 ~ rustix[903e]::backend::io::syscalls::pwrite)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1073 ~ rustix[903e]::io::read_write::readv)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:533 ~ rustix[903e]::backend::io::syscalls::readv)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1075 ~ rustix[903e]::io::read_write::writev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:534 ~ rustix[903e]::backend::io::syscalls::writev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1077 ~ rustix[903e]::io::read_write::preadv)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:535 ~ rustix[903e]::backend::io::syscalls::preadv)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1079 ~ rustix[903e]::io::read_write::pwritev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:536 ~ rustix[903e]::backend::io::syscalls::pwritev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1116 ~ rustix[903e]::ioctl::patterns::{impl#0}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10817 ~ core[7d5a]::fmt::builders::{impl#4}::finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:10810 ~ core[7d5a]::fmt::builders::{impl#4}::field)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:11208 ~ core[7d5a]::fmt::{impl#9}::debug_tuple)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1119 ~ rustix[903e]::ioctl::patterns::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1125 ~ rustix[903e]::ioctl::patterns::{impl#2}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2754 ~ core[7d5a]::ptr::null_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1126 ~ rustix[903e]::ioctl::patterns::{impl#2}::output_from_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1135 ~ rustix[903e]::ioctl::patterns::{impl#3}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10817 ~ core[7d5a]::fmt::builders::{impl#4}::finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10810 ~ core[7d5a]::fmt::builders::{impl#4}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11208 ~ core[7d5a]::fmt::{impl#9}::debug_tuple)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1139 ~ rustix[903e]::ioctl::patterns::{impl#4}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2048 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::uninit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1146 ~ rustix[903e]::ioctl::patterns::{impl#5}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2057 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1147 ~ rustix[903e]::ioctl::patterns::{impl#5}::output_from_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2697 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::read)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1156 ~ rustix[903e]::ioctl::patterns::{impl#6}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10817 ~ core[7d5a]::fmt::builders::{impl#4}::finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10810 ~ core[7d5a]::fmt::builders::{impl#4}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10810 ~ core[7d5a]::fmt::builders::{impl#4}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11208 ~ core[7d5a]::fmt::{impl#9}::debug_tuple)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1160 ~ rustix[903e]::ioctl::patterns::{impl#7}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1167 ~ rustix[903e]::ioctl::patterns::{impl#8}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1168 ~ rustix[903e]::ioctl::patterns::{impl#8}::output_from_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1179 ~ rustix[903e]::ioctl::patterns::{impl#9}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1187 ~ rustix[903e]::ioctl::patterns::{impl#10}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1188 ~ rustix[903e]::ioctl::patterns::{impl#10}::output_from_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1195 ~ rustix[903e]::ioctl::patterns::{impl#11}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1201 ~ rustix[903e]::ioctl::patterns::{impl#12}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1202 ~ rustix[903e]::ioctl::patterns::{impl#12}::output_from_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).36), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:15:33: 15:37 (#0), res: Def(Const, DefId(0:1261 ~ rustix[903e]::ioctl::bsd::READ)), segments: [PathSegment { ident: READ#0, hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).37), res: Def(Const, DefId(0:1261 ~ rustix[903e]::ioctl::bsd::READ)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:15:33: 15:37 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).38), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:15:40: 15:45 (#0), res: Def(Const, DefId(0:1262 ~ rustix[903e]::ioctl::bsd::WRITE)), segments: [PathSegment { ident: WRITE#0, hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).39), res: Def(Const, DefId(0:1262 ~ rustix[903e]::ioctl::bsd::WRITE)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:15:40: 15:45 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).43), kind: Binary(Spanned { node: BitOr, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:15: 18:16 (#0) }, Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).44), kind: Binary(Spanned { node: BitOr, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:9: 18:10 (#0) }, Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).45), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:5: 18:8 (#0), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).41)), segments: [PathSegment { ident: dir#0, hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).46), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).41)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:5: 18:8 (#0) }, Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).47), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:11: 18:14 (#0), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).6)), segments: [PathSegment { ident: num#0, hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).48), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:11: 18:14 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:5: 18:14 (#0) }, Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).49), kind: Binary(Spanned { node: Shl, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:24: 18:26 (#0) }, Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).50), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:18: 18:23 (#0), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).4)), segments: [PathSegment { ident: group#0, hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).51), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:18: 18:23 (#0) }, Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).52), kind: Lit(Spanned { node: Int(Pu128(8), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:27: 18:28 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:27: 18:28 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:17: 18:29 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:5: 18:29 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).53), kind: Binary(Spanned { node: Shl, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:56: 18:58 (#0) }, Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).54), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:39: 18:40 (#0) }, Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).55), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:34: 18:38 (#0), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).8)), segments: [PathSegment { ident: size#0, hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).56), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).8)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:34: 18:38 (#0) }, Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).57), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:41: 18:54 (#0), res: Def(Const, DefId(0:1263 ~ rustix[903e]::ioctl::bsd::IOCPARAM_MASK)), segments: [PathSegment { ident: IOCPARAM_MASK#0, hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).58), res: Def(Const, DefId(0:1263 ~ rustix[903e]::ioctl::bsd::IOCPARAM_MASK)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:41: 18:54 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:33: 18:55 (#0) }, Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).59), kind: Lit(Spanned { node: Int(Pu128(16), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:59: 18:61 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:59: 18:61 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:32: 18:62 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).44), kind: Binary(Spanned { node: BitOr, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:9: 18:10 (#0) }, Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).45), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:5: 18:8 (#0), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).41)), segments: [PathSegment { ident: dir#0, hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).46), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).41)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:5: 18:8 (#0) }, Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).47), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:11: 18:14 (#0), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).6)), segments: [PathSegment { ident: num#0, hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).48), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:11: 18:14 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:5: 18:14 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).49), kind: Binary(Spanned { node: Shl, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:24: 18:26 (#0) }, Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).50), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:18: 18:23 (#0), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).4)), segments: [PathSegment { ident: group#0, hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).51), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:18: 18:23 (#0) }, Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).52), kind: Lit(Spanned { node: Int(Pu128(8), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:27: 18:28 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:27: 18:28 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:17: 18:29 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).45), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:5: 18:8 (#0), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).41)), segments: [PathSegment { ident: dir#0, hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).46), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).41)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:5: 18:8 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).47), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:11: 18:14 (#0), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).6)), segments: [PathSegment { ident: num#0, hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).48), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:11: 18:14 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).50), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:18: 18:23 (#0), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).4)), segments: [PathSegment { ident: group#0, hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).51), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:18: 18:23 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).52), kind: Lit(Spanned { node: Int(Pu128(8), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:27: 18:28 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:27: 18:28 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).54), kind: Binary(Spanned { node: BitAnd, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:39: 18:40 (#0) }, Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).55), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:34: 18:38 (#0), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).8)), segments: [PathSegment { ident: size#0, hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).56), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).8)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:34: 18:38 (#0) }, Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).57), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:41: 18:54 (#0), res: Def(Const, DefId(0:1263 ~ rustix[903e]::ioctl::bsd::IOCPARAM_MASK)), segments: [PathSegment { ident: IOCPARAM_MASK#0, hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).58), res: Def(Const, DefId(0:1263 ~ rustix[903e]::ioctl::bsd::IOCPARAM_MASK)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:41: 18:54 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:33: 18:55 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).59), kind: Lit(Spanned { node: Int(Pu128(16), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:59: 18:61 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:59: 18:61 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).55), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:34: 18:38 (#0), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).8)), segments: [PathSegment { ident: size#0, hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).56), res: Local(HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).8)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:34: 18:38 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).57), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:41: 18:54 (#0), res: Def(Const, DefId(0:1263 ~ rustix[903e]::ioctl::bsd::IOCPARAM_MASK)), segments: [PathSegment { ident: IOCPARAM_MASK#0, hir_id: HirId(DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode).58), res: Def(Const, DefId(0:1263 ~ rustix[903e]::ioctl::bsd::IOCPARAM_MASK)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/bsd.rs:18:41: 18:54 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1265 ~ rustix[903e]::ioctl::ioctl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5000 ~ std[e3cd]::os::fd::owned::AsFd::as_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1287 ~ rustix[903e]::ioctl::{impl#0}::raw)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1274 ~ rustix[903e]::ioctl::Ioctl::as_ptr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1268 ~ rustix[903e]::ioctl::_ioctl)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1269 ~ rustix[903e]::ioctl::_ioctl_readonly)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1275 ~ rustix[903e]::ioctl::Ioctl::output_from_ptr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1268 ~ rustix[903e]::ioctl::_ioctl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:539 ~ rustix[903e]::backend::io::syscalls::ioctl)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1269 ~ rustix[903e]::ioctl::_ioctl_readonly)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:540 ~ rustix[903e]::backend::io::syscalls::ioctl_readonly)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3903 ~ rustix[903e]::ioctl::{impl#1}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11196 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field1_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3906 ~ rustix[903e]::ioctl::{impl#3}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3909 ~ rustix[903e]::ioctl::{impl#5}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3909 ~ rustix[903e]::ioctl::{impl#5}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:3909 ~ rustix[903e]::ioctl::{impl#5}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:192:30: 192:30 (#1637), res: Local(HirId(DefId(0:3909 ~ rustix[903e]::ioctl::{impl#5}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:3909 ~ rustix[903e]::ioctl::{impl#5}::eq).8), res: Local(HirId(DefId(0:3909 ~ rustix[903e]::ioctl::{impl#5}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:192:30: 192:39 (#1637) }, raw#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:195:5: 195:19 (#1637) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3909 ~ rustix[903e]::ioctl::{impl#5}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:3909 ~ rustix[903e]::ioctl::{impl#5}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:192:30: 192:39 (#1637), res: Local(HirId(DefId(0:3909 ~ rustix[903e]::ioctl::{impl#5}::eq).4)), segments: [PathSegment { ident: other#1637, hir_id: HirId(DefId(0:3909 ~ rustix[903e]::ioctl::{impl#5}::eq).11), res: Local(HirId(DefId(0:3909 ~ rustix[903e]::ioctl::{impl#5}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:192:30: 192:39 (#1637) }, raw#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:195:5: 195:19 (#1637) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3911 ~ rustix[903e]::ioctl::{impl#6}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3913 ~ rustix[903e]::ioctl::{impl#7}::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3008 ~ core[7d5a]::cmp::PartialOrd::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3915 ~ rustix[903e]::ioctl::{impl#8}::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3917 ~ rustix[903e]::ioctl::{impl#9}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1277 ~ rustix[903e]::ioctl::{impl#0}::old)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1278 ~ rustix[903e]::ioctl::{impl#0}::from_components)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1278 ~ rustix[903e]::ioctl::{impl#0}::from_components).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:221:13: 221:22 (#0), res: Local(HirId(DefId(0:1278 ~ rustix[903e]::ioctl::{impl#0}::from_components).8)), segments: [PathSegment { ident: data_size#0, hir_id: HirId(DefId(0:1278 ~ rustix[903e]::ioctl::{impl#0}::from_components).13), res: Local(HirId(DefId(0:1278 ~ rustix[903e]::ioctl::{impl#0}::from_components).8)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:221:13: 221:22 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1278 ~ rustix[903e]::ioctl::{impl#0}::from_components).14), kind: Cast(Expr { hir_id: HirId(DefId(0:1278 ~ rustix[903e]::ioctl::{impl#0}::from_components).15), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:1278 ~ rustix[903e]::ioctl::{impl#0}::from_components).17), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:221:26: 221:35 (#0), res: Def(TyAlias, DefId(0:1289 ~ rustix[903e]::ioctl::RawOpcode)), segments: [PathSegment { ident: RawOpcode#0, hir_id: HirId(DefId(0:1278 ~ rustix[903e]::ioctl::{impl#0}::from_components).16), res: Def(TyAlias, DefId(0:1289 ~ rustix[903e]::ioctl::RawOpcode)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:221:26: 221:35 (#0) }, PathSegment { ident: MAX#0, hir_id: HirId(DefId(0:1278 ~ rustix[903e]::ioctl::{impl#0}::from_components).18), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:221:26: 221:40 (#0) }, Ty { hir_id: HirId(DefId(0:1278 ~ rustix[903e]::ioctl::{impl#0}::from_components).19), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:221:44: 221:49 (#0), res: PrimTy(Uint(Usize)), segments: [PathSegment { ident: usize#0, hir_id: HirId(DefId(0:1278 ~ rustix[903e]::ioctl::{impl#0}::from_components).20), res: PrimTy(Uint(Usize)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:221:44: 221:49 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:221:26: 221:49 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10015 ~ core[7d5a]::panicking::panic_fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11113 ~ core[7d5a]::fmt::{impl#2}::new_const)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1277 ~ rustix[903e]::ioctl::{impl#0}::old)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1259 ~ rustix[903e]::ioctl::bsd::compose_opcode)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1279 ~ rustix[903e]::ioctl::{impl#0}::none)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1278 ~ rustix[903e]::ioctl::{impl#0}::from_components)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2158 ~ core[7d5a]::mem::size_of)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1281 ~ rustix[903e]::ioctl::{impl#0}::read)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1278 ~ rustix[903e]::ioctl::{impl#0}::from_components)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2158 ~ core[7d5a]::mem::size_of)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1283 ~ rustix[903e]::ioctl::{impl#0}::write)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1278 ~ rustix[903e]::ioctl::{impl#0}::from_components)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2158 ~ core[7d5a]::mem::size_of)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1285 ~ rustix[903e]::ioctl::{impl#0}::read_write)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1278 ~ rustix[903e]::ioctl::{impl#0}::from_components)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2158 ~ core[7d5a]::mem::size_of)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1287 ~ rustix[903e]::ioctl::{impl#0}::raw)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3929 ~ rustix[903e]::ioctl::{impl#10}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11181 ~ core[7d5a]::fmt::{impl#9}::write_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3932 ~ rustix[903e]::ioctl::{impl#12}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3935 ~ rustix[903e]::ioctl::{impl#14}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3935 ~ rustix[903e]::ioctl::{impl#14}::eq).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:285:30: 285:39 (#1649), res: Local(HirId(DefId(0:3935 ~ rustix[903e]::ioctl::{impl#14}::eq).14)), segments: [PathSegment { ident: __self_discr#1649, hir_id: HirId(DefId(0:3935 ~ rustix[903e]::ioctl::{impl#14}::eq).27), res: Local(HirId(DefId(0:3935 ~ rustix[903e]::ioctl::{impl#14}::eq).14)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:285:30: 285:39 (#1649) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3935 ~ rustix[903e]::ioctl::{impl#14}::eq).28), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:285:30: 285:39 (#1649), res: Local(HirId(DefId(0:3935 ~ rustix[903e]::ioctl::{impl#14}::eq).24)), segments: [PathSegment { ident: __arg1_discr#1649, hir_id: HirId(DefId(0:3935 ~ rustix[903e]::ioctl::{impl#14}::eq).29), res: Local(HirId(DefId(0:3935 ~ rustix[903e]::ioctl::{impl#14}::eq).24)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ioctl/mod.rs:285:30: 285:39 (#1649) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3937 ~ rustix[903e]::ioctl::{impl#15}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3939 ~ rustix[903e]::ioctl::{impl#16}::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3008 ~ core[7d5a]::cmp::PartialOrd::partial_cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3941 ~ rustix[903e]::ioctl::{impl#17}::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3943 ~ rustix[903e]::ioctl::{impl#18}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:1919 ~ core[7d5a]::intrinsics::{extern#1}::discriminant_value)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1328 ~ rustix[903e]::path::arg::option_into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1325 ~ rustix[903e]::path::arg::Arg::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1328 ~ rustix[903e]::path::arg::option_into_with_c_str).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:100:33: 100:34 (#0), res: Local(HirId(DefId(0:1328 ~ rustix[903e]::path::arg::option_into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1328 ~ rustix[903e]::path::arg::option_into_with_c_str).21), res: Local(HirId(DefId(0:1328 ~ rustix[903e]::path::arg::option_into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:100:33: 100:34 (#0) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1328 ~ rustix[903e]::path::arg::option_into_with_c_str).32), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:102:9: 102:10 (#0), res: Local(HirId(DefId(0:1328 ~ rustix[903e]::path::arg::option_into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1328 ~ rustix[903e]::path::arg::option_into_with_c_str).33), res: Local(HirId(DefId(0:1328 ~ rustix[903e]::path::arg::option_into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:102:9: 102:10 (#0) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1328 ~ rustix[903e]::path::arg::option_into_with_c_str).20), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:100:33: 100:34 (#0), res: Local(HirId(DefId(0:1328 ~ rustix[903e]::path::arg::option_into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1328 ~ rustix[903e]::path::arg::option_into_with_c_str).21), res: Local(HirId(DefId(0:1328 ~ rustix[903e]::path::arg::option_into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:100:33: 100:34 (#0) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1328 ~ rustix[903e]::path::arg::option_into_with_c_str).32), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:102:9: 102:10 (#0), res: Local(HirId(DefId(0:1328 ~ rustix[903e]::path::arg::option_into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1328 ~ rustix[903e]::path::arg::option_into_with_c_str).33), res: Local(HirId(DefId(0:1328 ~ rustix[903e]::path::arg::option_into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:102:9: 102:10 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:1334 ~ rustix[903e]::path::arg::{impl#0}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1335 ~ rustix[903e]::path::arg::{impl#0}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1336 ~ rustix[903e]::path::arg::{impl#0}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1338 ~ rustix[903e]::path::arg::{impl#0}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1341 ~ rustix[903e]::path::arg::{impl#0}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:14306 ~ core[7d5a]::str::{impl#0}::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1345 ~ rustix[903e]::path::arg::{impl#1}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1346 ~ rustix[903e]::path::arg::{impl#1}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1347 ~ rustix[903e]::path::arg::{impl#1}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5988 ~ alloc[5873]::string::{impl#0}::as_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1349 ~ rustix[903e]::path::arg::{impl#1}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1323 ~ rustix[903e]::path::arg::Arg::into_c_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(5:5988 ~ alloc[5873]::string::{impl#0}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1351 ~ rustix[903e]::path::arg::{impl#1}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:6002 ~ alloc[5873]::string::{impl#0}::as_bytes)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1355 ~ rustix[903e]::path::arg::{impl#2}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1356 ~ rustix[903e]::path::arg::{impl#2}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1357 ~ rustix[903e]::path::arg::{impl#2}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5988 ~ alloc[5873]::string::{impl#0}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1359 ~ rustix[903e]::path::arg::{impl#2}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1362 ~ rustix[903e]::path::arg::{impl#2}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1362 ~ rustix[903e]::path::arg::{impl#2}::into_with_c_str).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:225:9: 225:10 (#0), res: Local(HirId(DefId(0:1362 ~ rustix[903e]::path::arg::{impl#2}::into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1362 ~ rustix[903e]::path::arg::{impl#2}::into_with_c_str).7), res: Local(HirId(DefId(0:1362 ~ rustix[903e]::path::arg::{impl#2}::into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:225:9: 225:10 (#0) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1362 ~ rustix[903e]::path::arg::{impl#2}::into_with_c_str).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:225:9: 225:10 (#0), res: Local(HirId(DefId(0:1362 ~ rustix[903e]::path::arg::{impl#2}::into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1362 ~ rustix[903e]::path::arg::{impl#2}::into_with_c_str).7), res: Local(HirId(DefId(0:1362 ~ rustix[903e]::path::arg::{impl#2}::into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:225:9: 225:10 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:1367 ~ rustix[903e]::path::arg::{impl#3}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9688 ~ core[7d5a]::option::{impl#0}::ok_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2269 ~ std[e3cd]::ffi::os_str::{impl#23}::to_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1368 ~ rustix[903e]::path::arg::{impl#3}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2270 ~ std[e3cd]::ffi::os_str::{impl#23}::to_string_lossy)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1369 ~ rustix[903e]::path::arg::{impl#3}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1371 ~ rustix[903e]::path::arg::{impl#3}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1374 ~ rustix[903e]::path::arg::{impl#3}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1378 ~ rustix[903e]::path::arg::{impl#4}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9688 ~ core[7d5a]::option::{impl#0}::ok_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2269 ~ std[e3cd]::ffi::os_str::{impl#23}::to_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2194 ~ std[e3cd]::ffi::os_str::{impl#2}::as_os_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1379 ~ rustix[903e]::path::arg::{impl#4}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2270 ~ std[e3cd]::ffi::os_str::{impl#23}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2194 ~ std[e3cd]::ffi::os_str::{impl#2}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1380 ~ rustix[903e]::path::arg::{impl#4}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2194 ~ std[e3cd]::ffi::os_str::{impl#2}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1382 ~ rustix[903e]::path::arg::{impl#4}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1323 ~ rustix[903e]::path::arg::Arg::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2194 ~ std[e3cd]::ffi::os_str::{impl#2}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1384 ~ rustix[903e]::path::arg::{impl#4}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1388 ~ rustix[903e]::path::arg::{impl#5}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9688 ~ core[7d5a]::option::{impl#0}::ok_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2269 ~ std[e3cd]::ffi::os_str::{impl#23}::to_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2194 ~ std[e3cd]::ffi::os_str::{impl#2}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1389 ~ rustix[903e]::path::arg::{impl#5}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2270 ~ std[e3cd]::ffi::os_str::{impl#23}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2194 ~ std[e3cd]::ffi::os_str::{impl#2}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1390 ~ rustix[903e]::path::arg::{impl#5}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1392 ~ rustix[903e]::path::arg::{impl#5}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4242 ~ std[e3cd]::os::unix::ffi::os_str::OsStringExt::into_vec)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1395 ~ rustix[903e]::path::arg::{impl#5}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1395 ~ rustix[903e]::path::arg::{impl#5}::into_with_c_str).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:350:9: 350:10 (#0), res: Local(HirId(DefId(0:1395 ~ rustix[903e]::path::arg::{impl#5}::into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1395 ~ rustix[903e]::path::arg::{impl#5}::into_with_c_str).7), res: Local(HirId(DefId(0:1395 ~ rustix[903e]::path::arg::{impl#5}::into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:350:9: 350:10 (#0) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1395 ~ rustix[903e]::path::arg::{impl#5}::into_with_c_str).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:350:9: 350:10 (#0), res: Local(HirId(DefId(0:1395 ~ rustix[903e]::path::arg::{impl#5}::into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1395 ~ rustix[903e]::path::arg::{impl#5}::into_with_c_str).7), res: Local(HirId(DefId(0:1395 ~ rustix[903e]::path::arg::{impl#5}::into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:350:9: 350:10 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:1400 ~ rustix[903e]::path::arg::{impl#6}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9688 ~ core[7d5a]::option::{impl#0}::ok_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2269 ~ std[e3cd]::ffi::os_str::{impl#23}::to_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5428 ~ std[e3cd]::path::{impl#63}::as_os_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1401 ~ rustix[903e]::path::arg::{impl#6}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5431 ~ std[e3cd]::path::{impl#63}::to_string_lossy)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1402 ~ rustix[903e]::path::arg::{impl#6}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5428 ~ std[e3cd]::path::{impl#63}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1404 ~ rustix[903e]::path::arg::{impl#6}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5428 ~ std[e3cd]::path::{impl#63}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1407 ~ rustix[903e]::path::arg::{impl#6}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5428 ~ std[e3cd]::path::{impl#63}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1411 ~ rustix[903e]::path::arg::{impl#7}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9688 ~ core[7d5a]::option::{impl#0}::ok_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2269 ~ std[e3cd]::ffi::os_str::{impl#23}::to_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5428 ~ std[e3cd]::path::{impl#63}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5309 ~ std[e3cd]::path::{impl#29}::as_path)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1412 ~ rustix[903e]::path::arg::{impl#7}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5431 ~ std[e3cd]::path::{impl#63}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5309 ~ std[e3cd]::path::{impl#29}::as_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1413 ~ rustix[903e]::path::arg::{impl#7}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5428 ~ std[e3cd]::path::{impl#63}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5309 ~ std[e3cd]::path::{impl#29}::as_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1415 ~ rustix[903e]::path::arg::{impl#7}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1323 ~ rustix[903e]::path::arg::Arg::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5309 ~ std[e3cd]::path::{impl#29}::as_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1417 ~ rustix[903e]::path::arg::{impl#7}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5428 ~ std[e3cd]::path::{impl#63}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1421 ~ rustix[903e]::path::arg::{impl#8}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9688 ~ core[7d5a]::option::{impl#0}::ok_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2269 ~ std[e3cd]::ffi::os_str::{impl#23}::to_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5428 ~ std[e3cd]::path::{impl#63}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1422 ~ rustix[903e]::path::arg::{impl#8}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2270 ~ std[e3cd]::ffi::os_str::{impl#23}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5428 ~ std[e3cd]::path::{impl#63}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1423 ~ rustix[903e]::path::arg::{impl#8}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5428 ~ std[e3cd]::path::{impl#63}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1425 ~ rustix[903e]::path::arg::{impl#8}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4242 ~ std[e3cd]::os::unix::ffi::os_str::OsStringExt::into_vec)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5328 ~ std[e3cd]::path::{impl#29}::into_os_string)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1428 ~ rustix[903e]::path::arg::{impl#8}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1428 ~ rustix[903e]::path::arg::{impl#8}::into_with_c_str).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:478:9: 478:10 (#0), res: Local(HirId(DefId(0:1428 ~ rustix[903e]::path::arg::{impl#8}::into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1428 ~ rustix[903e]::path::arg::{impl#8}::into_with_c_str).7), res: Local(HirId(DefId(0:1428 ~ rustix[903e]::path::arg::{impl#8}::into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:478:9: 478:10 (#0) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1428 ~ rustix[903e]::path::arg::{impl#8}::into_with_c_str).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:478:9: 478:10 (#0), res: Local(HirId(DefId(0:1428 ~ rustix[903e]::path::arg::{impl#8}::into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1428 ~ rustix[903e]::path::arg::{impl#8}::into_with_c_str).7), res: Local(HirId(DefId(0:1428 ~ rustix[903e]::path::arg::{impl#8}::into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:478:9: 478:10 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:1433 ~ rustix[903e]::path::arg::{impl#9}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:5506 ~ core[7d5a]::ffi::c_str::{impl#6}::to_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1435 ~ rustix[903e]::path::arg::{impl#9}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5063 ~ alloc[5873]::ffi::c_str::{impl#34}::to_string_lossy)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1436 ~ rustix[903e]::path::arg::{impl#9}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1437 ~ rustix[903e]::path::arg::{impl#9}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1439 ~ rustix[903e]::path::arg::{impl#9}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1439 ~ rustix[903e]::path::arg::{impl#9}::into_with_c_str).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:518:9: 518:10 (#0), res: Local(HirId(DefId(0:1439 ~ rustix[903e]::path::arg::{impl#9}::into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1439 ~ rustix[903e]::path::arg::{impl#9}::into_with_c_str).7), res: Local(HirId(DefId(0:1439 ~ rustix[903e]::path::arg::{impl#9}::into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:518:9: 518:10 (#0) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1439 ~ rustix[903e]::path::arg::{impl#9}::into_with_c_str).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:518:9: 518:10 (#0), res: Local(HirId(DefId(0:1439 ~ rustix[903e]::path::arg::{impl#9}::into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1439 ~ rustix[903e]::path::arg::{impl#9}::into_with_c_str).7), res: Local(HirId(DefId(0:1439 ~ rustix[903e]::path::arg::{impl#9}::into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:518:9: 518:10 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:1443 ~ rustix[903e]::path::arg::{impl#10}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1444 ~ rustix[903e]::path::arg::{impl#10}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1445 ~ rustix[903e]::path::arg::{impl#10}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1446 ~ rustix[903e]::path::arg::{impl#10}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1448 ~ rustix[903e]::path::arg::{impl#10}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1448 ~ rustix[903e]::path::arg::{impl#10}::into_with_c_str).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:556:9: 556:10 (#0), res: Local(HirId(DefId(0:1448 ~ rustix[903e]::path::arg::{impl#10}::into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1448 ~ rustix[903e]::path::arg::{impl#10}::into_with_c_str).7), res: Local(HirId(DefId(0:1448 ~ rustix[903e]::path::arg::{impl#10}::into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:556:9: 556:10 (#0) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1448 ~ rustix[903e]::path::arg::{impl#10}::into_with_c_str).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:556:9: 556:10 (#0), res: Local(HirId(DefId(0:1448 ~ rustix[903e]::path::arg::{impl#10}::into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1448 ~ rustix[903e]::path::arg::{impl#10}::into_with_c_str).7), res: Local(HirId(DefId(0:1448 ~ rustix[903e]::path::arg::{impl#10}::into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:556:9: 556:10 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:1452 ~ rustix[903e]::path::arg::{impl#11}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:5506 ~ core[7d5a]::ffi::c_str::{impl#6}::to_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1454 ~ rustix[903e]::path::arg::{impl#11}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5063 ~ alloc[5873]::ffi::c_str::{impl#34}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1455 ~ rustix[903e]::path::arg::{impl#11}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1456 ~ rustix[903e]::path::arg::{impl#11}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1458 ~ rustix[903e]::path::arg::{impl#11}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1458 ~ rustix[903e]::path::arg::{impl#11}::into_with_c_str).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:594:9: 594:10 (#0), res: Local(HirId(DefId(0:1458 ~ rustix[903e]::path::arg::{impl#11}::into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1458 ~ rustix[903e]::path::arg::{impl#11}::into_with_c_str).7), res: Local(HirId(DefId(0:1458 ~ rustix[903e]::path::arg::{impl#11}::into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:594:9: 594:10 (#0) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1458 ~ rustix[903e]::path::arg::{impl#11}::into_with_c_str).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:594:9: 594:10 (#0), res: Local(HirId(DefId(0:1458 ~ rustix[903e]::path::arg::{impl#11}::into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1458 ~ rustix[903e]::path::arg::{impl#11}::into_with_c_str).7), res: Local(HirId(DefId(0:1458 ~ rustix[903e]::path::arg::{impl#11}::into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:594:9: 594:10 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:1463 ~ rustix[903e]::path::arg::{impl#12}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1464 ~ rustix[903e]::path::arg::{impl#12}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1465 ~ rustix[903e]::path::arg::{impl#12}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3157 ~ core[7d5a]::convert::AsRef::as_ref)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1467 ~ rustix[903e]::path::arg::{impl#12}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1470 ~ rustix[903e]::path::arg::{impl#12}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:14306 ~ core[7d5a]::str::{impl#0}::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1475 ~ rustix[903e]::path::arg::{impl#13}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9688 ~ core[7d5a]::option::{impl#0}::ok_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2269 ~ std[e3cd]::ffi::os_str::{impl#23}::to_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1476 ~ rustix[903e]::path::arg::{impl#13}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2270 ~ std[e3cd]::ffi::os_str::{impl#23}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1477 ~ rustix[903e]::path::arg::{impl#13}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1479 ~ rustix[903e]::path::arg::{impl#13}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4242 ~ std[e3cd]::os::unix::ffi::os_str::OsStringExt::into_vec)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1482 ~ rustix[903e]::path::arg::{impl#13}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1487 ~ rustix[903e]::path::arg::{impl#14}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:5506 ~ core[7d5a]::ffi::c_str::{impl#6}::to_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1489 ~ rustix[903e]::path::arg::{impl#14}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2868 ~ core[7d5a]::borrow::Borrow::borrow)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:5063 ~ alloc[5873]::ffi::c_str::{impl#34}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1490 ~ rustix[903e]::path::arg::{impl#14}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1491 ~ rustix[903e]::path::arg::{impl#14}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1493 ~ rustix[903e]::path::arg::{impl#14}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1493 ~ rustix[903e]::path::arg::{impl#14}::into_with_c_str).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:726:9: 726:10 (#0), res: Local(HirId(DefId(0:1493 ~ rustix[903e]::path::arg::{impl#14}::into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1493 ~ rustix[903e]::path::arg::{impl#14}::into_with_c_str).7), res: Local(HirId(DefId(0:1493 ~ rustix[903e]::path::arg::{impl#14}::into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:726:9: 726:10 (#0) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1493 ~ rustix[903e]::path::arg::{impl#14}::into_with_c_str).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:726:9: 726:10 (#0), res: Local(HirId(DefId(0:1493 ~ rustix[903e]::path::arg::{impl#14}::into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1493 ~ rustix[903e]::path::arg::{impl#14}::into_with_c_str).7), res: Local(HirId(DefId(0:1493 ~ rustix[903e]::path::arg::{impl#14}::into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:726:9: 726:10 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:1498 ~ rustix[903e]::path::arg::{impl#15}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9688 ~ core[7d5a]::option::{impl#0}::ok_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2269 ~ std[e3cd]::ffi::os_str::{impl#23}::to_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5220 ~ std[e3cd]::path::{impl#6}::as_os_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1499 ~ rustix[903e]::path::arg::{impl#15}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2270 ~ std[e3cd]::ffi::os_str::{impl#23}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5220 ~ std[e3cd]::path::{impl#6}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1500 ~ rustix[903e]::path::arg::{impl#15}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5220 ~ std[e3cd]::path::{impl#6}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1502 ~ rustix[903e]::path::arg::{impl#15}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5220 ~ std[e3cd]::path::{impl#6}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1505 ~ rustix[903e]::path::arg::{impl#15}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5220 ~ std[e3cd]::path::{impl#6}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1510 ~ rustix[903e]::path::arg::{impl#16}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9688 ~ core[7d5a]::option::{impl#0}::ok_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5430 ~ std[e3cd]::path::{impl#63}::to_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:5241 ~ std[e3cd]::path::{impl#10}::as_path)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1511 ~ rustix[903e]::path::arg::{impl#16}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5431 ~ std[e3cd]::path::{impl#63}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5241 ~ std[e3cd]::path::{impl#10}::as_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1512 ~ rustix[903e]::path::arg::{impl#16}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5428 ~ std[e3cd]::path::{impl#63}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5241 ~ std[e3cd]::path::{impl#10}::as_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1514 ~ rustix[903e]::path::arg::{impl#16}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5428 ~ std[e3cd]::path::{impl#63}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5241 ~ std[e3cd]::path::{impl#10}::as_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1517 ~ rustix[903e]::path::arg::{impl#16}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5428 ~ std[e3cd]::path::{impl#63}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5241 ~ std[e3cd]::path::{impl#10}::as_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1522 ~ rustix[903e]::path::arg::{impl#17}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:9688 ~ core[7d5a]::option::{impl#0}::ok_or)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5430 ~ std[e3cd]::path::{impl#63}::to_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5266 ~ std[e3cd]::path::{impl#14}::as_path)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:1523 ~ rustix[903e]::path::arg::{impl#17}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5431 ~ std[e3cd]::path::{impl#63}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5266 ~ std[e3cd]::path::{impl#14}::as_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1524 ~ rustix[903e]::path::arg::{impl#17}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5428 ~ std[e3cd]::path::{impl#63}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5266 ~ std[e3cd]::path::{impl#14}::as_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1526 ~ rustix[903e]::path::arg::{impl#17}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5428 ~ std[e3cd]::path::{impl#63}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5266 ~ std[e3cd]::path::{impl#14}::as_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1529 ~ rustix[903e]::path::arg::{impl#17}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:4248 ~ std[e3cd]::os::unix::ffi::os_str::OsStrExt::as_bytes)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5428 ~ std[e3cd]::path::{impl#63}::as_os_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:5266 ~ std[e3cd]::path::{impl#14}::as_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1533 ~ rustix[903e]::path::arg::{impl#18}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13518 ~ core[7d5a]::str::converts::from_utf8)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1535 ~ rustix[903e]::path::arg::{impl#18}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5967 ~ alloc[5873]::string::{impl#0}::from_utf8_lossy)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1536 ~ rustix[903e]::path::arg::{impl#18}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1538 ~ rustix[903e]::path::arg::{impl#18}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1541 ~ rustix[903e]::path::arg::{impl#18}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1545 ~ rustix[903e]::path::arg::{impl#19}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13518 ~ core[7d5a]::str::converts::from_utf8)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1547 ~ rustix[903e]::path::arg::{impl#19}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5967 ~ alloc[5873]::string::{impl#0}::from_utf8_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1548 ~ rustix[903e]::path::arg::{impl#19}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7448 ~ alloc[5873]::vec::{impl#1}::as_slice)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1550 ~ rustix[903e]::path::arg::{impl#19}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7448 ~ alloc[5873]::vec::{impl#1}::as_slice)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1553 ~ rustix[903e]::path::arg::{impl#19}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1557 ~ rustix[903e]::path::arg::{impl#20}::as_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13518 ~ core[7d5a]::str::converts::from_utf8)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1559 ~ rustix[903e]::path::arg::{impl#20}::to_string_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:5967 ~ alloc[5873]::string::{impl#0}::from_utf8_lossy)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1560 ~ rustix[903e]::path::arg::{impl#20}::as_cow_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:7448 ~ alloc[5873]::vec::{impl#1}::as_slice)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1562 ~ rustix[903e]::path::arg::{impl#20}::into_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:4956 ~ alloc[5873]::ffi::c_str::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1565 ~ rustix[903e]::path::arg::{impl#20}::into_with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1565 ~ rustix[903e]::path::arg::{impl#20}::into_with_c_str).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:981:9: 981:10 (#0), res: Local(HirId(DefId(0:1565 ~ rustix[903e]::path::arg::{impl#20}::into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1565 ~ rustix[903e]::path::arg::{impl#20}::into_with_c_str).7), res: Local(HirId(DefId(0:1565 ~ rustix[903e]::path::arg::{impl#20}::into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:981:9: 981:10 (#0) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1565 ~ rustix[903e]::path::arg::{impl#20}::into_with_c_str).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:981:9: 981:10 (#0), res: Local(HirId(DefId(0:1565 ~ rustix[903e]::path::arg::{impl#20}::into_with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1565 ~ rustix[903e]::path::arg::{impl#20}::into_with_c_str).7), res: Local(HirId(DefId(0:1565 ~ rustix[903e]::path::arg::{impl#20}::into_with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:981:9: 981:10 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).7), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).8), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1037:8: 1037:13 (#0), res: Local(HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).2)), segments: [PathSegment { ident: bytes#0, hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).10), res: Local(HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1037:8: 1037:13 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1037:14: 1037:19 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1037:8: 1037:19 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1037:23: 1037:45 (#0), res: Def(Const, DefId(0:1580 ~ rustix[903e]::path::SMALL_PATH_BUFFER_SIZE)), segments: [PathSegment { ident: SMALL_PATH_BUFFER_SIZE#0, hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).12), res: Def(Const, DefId(0:1580 ~ rustix[903e]::path::SMALL_PATH_BUFFER_SIZE)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1037:23: 1037:45 (#0) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1573 ~ rustix[903e]::path::arg::with_c_str_slow_path)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2048 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::uninit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2655 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::cast)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2057 ~ core[7d5a]::mem::maybe_uninit::{impl#2}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).58), kind: Binary(Spanned { node: Add, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1047:31: 1047:32 (#0) }, Expr { hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).59), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).60), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).61), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1047:19: 1047:24 (#0), res: Local(HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).2)), segments: [PathSegment { ident: bytes#0, hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).62), res: Local(HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1047:19: 1047:24 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1047:25: 1047:30 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1047:19: 1047:30 (#0) }, Expr { hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).63), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1047:33: 1047:34 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1047:33: 1047:34 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1047:19: 1047:34 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).64), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1047:38: 1047:60 (#0), res: Def(Const, DefId(0:1580 ~ rustix[903e]::path::SMALL_PATH_BUFFER_SIZE)), segments: [PathSegment { ident: SMALL_PATH_BUFFER_SIZE#0, hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).65), res: Def(Const, DefId(0:1580 ~ rustix[903e]::path::SMALL_PATH_BUFFER_SIZE)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1047:38: 1047:60 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).59), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).60), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).61), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1047:19: 1047:24 (#0), res: Local(HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).2)), segments: [PathSegment { ident: bytes#0, hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).62), res: Local(HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1047:19: 1047:24 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1047:25: 1047:30 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1047:19: 1047:30 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).63), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1047:33: 1047:34 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1047:33: 1047:34 (#0) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"rustix"}), Specific({"rustix"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:10023 ~ core[7d5a]::panicking::panic)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:1980 ~ core[7d5a]::intrinsics::copy_nonoverlapping)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:13278 ~ core[7d5a]::slice::{impl#0}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2705 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::write)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:2689 ~ core[7d5a]::ptr::mut_ptr::{impl#0}::add)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:5495 ~ core[7d5a]::ffi::c_str::{impl#6}::from_bytes_with_nul)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:13128 ~ core[7d5a]::slice::raw::from_raw_parts)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).123), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).124), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).125), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1059:77: 1059:82 (#0), res: Local(HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).2)), segments: [PathSegment { ident: bytes#0, hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).126), res: Local(HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1059:77: 1059:82 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1059:83: 1059:88 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1059:77: 1059:88 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).127), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1059:91: 1059:92 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1059:91: 1059:92 (#0) }
[DEBUG] Trying to get func ty of defid DefId(2:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).134), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1060:18: 1060:19 (#0), res: Local(HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).135), res: Local(HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1060:18: 1060:19 (#0) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).134), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1060:18: 1060:19 (#0), res: Local(HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).135), res: Local(HirId(DefId(0:1569 ~ rustix[903e]::path::arg::with_c_str).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1060:18: 1060:19 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:1573 ~ rustix[903e]::path::arg::with_c_str_slow_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1573 ~ rustix[903e]::path::arg::with_c_str_slow_path).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1075:9: 1075:10 (#0), res: Local(HirId(DefId(0:1573 ~ rustix[903e]::path::arg::with_c_str_slow_path).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1573 ~ rustix[903e]::path::arg::with_c_str_slow_path).8), res: Local(HirId(DefId(0:1573 ~ rustix[903e]::path::arg::with_c_str_slow_path).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1075:9: 1075:10 (#0) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:1573 ~ rustix[903e]::path::arg::with_c_str_slow_path).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1075:9: 1075:10 (#0), res: Local(HirId(DefId(0:1573 ~ rustix[903e]::path::arg::with_c_str_slow_path).4)), segments: [PathSegment { ident: f#0, hir_id: HirId(DefId(0:1573 ~ rustix[903e]::path::arg::with_c_str_slow_path).8), res: Local(HirId(DefId(0:1573 ~ rustix[903e]::path::arg::with_c_str_slow_path).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/path/arg.rs:1075:9: 1075:10 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:3950 ~ rustix[903e]::ugid::{impl#3}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3952 ~ rustix[903e]::ugid::{impl#4}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3955 ~ rustix[903e]::ugid::{impl#6}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3955 ~ rustix[903e]::ugid::{impl#6}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:3955 ~ rustix[903e]::ugid::{impl#6}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:16:27: 16:27 (#1663), res: Local(HirId(DefId(0:3955 ~ rustix[903e]::ugid::{impl#6}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:3955 ~ rustix[903e]::ugid::{impl#6}::eq).8), res: Local(HirId(DefId(0:3955 ~ rustix[903e]::ugid::{impl#6}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:16:27: 16:36 (#1663) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:17:16: 17:22 (#1663) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3955 ~ rustix[903e]::ugid::{impl#6}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:3955 ~ rustix[903e]::ugid::{impl#6}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:16:27: 16:36 (#1663), res: Local(HirId(DefId(0:3955 ~ rustix[903e]::ugid::{impl#6}::eq).4)), segments: [PathSegment { ident: other#1663, hir_id: HirId(DefId(0:3955 ~ rustix[903e]::ugid::{impl#6}::eq).11), res: Local(HirId(DefId(0:3955 ~ rustix[903e]::ugid::{impl#6}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:16:27: 16:36 (#1663) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:17:16: 17:22 (#1663) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3957 ~ rustix[903e]::ugid::{impl#7}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3959 ~ rustix[903e]::ugid::{impl#8}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3966 ~ rustix[903e]::ugid::{impl#10}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3968 ~ rustix[903e]::ugid::{impl#11}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:3971 ~ rustix[903e]::ugid::{impl#13}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:3971 ~ rustix[903e]::ugid::{impl#13}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:3971 ~ rustix[903e]::ugid::{impl#13}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:21:27: 21:27 (#1669), res: Local(HirId(DefId(0:3971 ~ rustix[903e]::ugid::{impl#13}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:3971 ~ rustix[903e]::ugid::{impl#13}::eq).8), res: Local(HirId(DefId(0:3971 ~ rustix[903e]::ugid::{impl#13}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:21:27: 21:36 (#1669) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:22:16: 22:22 (#1669) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:3971 ~ rustix[903e]::ugid::{impl#13}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:3971 ~ rustix[903e]::ugid::{impl#13}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:21:27: 21:36 (#1669), res: Local(HirId(DefId(0:3971 ~ rustix[903e]::ugid::{impl#13}::eq).4)), segments: [PathSegment { ident: other#1669, hir_id: HirId(DefId(0:3971 ~ rustix[903e]::ugid::{impl#13}::eq).11), res: Local(HirId(DefId(0:3971 ~ rustix[903e]::ugid::{impl#13}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:21:27: 21:36 (#1669) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:22:16: 22:22 (#1669) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3973 ~ rustix[903e]::ugid::{impl#14}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:3975 ~ rustix[903e]::ugid::{impl#15}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1592 ~ rustix[903e]::ugid::{impl#0}::from_raw)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1593 ~ rustix[903e]::ugid::{impl#0}::as_raw)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1594 ~ rustix[903e]::ugid::{impl#0}::is_root)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1594 ~ rustix[903e]::ugid::{impl#0}::is_root).4), kind: Field(Expr { hir_id: HirId(DefId(0:1594 ~ rustix[903e]::ugid::{impl#0}::is_root).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:47:9: 47:13 (#0), res: Local(HirId(DefId(0:1594 ~ rustix[903e]::ugid::{impl#0}::is_root).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:1594 ~ rustix[903e]::ugid::{impl#0}::is_root).6), res: Local(HirId(DefId(0:1594 ~ rustix[903e]::ugid::{impl#0}::is_root).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:47:9: 47:13 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:47:9: 47:15 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1594 ~ rustix[903e]::ugid::{impl#0}::is_root).7), kind: Field(Expr { hir_id: HirId(DefId(0:1594 ~ rustix[903e]::ugid::{impl#0}::is_root).8), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:1594 ~ rustix[903e]::ugid::{impl#0}::is_root).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:47:19: 47:23 (#0), res: SelfTyAlias { alias_to: DefId(0:1590 ~ rustix[903e]::ugid::{impl#0}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#0, hir_id: HirId(DefId(0:1594 ~ rustix[903e]::ugid::{impl#0}::is_root).9), res: SelfTyAlias { alias_to: DefId(0:1590 ~ rustix[903e]::ugid::{impl#0}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:47:19: 47:23 (#0) }, PathSegment { ident: ROOT#0, hir_id: HirId(DefId(0:1594 ~ rustix[903e]::ugid::{impl#0}::is_root).11), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:47:19: 47:29 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:47:19: 47:31 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1597 ~ rustix[903e]::ugid::{impl#1}::from_raw)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1598 ~ rustix[903e]::ugid::{impl#1}::as_raw)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1599 ~ rustix[903e]::ugid::{impl#1}::is_root)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:1599 ~ rustix[903e]::ugid::{impl#1}::is_root).4), kind: Field(Expr { hir_id: HirId(DefId(0:1599 ~ rustix[903e]::ugid::{impl#1}::is_root).5), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:74:9: 74:13 (#0), res: Local(HirId(DefId(0:1599 ~ rustix[903e]::ugid::{impl#1}::is_root).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:1599 ~ rustix[903e]::ugid::{impl#1}::is_root).6), res: Local(HirId(DefId(0:1599 ~ rustix[903e]::ugid::{impl#1}::is_root).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:74:9: 74:13 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:74:9: 74:15 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:1599 ~ rustix[903e]::ugid::{impl#1}::is_root).7), kind: Field(Expr { hir_id: HirId(DefId(0:1599 ~ rustix[903e]::ugid::{impl#1}::is_root).8), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:1599 ~ rustix[903e]::ugid::{impl#1}::is_root).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:74:19: 74:23 (#0), res: SelfTyAlias { alias_to: DefId(0:1595 ~ rustix[903e]::ugid::{impl#1}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#0, hir_id: HirId(DefId(0:1599 ~ rustix[903e]::ugid::{impl#1}::is_root).9), res: SelfTyAlias { alias_to: DefId(0:1595 ~ rustix[903e]::ugid::{impl#1}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:74:19: 74:23 (#0) }, PathSegment { ident: ROOT#0, hir_id: HirId(DefId(0:1599 ~ rustix[903e]::ugid::{impl#1}::is_root).11), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:74:19: 74:29 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-0.38.39/src/ugid.rs:74:19: 74:31 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:1600 ~ rustix[903e]::ugid::translate_fchown_args)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1593 ~ rustix[903e]::ugid::{impl#0}::as_raw)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:1598 ~ rustix[903e]::ugid::{impl#1}::as_raw)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
