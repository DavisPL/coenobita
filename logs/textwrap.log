[DEBUG] Trying to get func ty of defid DefId(0:10 ~ textwrap[3f03]::indentation::indent)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:5963 ~ alloc[5873]::string::{impl#0}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:14330 ~ core[7d5a]::str::{impl#0}::lines)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:9015 ~ core[7d5a]::iter::traits::iterator::Iterator::any)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:14325 ~ core[7d5a]::str::{impl#0}::chars)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:5311 ~ core[7d5a]::char::methods::{impl#0}::is_whitespace)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(6:5990 ~ alloc[5873]::string::{impl#0}::push_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(6:5990 ~ alloc[5873]::string::{impl#0}::push_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:6000 ~ alloc[5873]::string::{impl#0}::push)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:12 ~ textwrap[3f03]::indentation::dedent)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:14330 ~ core[7d5a]::str::{impl#0}::lines)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:14298 ~ core[7d5a]::str::{impl#0}::len)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:14326 ~ core[7d5a]::str::{impl#0}::char_indices)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:5311 ~ core[7d5a]::char::methods::{impl#0}::is_whitespace)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).81), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:95:12: 95:26 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).30)), segments: [PathSegment { ident: whitespace_idx#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).82), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).30)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:95:12: 95:26 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).83), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).84), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).85), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:95:29: 95:33 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).17)), segments: [PathSegment { ident: line#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).86), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).17)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:95:29: 95:33 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:95:34: 95:39 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:95:29: 95:39 (#0) }
[DEBUG] Trying to get func ty of defid DefId(3:14298 ~ core[7d5a]::str::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:14298 ~ core[7d5a]::str::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:8905 ~ core[7d5a]::iter::traits::iterator::Iterator::zip)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:14326 ~ core[7d5a]::str::{impl#0}::char_indices)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:14325 ~ core[7d5a]::str::{impl#0}::chars)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).162), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:106:16: 106:17 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).150)), segments: [PathSegment { ident: a#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).163), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).150)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:106:16: 106:17 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).164), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:106:21: 106:22 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).152)), segments: [PathSegment { ident: b#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).165), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).152)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:106:21: 106:22 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).197), kind: Binary(Spanned { node: Lt, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:27: 114:28 (#0) }, Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).198), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:12: 114:26 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).138)), segments: [PathSegment { ident: whitespace_idx#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).199), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).138)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:12: 114:26 (#0) }, Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).200), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).201), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).202), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:29: 114:33 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).125)), segments: [PathSegment { ident: line#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).203), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).125)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:29: 114:33 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:34: 114:39 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:29: 114:39 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:12: 114:39 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).204), kind: Binary(Spanned { node: Lt, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:58: 114:59 (#0) }, Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).205), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:43: 114:57 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).138)), segments: [PathSegment { ident: whitespace_idx#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).206), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).138)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:43: 114:57 (#0) }, Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).207), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).208), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).209), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:60: 114:66 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).6)), segments: [PathSegment { ident: prefix#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).210), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:60: 114:66 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:67: 114:72 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:60: 114:72 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:43: 114:72 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).198), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:12: 114:26 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).138)), segments: [PathSegment { ident: whitespace_idx#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).199), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).138)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:12: 114:26 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).200), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).201), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).202), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:29: 114:33 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).125)), segments: [PathSegment { ident: line#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).203), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).125)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:29: 114:33 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:34: 114:39 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:29: 114:39 (#0) }
[DEBUG] Trying to get func ty of defid DefId(3:14298 ~ core[7d5a]::str::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).205), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:43: 114:57 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).138)), segments: [PathSegment { ident: whitespace_idx#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).206), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).138)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:43: 114:57 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).207), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).208), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).209), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:60: 114:66 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).6)), segments: [PathSegment { ident: prefix#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).210), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:60: 114:66 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:67: 114:72 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:114:60: 114:72 (#0) }
[DEBUG] Trying to get func ty of defid DefId(3:14298 ~ core[7d5a]::str::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(6:5963 ~ alloc[5873]::string::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:14330 ~ core[7d5a]::str::{impl#0}::lines)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).265), kind: MethodCall(PathSegment { ident: starts_with#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).266), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).267), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:12: 122:16 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).256)), segments: [PathSegment { ident: line#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).268), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).256)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:12: 122:16 (#0) }, [Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).269), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).270), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:30: 122:36 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).6)), segments: [PathSegment { ident: prefix#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).271), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).6)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:30: 122:36 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:29: 122:36 (#0) }], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:17: 122:37 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:12: 122:37 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).272), kind: MethodCall(PathSegment { ident: any#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).273), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).274), kind: MethodCall(PathSegment { ident: chars#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).275), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).276), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:41: 122:45 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).256)), segments: [PathSegment { ident: line#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).277), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).256)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:41: 122:45 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:46: 122:53 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:41: 122:53 (#0) }, [Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).278), kind: Closure(Closure { def_id: DefId(0:13 ~ textwrap[3f03]::indentation::dedent::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).286), kind: Infer, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:59: 122:60 (#0) }], output: DefaultReturn(/Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:61: 122:61 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).281) }, fn_decl_span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:58: 122:61 (#0), fn_arg_span: Some(/Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:58: 122:61 (#0)), kind: Closure }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:58: 122:80 (#0) }], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:54: 122:81 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:122:41: 122:81 (#0) }
[DEBUG] Trying to get func ty of defid DefId(3:14335 ~ core[7d5a]::str::{impl#0}::starts_with)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:9015 ~ core[7d5a]::iter::traits::iterator::Iterator::any)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:14325 ~ core[7d5a]::str::{impl#0}::chars)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:5311 ~ core[7d5a]::char::methods::{impl#0}::is_whitespace)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:14320 ~ core[7d5a]::str::{impl#0}::split_at)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:14298 ~ core[7d5a]::str::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:5990 ~ alloc[5873]::string::{impl#0}::push_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:6000 ~ alloc[5873]::string::{impl#0}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).337), kind: MethodCall(PathSegment { ident: ends_with#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).338), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).339), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:129:8: 129:14 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).251)), segments: [PathSegment { ident: result#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).340), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).251)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:129:8: 129:14 (#0) }, [Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).341), kind: Lit(Spanned { node: Char('\n'), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:129:25: 129:29 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:129:25: 129:29 (#0) }], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:129:15: 129:30 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:129:8: 129:30 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).342), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).343), kind: MethodCall(PathSegment { ident: ends_with#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).344), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).345), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:129:35: 129:36 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).2)), segments: [PathSegment { ident: s#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).346), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:129:35: 129:36 (#0) }, [Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).347), kind: Lit(Spanned { node: Char('\n'), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:129:47: 129:51 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:129:47: 129:51 (#0) }], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:129:37: 129:52 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:129:35: 129:52 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:129:34: 129:52 (#0) }
[DEBUG] Trying to get func ty of defid DefId(3:14337 ~ core[7d5a]::str::{impl#0}::ends_with)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:14337 ~ core[7d5a]::str::{impl#0}::ends_with)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).351), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).352), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).353), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:130:23: 130:29 (#0), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).251)), segments: [PathSegment { ident: result#0, hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).354), res: Local(HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).251)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:130:23: 130:29 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:130:30: 130:35 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:130:23: 130:35 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:12 ~ textwrap[3f03]::indentation::dedent).355), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:130:38: 130:39 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/indentation.rs:130:38: 130:39 (#0) }
[DEBUG] Trying to get func ty of defid DefId(6:6025 ~ alloc[5873]::string::{impl#0}::len)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"textwrap"}), Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(6:6003 ~ alloc[5873]::string::{impl#0}::truncate)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:71 ~ textwrap[3f03]::splitting::{impl#2}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:73 ~ textwrap[3f03]::splitting::{impl#3}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11181 ~ core[7d5a]::fmt::{impl#9}::write_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:21 ~ textwrap[3f03]::splitting::{impl#0}::split)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:5738 ~ alloc[5873]::slice::{impl#0}::into_vec)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(6:336 ~ alloc[5873]::boxed::{impl#0}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:77 ~ textwrap[3f03]::splitting::{impl#4}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:79 ~ textwrap[3f03]::splitting::{impl#5}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11181 ~ core[7d5a]::fmt::{impl#9}::write_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:14326 ~ core[7d5a]::str::{impl#0}::char_indices)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(6:5738 ~ alloc[5873]::slice::{impl#0}::into_vec)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:336 ~ alloc[5873]::boxed::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:5738 ~ alloc[5873]::slice::{impl#0}::into_vec)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:336 ~ alloc[5873]::boxed::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).114), kind: Binary(Spanned { node: And, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:39: 106:41 (#0) }, Expr { hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).115), kind: MethodCall(PathSegment { ident: is_alphanumeric#0, hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).116), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).117), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:16: 106:20 (#0), res: Local(HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).57)), segments: [PathSegment { ident: prev#0, hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).118), res: Local(HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).57)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:16: 106:20 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:21: 106:38 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:16: 106:38 (#0) }, Expr { hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).119), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:46: 106:48 (#0) }, Expr { hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).120), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:42: 106:45 (#0), res: Local(HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).99)), segments: [PathSegment { ident: cur#0, hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).121), res: Local(HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).99)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:42: 106:45 (#0) }, Expr { hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).122), kind: Lit(Spanned { node: Char('-'), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:49: 106:52 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:49: 106:52 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:42: 106:52 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:16: 106:52 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).123), kind: MethodCall(PathSegment { ident: is_alphanumeric#0, hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).124), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).125), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:56: 106:60 (#0), res: Local(HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).104)), segments: [PathSegment { ident: next#0, hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).126), res: Local(HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).104)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:56: 106:60 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:61: 106:78 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:56: 106:78 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).115), kind: MethodCall(PathSegment { ident: is_alphanumeric#0, hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).116), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).117), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:16: 106:20 (#0), res: Local(HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).57)), segments: [PathSegment { ident: prev#0, hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).118), res: Local(HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).57)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:16: 106:20 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:21: 106:38 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:16: 106:38 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).119), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:46: 106:48 (#0) }, Expr { hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).120), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:42: 106:45 (#0), res: Local(HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).99)), segments: [PathSegment { ident: cur#0, hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).121), res: Local(HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).99)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:42: 106:45 (#0) }, Expr { hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).122), kind: Lit(Spanned { node: Char('-'), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:49: 106:52 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:49: 106:52 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:42: 106:52 (#0) }
[DEBUG] Trying to get func ty of defid DefId(3:5312 ~ core[7d5a]::char::methods::{impl#0}::is_alphanumeric)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).120), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:42: 106:45 (#0), res: Local(HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).99)), segments: [PathSegment { ident: cur#0, hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).121), res: Local(HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).99)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:42: 106:45 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).122), kind: Lit(Spanned { node: Char('-'), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:49: 106:52 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:106:49: 106:52 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"textwrap"}), Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:5312 ~ core[7d5a]::char::methods::{impl#0}::is_alphanumeric)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:14320 ~ core[7d5a]::str::{impl#0}::split_at)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).134), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:107:50: 107:53 (#0), res: Local(HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).98)), segments: [PathSegment { ident: idx#0, hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).135), res: Local(HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).98)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:107:50: 107:53 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:24 ~ textwrap[3f03]::splitting::{impl#1}::split).136), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:107:56: 107:57 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/splitting.rs:107:56: 107:57 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(6:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(6:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ textwrap[3f03]::{impl#5}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:95 ~ textwrap[3f03]::{impl#6}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11204 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field5_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:32 ~ textwrap[3f03]::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:36 ~ textwrap[3f03]::{impl#1}::with_splitter)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:36 ~ textwrap[3f03]::{impl#1}::with_splitter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:37 ~ textwrap[3f03]::{impl#1}::initial_indent)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:38 ~ textwrap[3f03]::{impl#1}::subsequent_indent)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:39 ~ textwrap[3f03]::{impl#1}::break_words)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:40 ~ textwrap[3f03]::{impl#1}::fill)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:5964 ~ alloc[5873]::string::{impl#0}::with_capacity)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:14298 ~ core[7d5a]::str::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:8925 ~ core[7d5a]::iter::traits::iterator::Iterator::enumerate)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:42 ~ textwrap[3f03]::{impl#1}::wrap_iter)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:40 ~ textwrap[3f03]::{impl#1}::fill).36), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:237:16: 237:17 (#0), res: Local(HirId(DefId(0:40 ~ textwrap[3f03]::{impl#1}::fill).25)), segments: [PathSegment { ident: i#0, hir_id: HirId(DefId(0:40 ~ textwrap[3f03]::{impl#1}::fill).37), res: Local(HirId(DefId(0:40 ~ textwrap[3f03]::{impl#1}::fill).25)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:237:16: 237:17 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:40 ~ textwrap[3f03]::{impl#1}::fill).38), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:237:20: 237:21 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:237:20: 237:21 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"textwrap"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(6:6000 ~ alloc[5873]::string::{impl#0}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:5990 ~ alloc[5873]::string::{impl#0}::push_str)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:41 ~ textwrap[3f03]::{impl#1}::wrap)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:8953 ~ core[7d5a]::iter::traits::iterator::Iterator::collect)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:42 ~ textwrap[3f03]::{impl#1}::wrap_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:42 ~ textwrap[3f03]::{impl#1}::wrap_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:59 ~ textwrap[3f03]::{impl#4}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:44 ~ textwrap[3f03]::{impl#1}::into_wrap_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:59 ~ textwrap[3f03]::{impl#4}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:104 ~ textwrap[3f03]::{impl#7}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11198 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field2_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:49 ~ textwrap[3f03]::{impl#2}::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:63 ~ textwrap[3f03]::{impl#4}::next)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:115 ~ textwrap[3f03]::{impl#8}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11198 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field2_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:55 ~ textwrap[3f03]::{impl#3}::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:63 ~ textwrap[3f03]::{impl#4}::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:56 ~ textwrap[3f03]::is_whitespace)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).4), kind: MethodCall(PathSegment { ident: is_whitespace#0, hir_id: HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).5), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).6), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:429:5: 429:7 (#0), res: Local(HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).2)), segments: [PathSegment { ident: ch#0, hir_id: HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).7), res: Local(HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:429:5: 429:7 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:429:8: 429:23 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:429:5: 429:23 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).8), kind: Binary(Spanned { node: Ne, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:429:30: 429:32 (#0) }, Expr { hir_id: HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:429:27: 429:29 (#0), res: Local(HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).2)), segments: [PathSegment { ident: ch#0, hir_id: HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).10), res: Local(HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:429:27: 429:29 (#0) }, Expr { hir_id: HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:429:33: 429:37 (#0), res: Def(Const, DefId(0:8 ~ textwrap[3f03]::NBSP)), segments: [PathSegment { ident: NBSP#0, hir_id: HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).12), res: Def(Const, DefId(0:8 ~ textwrap[3f03]::NBSP)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:429:33: 429:37 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:429:27: 429:37 (#0) }
[DEBUG] Trying to get func ty of defid DefId(3:5311 ~ core[7d5a]::char::methods::{impl#0}::is_whitespace)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).9), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:429:27: 429:29 (#0), res: Local(HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).2)), segments: [PathSegment { ident: ch#0, hir_id: HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).10), res: Local(HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:429:27: 429:29 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:429:33: 429:37 (#0), res: Def(Const, DefId(0:8 ~ textwrap[3f03]::NBSP)), segments: [PathSegment { ident: NBSP#0, hir_id: HirId(DefId(0:56 ~ textwrap[3f03]::is_whitespace).12), res: Def(Const, DefId(0:8 ~ textwrap[3f03]::NBSP)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:429:33: 429:37 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:129 ~ textwrap[3f03]::{impl#9}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11206 ~ core[7d5a]::fmt::{impl#9}::debug_struct_fields_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:59 ~ textwrap[3f03]::{impl#4}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:14326 ~ core[7d5a]::str::{impl#0}::char_indices)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(21:124 ~ unicode_width[c01c]::UnicodeWidthStr::width)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(21:124 ~ unicode_width[c01c]::UnicodeWidthStr::width)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:61 ~ textwrap[3f03]::{impl#4}::create_result_line)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:61 ~ textwrap[3f03]::{impl#4}::create_result_line).7), kind: Field(Expr { hir_id: HirId(DefId(0:61 ~ textwrap[3f03]::{impl#4}::create_result_line).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:471:12: 471:16 (#0), res: Local(HirId(DefId(0:61 ~ textwrap[3f03]::{impl#4}::create_result_line).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:61 ~ textwrap[3f03]::{impl#4}::create_result_line).9), res: Local(HirId(DefId(0:61 ~ textwrap[3f03]::{impl#4}::create_result_line).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:471:12: 471:16 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:471:12: 471:22 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:61 ~ textwrap[3f03]::{impl#4}::create_result_line).10), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:471:26: 471:27 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:471:26: 471:27 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"textwrap"}), Specific({"textwrap"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3166 ~ core[7d5a]::convert::From::from)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3166 ~ core[7d5a]::convert::From::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:63 ~ textwrap[3f03]::{impl#4}::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:9671 ~ core[7d5a]::option::{impl#0}::unwrap_or)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(21:118 ~ unicode_width[c01c]::UnicodeWidthChar::width)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:5304 ~ core[7d5a]::char::methods::{impl#0}::len_utf8)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).48), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:487:16: 487:18 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).21)), segments: [PathSegment { ident: ch#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).49), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).21)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:487:16: 487:18 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).50), kind: Lit(Spanned { node: Char('\n'), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:487:22: 487:26 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:487:22: 487:26 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"textwrap"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).82), kind: Binary(Spanned { node: Add, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:31: 495:32 (#0) }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).83), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).84), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:20: 495:24 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).85), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:20: 495:24 (#0) }, split#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:20: 495:30 (#0) }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).86), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).87), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:33: 495:37 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).88), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:33: 495:37 (#0) }, split_len#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:33: 495:47 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:20: 495:47 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).89), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).90), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).91), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).92), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:50: 495:54 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).93), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:50: 495:54 (#0) }, source#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:50: 495:61 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:62: 495:67 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:50: 495:67 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).83), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).84), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:20: 495:24 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).85), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:20: 495:24 (#0) }, split#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:20: 495:30 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).86), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).87), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:33: 495:37 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).88), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:33: 495:37 (#0) }, split_len#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:495:33: 495:47 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:14298 ~ core[7d5a]::str::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:61 ~ textwrap[3f03]::{impl#4}::create_result_line)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).127), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).128), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:499:34: 499:38 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).129), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:499:34: 499:38 (#0) }, split#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:499:34: 499:44 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).130), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).131), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:499:47: 499:51 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).132), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:499:47: 499:51 (#0) }, split_len#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:499:47: 499:61 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(21:124 ~ unicode_width[c01c]::UnicodeWidthStr::width)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:56 ~ textwrap[3f03]::is_whitespace)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).198), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).199), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:512:44: 512:48 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).200), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:512:44: 512:48 (#0) }, line_width#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:512:44: 512:59 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).201), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:512:62: 512:72 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).38)), segments: [PathSegment { ident: char_width#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).202), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).38)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:512:62: 512:72 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).214), kind: Binary(Spanned { node: Add, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:514:39: 514:40 (#0) }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).215), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).216), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:514:23: 514:27 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).217), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:514:23: 514:27 (#0) }, line_width#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:514:23: 514:38 (#0) }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).218), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:514:41: 514:51 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).38)), segments: [PathSegment { ident: char_width#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).219), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).38)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:514:41: 514:51 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:514:23: 514:51 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).220), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).221), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:514:54: 514:61 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).4)), segments: [PathSegment { ident: wrapper#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).222), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:514:54: 514:61 (#0) }, width#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:514:54: 514:67 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).215), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).216), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:514:23: 514:27 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).217), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:514:23: 514:27 (#0) }, line_width#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:514:23: 514:38 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).218), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:514:41: 514:51 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).38)), segments: [PathSegment { ident: char_width#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).219), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).38)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:514:41: 514:51 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:14340 ~ core[7d5a]::str::{impl#0}::find)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:56 ~ textwrap[3f03]::is_whitespace)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:18 ~ textwrap[3f03]::splitting::WordSplitter::split)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:9103 ~ core[7d5a]::iter::traits::iterator::Iterator::rev)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).307), kind: Binary(Spanned { node: Add, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:64: 527:65 (#0) }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).308), kind: Binary(Spanned { node: Add, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:49: 527:50 (#0) }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).309), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).310), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:24: 527:28 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).311), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:24: 527:28 (#0) }, line_width_at_split#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:24: 527:48 (#0) }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).312), kind: MethodCall(PathSegment { ident: width#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).313), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).314), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:51: 527:55 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).294)), segments: [PathSegment { ident: head#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).315), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).294)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:51: 527:55 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:56: 527:63 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:51: 527:63 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:24: 527:63 (#0) }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).316), kind: MethodCall(PathSegment { ident: width#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).317), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).318), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:66: 527:69 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).295)), segments: [PathSegment { ident: hyp#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).319), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).295)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:66: 527:69 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:70: 527:77 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:66: 527:77 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:24: 527:77 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).320), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).321), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:81: 527:88 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).4)), segments: [PathSegment { ident: wrapper#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).322), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:81: 527:88 (#0) }, width#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:81: 527:94 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).308), kind: Binary(Spanned { node: Add, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:49: 527:50 (#0) }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).309), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).310), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:24: 527:28 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).311), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:24: 527:28 (#0) }, line_width_at_split#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:24: 527:48 (#0) }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).312), kind: MethodCall(PathSegment { ident: width#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).313), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).314), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:51: 527:55 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).294)), segments: [PathSegment { ident: head#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).315), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).294)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:51: 527:55 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:56: 527:63 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:51: 527:63 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:24: 527:63 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).316), kind: MethodCall(PathSegment { ident: width#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).317), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).318), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:66: 527:69 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).295)), segments: [PathSegment { ident: hyp#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).319), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).295)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:66: 527:69 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:70: 527:77 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:66: 527:77 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).309), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).310), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:24: 527:28 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).311), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:24: 527:28 (#0) }, line_width_at_split#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:24: 527:48 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).312), kind: MethodCall(PathSegment { ident: width#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).313), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).314), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:51: 527:55 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).294)), segments: [PathSegment { ident: head#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).315), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).294)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:51: 527:55 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:56: 527:63 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:527:51: 527:63 (#0) }
[DEBUG] Trying to get func ty of defid DefId(21:124 ~ unicode_width[c01c]::UnicodeWidthStr::width)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(21:124 ~ unicode_width[c01c]::UnicodeWidthStr::width)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).329), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).330), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:531:39: 531:43 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).331), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:531:39: 531:43 (#0) }, split_len#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:531:39: 531:53 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).332), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).333), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).334), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:531:56: 531:60 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).294)), segments: [PathSegment { ident: head#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).335), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).294)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:531:56: 531:60 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:531:61: 531:66 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:531:56: 531:66 (#0) }
[DEBUG] Trying to get func ty of defid DefId(3:14298 ~ core[7d5a]::str::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).373), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).374), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:538:20: 538:24 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).375), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:538:20: 538:24 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:538:20: 538:30 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).376), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).377), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:538:34: 538:38 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).378), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:538:34: 538:38 (#0) }, split#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:538:34: 538:44 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).414), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).415), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:548:38: 548:42 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).416), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:548:38: 548:42 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:548:38: 548:48 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).417), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).418), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).419), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).420), kind: Index(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).421), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:548:51: 548:57 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).287)), segments: [PathSegment { ident: splits#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).422), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).287)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:548:51: 548:57 (#0) }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).423), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:548:58: 548:59 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:548:58: 548:59 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:548:57: 548:60 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:548:51: 548:60 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:548:51: 548:62 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:548:63: 548:68 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:548:51: 548:68 (#0) }
[DEBUG] Trying to get func ty of defid DefId(3:14298 ~ core[7d5a]::str::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).445), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).446), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:554:20: 554:24 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).447), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:554:20: 554:24 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:554:20: 554:30 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).448), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).449), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:554:33: 554:37 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).450), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:554:33: 554:37 (#0) }, split#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:554:33: 554:43 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:61 ~ textwrap[3f03]::{impl#4}::create_result_line)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).490), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).491), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:559:34: 559:38 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).492), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:559:34: 559:38 (#0) }, split#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:559:34: 559:44 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).493), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).494), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:559:47: 559:51 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).495), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:559:47: 559:51 (#0) }, split_len#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:559:47: 559:61 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(21:124 ~ unicode_width[c01c]::UnicodeWidthStr::width)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).566), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).567), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:575:12: 575:16 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).568), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:575:12: 575:16 (#0) }, start#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:575:12: 575:22 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).569), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).570), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).571), kind: Field(Expr { hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).572), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:575:25: 575:29 (#0), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).573), res: Local(HirId(DefId(0:63 ~ textwrap[3f03]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:575:25: 575:29 (#0) }, source#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:575:25: 575:36 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:575:37: 575:42 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/textwrap-0.11.0/src/lib.rs:575:25: 575:42 (#0) }
[DEBUG] Trying to get func ty of defid DefId(3:14298 ~ core[7d5a]::str::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:61 ~ textwrap[3f03]::{impl#4}::create_result_line)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:65 ~ textwrap[3f03]::fill)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:40 ~ textwrap[3f03]::{impl#1}::fill)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:32 ~ textwrap[3f03]::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:66 ~ textwrap[3f03]::wrap)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:41 ~ textwrap[3f03]::{impl#1}::wrap)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:32 ~ textwrap[3f03]::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:67 ~ textwrap[3f03]::wrap_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:44 ~ textwrap[3f03]::{impl#1}::into_wrap_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:32 ~ textwrap[3f03]::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
