[DEBUG] Trying to get func ty of defid DefId(0:40 ~ walkdir[daf8]::dent::{impl#0}::path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:41 ~ walkdir[daf8]::dent::{impl#0}::into_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:42 ~ walkdir[daf8]::dent::{impl#0}::path_is_symlink)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:42 ~ walkdir[daf8]::dent::{impl#0}::path_is_symlink).4), kind: MethodCall(PathSegment { ident: is_symlink#0, hir_id: HirId(DefId(0:42 ~ walkdir[daf8]::dent::{impl#0}::path_is_symlink).5), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:42 ~ walkdir[daf8]::dent::{impl#0}::path_is_symlink).6), kind: Field(Expr { hir_id: HirId(DefId(0:42 ~ walkdir[daf8]::dent::{impl#0}::path_is_symlink).7), kind: Path(Resolved(None, Path { span: src/dent.rs:101:9: 101:13 (#0), res: Local(HirId(DefId(0:42 ~ walkdir[daf8]::dent::{impl#0}::path_is_symlink).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:42 ~ walkdir[daf8]::dent::{impl#0}::path_is_symlink).8), res: Local(HirId(DefId(0:42 ~ walkdir[daf8]::dent::{impl#0}::path_is_symlink).2)), args: None, infer_args: true }] })), span: src/dent.rs:101:9: 101:13 (#0) }, ty#0), span: src/dent.rs:101:9: 101:16 (#0) }, [], src/dent.rs:101:17: 101:29 (#0)), span: src/dent.rs:101:9: 101:29 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:42 ~ walkdir[daf8]::dent::{impl#0}::path_is_symlink).9), kind: Field(Expr { hir_id: HirId(DefId(0:42 ~ walkdir[daf8]::dent::{impl#0}::path_is_symlink).10), kind: Path(Resolved(None, Path { span: src/dent.rs:101:33: 101:37 (#0), res: Local(HirId(DefId(0:42 ~ walkdir[daf8]::dent::{impl#0}::path_is_symlink).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:42 ~ walkdir[daf8]::dent::{impl#0}::path_is_symlink).11), res: Local(HirId(DefId(0:42 ~ walkdir[daf8]::dent::{impl#0}::path_is_symlink).2)), args: None, infer_args: true }] })), span: src/dent.rs:101:33: 101:37 (#0) }, follow_link#0), span: src/dent.rs:101:33: 101:49 (#0) }
[DEBUG] Trying to get func ty of defid DefId(2:2560 ~ std[e3cd]::fs::{impl#25}::is_symlink)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:43 ~ walkdir[daf8]::dent::{impl#0}::metadata)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:44 ~ walkdir[daf8]::dent::{impl#0}::metadata_internal)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:44 ~ walkdir[daf8]::dent::{impl#0}::metadata_internal)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:43 ~ std[3c1d]::fs::metadata)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:45 ~ std[3c1d]::fs::symlink_metadata)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:81 ~ walkdir[daf8]::error::{impl#0}::from_entry)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:46 ~ walkdir[daf8]::dent::{impl#0}::file_type)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:47 ~ walkdir[daf8]::dent::{impl#0}::file_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9672 ~ core[7d5a]::option::{impl#0}::unwrap_or_else)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:191 ~ std[3c1d]::path::{impl#9}::file_name)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:182 ~ std[3c1d]::path::{impl#9}::as_os_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:49 ~ walkdir[daf8]::dent::{impl#0}::depth)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:50 ~ walkdir[daf8]::dent::{impl#0}::is_dir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2558 ~ std[e3cd]::fs::{impl#25}::is_dir)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:51 ~ walkdir[daf8]::dent::{impl#0}::from_entry)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:64 ~ std[3c1d]::fs::{impl#2}::file_type)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:80 ~ walkdir[daf8]::error::{impl#0}::from_path)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:62 ~ std[3c1d]::fs::{impl#2}::path)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:62 ~ std[3c1d]::fs::{impl#2}::path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:4350 ~ std[e3cd]::os::unix::fs::DirEntryExt::ino)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:54 ~ walkdir[daf8]::dent::{impl#0}::from_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:43 ~ std[3c1d]::fs::metadata)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:80 ~ walkdir[daf8]::error::{impl#0}::from_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:45 ~ std[3c1d]::fs::symlink_metadata)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:80 ~ walkdir[daf8]::error::{impl#0}::from_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2532 ~ std[e3cd]::fs::{impl#17}::file_type)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:4307 ~ std[e3cd]::os::unix::fs::MetadataExt::ino)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:59 ~ walkdir[daf8]::dent::{impl#1}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:61 ~ walkdir[daf8]::dent::{impl#2}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11182 ~ core[7d5a]::fmt::{impl#9}::write_fmt)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:11035 ~ core[7d5a]::fmt::rt::{impl#1}::new_debug)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:65 ~ walkdir[daf8]::dent::{impl#3}::ino)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:183 ~ walkdir[daf8]::error::{impl#4}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11198 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field2_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:192 ~ walkdir[daf8]::error::{impl#5}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11198 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field2_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:11198 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field2_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:75 ~ walkdir[daf8]::error::{impl#0}::path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:76 ~ walkdir[daf8]::error::{impl#0}::loop_ancestor)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:77 ~ walkdir[daf8]::error::{impl#0}::depth)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:78 ~ walkdir[daf8]::error::{impl#0}::io_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:79 ~ walkdir[daf8]::error::{impl#0}::into_io_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:80 ~ walkdir[daf8]::error::{impl#0}::from_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:81 ~ walkdir[daf8]::error::{impl#0}::from_entry)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:49 ~ walkdir[daf8]::dent::{impl#0}::depth)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:185 ~ std[3c1d]::path::{impl#9}::to_path_buf)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:40 ~ walkdir[daf8]::dent::{impl#0}::path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:82 ~ walkdir[daf8]::error::{impl#0}::from_io)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:83 ~ walkdir[daf8]::error::{impl#0}::from_loop)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:185 ~ std[3c1d]::path::{impl#9}::to_path_buf)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:185 ~ std[3c1d]::path::{impl#9}::to_path_buf)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:85 ~ walkdir[daf8]::error::{impl#1}::description)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:3253 ~ core[7d5a]::error::Error::description)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:86 ~ walkdir[daf8]::error::{impl#1}::cause)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:3251 ~ core[7d5a]::error::Error::source)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:87 ~ walkdir[daf8]::error::{impl#1}::source)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ walkdir[daf8]::error::{impl#2}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:11182 ~ core[7d5a]::fmt::{impl#9}::write_fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:202 ~ std[3c1d]::path::{impl#9}::display)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:11182 ~ core[7d5a]::fmt::{impl#9}::write_fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:202 ~ std[3c1d]::path::{impl#9}::display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:202 ~ std[3c1d]::path::{impl#9}::display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:91 ~ walkdir[daf8]::error::{impl#3}::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:3258 ~ std[e3cd]::io::error::{impl#8}::kind)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:3244 ~ std[e3cd]::io::error::{impl#8}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:95 ~ walkdir[daf8]::util::device_num)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:203 ~ std[3c1d]::path::{impl#9}::metadata)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:3157 ~ core[7d5a]::convert::AsRef::as_ref)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:4306 ~ std[e3cd]::os::unix::fs::MetadataExt::dev)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:197 ~ walkdir[daf8]::{impl#12}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11198 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field2_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:112 ~ walkdir[daf8]::{impl#0}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9656 ~ core[7d5a]::option::{impl#0}::is_some)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:10794 ~ core[7d5a]::fmt::builders::{impl#3}::finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11194 ~ core[7d5a]::fmt::{impl#9}::debug_struct)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:114 ~ walkdir[daf8]::{impl#1}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:185 ~ std[3c1d]::path::{impl#9}::to_path_buf)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:3157 ~ core[7d5a]::convert::AsRef::as_ref)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:116 ~ walkdir[daf8]::{impl#1}::min_depth)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:116 ~ walkdir[daf8]::{impl#1}::min_depth).15), kind: Field(Expr { hir_id: HirId(DefId(0:116 ~ walkdir[daf8]::{impl#1}::min_depth).16), kind: Field(Expr { hir_id: HirId(DefId(0:116 ~ walkdir[daf8]::{impl#1}::min_depth).17), kind: Path(Resolved(None, Path { span: src/lib.rs:313:12: 313:16 (#0), res: Local(HirId(DefId(0:116 ~ walkdir[daf8]::{impl#1}::min_depth).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:116 ~ walkdir[daf8]::{impl#1}::min_depth).18), res: Local(HirId(DefId(0:116 ~ walkdir[daf8]::{impl#1}::min_depth).2)), args: None, infer_args: true }] })), span: src/lib.rs:313:12: 313:16 (#0) }, opts#0), span: src/lib.rs:313:12: 313:21 (#0) }, min_depth#0), span: src/lib.rs:313:12: 313:31 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:116 ~ walkdir[daf8]::{impl#1}::min_depth).19), kind: Field(Expr { hir_id: HirId(DefId(0:116 ~ walkdir[daf8]::{impl#1}::min_depth).20), kind: Field(Expr { hir_id: HirId(DefId(0:116 ~ walkdir[daf8]::{impl#1}::min_depth).21), kind: Path(Resolved(None, Path { span: src/lib.rs:313:34: 313:38 (#0), res: Local(HirId(DefId(0:116 ~ walkdir[daf8]::{impl#1}::min_depth).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:116 ~ walkdir[daf8]::{impl#1}::min_depth).22), res: Local(HirId(DefId(0:116 ~ walkdir[daf8]::{impl#1}::min_depth).2)), args: None, infer_args: true }] })), span: src/lib.rs:313:34: 313:38 (#0) }, opts#0), span: src/lib.rs:313:34: 313:43 (#0) }, max_depth#0), span: src/lib.rs:313:34: 313:53 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:117 ~ walkdir[daf8]::{impl#1}::max_depth)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:117 ~ walkdir[daf8]::{impl#1}::max_depth).15), kind: Field(Expr { hir_id: HirId(DefId(0:117 ~ walkdir[daf8]::{impl#1}::max_depth).16), kind: Field(Expr { hir_id: HirId(DefId(0:117 ~ walkdir[daf8]::{impl#1}::max_depth).17), kind: Path(Resolved(None, Path { span: src/lib.rs:330:12: 330:16 (#0), res: Local(HirId(DefId(0:117 ~ walkdir[daf8]::{impl#1}::max_depth).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:117 ~ walkdir[daf8]::{impl#1}::max_depth).18), res: Local(HirId(DefId(0:117 ~ walkdir[daf8]::{impl#1}::max_depth).2)), args: None, infer_args: true }] })), span: src/lib.rs:330:12: 330:16 (#0) }, opts#0), span: src/lib.rs:330:12: 330:21 (#0) }, max_depth#0), span: src/lib.rs:330:12: 330:31 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:117 ~ walkdir[daf8]::{impl#1}::max_depth).19), kind: Field(Expr { hir_id: HirId(DefId(0:117 ~ walkdir[daf8]::{impl#1}::max_depth).20), kind: Field(Expr { hir_id: HirId(DefId(0:117 ~ walkdir[daf8]::{impl#1}::max_depth).21), kind: Path(Resolved(None, Path { span: src/lib.rs:330:34: 330:38 (#0), res: Local(HirId(DefId(0:117 ~ walkdir[daf8]::{impl#1}::max_depth).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:117 ~ walkdir[daf8]::{impl#1}::max_depth).22), res: Local(HirId(DefId(0:117 ~ walkdir[daf8]::{impl#1}::max_depth).2)), args: None, infer_args: true }] })), span: src/lib.rs:330:34: 330:38 (#0) }, opts#0), span: src/lib.rs:330:34: 330:43 (#0) }, min_depth#0), span: src/lib.rs:330:34: 330:53 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:118 ~ walkdir[daf8]::{impl#1}::follow_links)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:119 ~ walkdir[daf8]::{impl#1}::follow_root_links)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:120 ~ walkdir[daf8]::{impl#1}::max_open)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:120 ~ walkdir[daf8]::{impl#1}::max_open).7), kind: Path(Resolved(None, Path { span: src/lib.rs:397:12: 397:13 (#0), res: Local(HirId(DefId(0:120 ~ walkdir[daf8]::{impl#1}::max_open).4)), segments: [PathSegment { ident: n#0, hir_id: HirId(DefId(0:120 ~ walkdir[daf8]::{impl#1}::max_open).8), res: Local(HirId(DefId(0:120 ~ walkdir[daf8]::{impl#1}::max_open).4)), args: None, infer_args: true }] })), span: src/lib.rs:397:12: 397:13 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:120 ~ walkdir[daf8]::{impl#1}::max_open).9), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: src/lib.rs:397:17: 397:18 (#0) }), span: src/lib.rs:397:17: 397:18 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"walkdir"}), Specific({"walkdir"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:121 ~ walkdir[daf8]::{impl#1}::sort_by)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:336 ~ alloc[5873]::boxed::{impl#0}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:123 ~ walkdir[daf8]::{impl#1}::sort_by_key)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:121 ~ walkdir[daf8]::{impl#1}::sort_by)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> NOT FOUND! Getting extern def
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:123 ~ walkdir[daf8]::{impl#1}::sort_by_key).17), kind: Path(Resolved(None, Path { span: src/lib.rs:445:34: 445:37 (#0), res: Local(HirId(DefId(0:123 ~ walkdir[daf8]::{impl#1}::sort_by_key).4)), segments: [PathSegment { ident: cmp#0, hir_id: HirId(DefId(0:123 ~ walkdir[daf8]::{impl#1}::sort_by_key).18), res: Local(HirId(DefId(0:123 ~ walkdir[daf8]::{impl#1}::sort_by_key).4)), args: None, infer_args: true }] })), span: src/lib.rs:445:34: 445:37 (#0) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:123 ~ walkdir[daf8]::{impl#1}::sort_by_key).23), kind: Path(Resolved(None, Path { span: src/lib.rs:445:46: 445:49 (#0), res: Local(HirId(DefId(0:123 ~ walkdir[daf8]::{impl#1}::sort_by_key).4)), segments: [PathSegment { ident: cmp#0, hir_id: HirId(DefId(0:123 ~ walkdir[daf8]::{impl#1}::sort_by_key).24), res: Local(HirId(DefId(0:123 ~ walkdir[daf8]::{impl#1}::sort_by_key).4)), args: None, infer_args: true }] })), span: src/lib.rs:445:46: 445:49 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:127 ~ walkdir[daf8]::{impl#1}::sort_by_file_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:121 ~ walkdir[daf8]::{impl#1}::sort_by)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:3001 ~ core[7d5a]::cmp::Ord::cmp)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:47 ~ walkdir[daf8]::dent::{impl#0}::file_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:47 ~ walkdir[daf8]::dent::{impl#0}::file_name)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:129 ~ walkdir[daf8]::{impl#1}::contents_first)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:130 ~ walkdir[daf8]::{impl#1}::same_file_system)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:123 ~ walkdir[daf8]::{impl#1}::sort_by_key).17), kind: Path(Resolved(None, Path { span: src/lib.rs:445:34: 445:37 (#0), res: Local(HirId(DefId(0:123 ~ walkdir[daf8]::{impl#1}::sort_by_key).4)), segments: [PathSegment { ident: cmp#0, hir_id: HirId(DefId(0:123 ~ walkdir[daf8]::{impl#1}::sort_by_key).18), res: Local(HirId(DefId(0:123 ~ walkdir[daf8]::{impl#1}::sort_by_key).4)), args: None, infer_args: true }] })), span: src/lib.rs:445:34: 445:37 (#0) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:123 ~ walkdir[daf8]::{impl#1}::sort_by_key).23), kind: Path(Resolved(None, Path { span: src/lib.rs:445:46: 445:49 (#0), res: Local(HirId(DefId(0:123 ~ walkdir[daf8]::{impl#1}::sort_by_key).4)), segments: [PathSegment { ident: cmp#0, hir_id: HirId(DefId(0:123 ~ walkdir[daf8]::{impl#1}::sort_by_key).24), res: Local(HirId(DefId(0:123 ~ walkdir[daf8]::{impl#1}::sort_by_key).4)), args: None, infer_args: true }] })), span: src/lib.rs:445:46: 445:49 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:134 ~ walkdir[daf8]::{impl#2}::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(6:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(6:7424 ~ alloc[5873]::vec::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:208 ~ walkdir[daf8]::{impl#13}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11206 ~ core[7d5a]::fmt::{impl#9}::debug_struct_fields_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:212 ~ walkdir[daf8]::{impl#14}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11196 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field1_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:136 ~ walkdir[daf8]::{impl#3}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:185 ~ std[3c1d]::path::{impl#9}::to_path_buf)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:40 ~ walkdir[daf8]::dent::{impl#0}::path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).9), kind: Path(Resolved(None, Path { span: src/lib.rs:648:12: 648:17 (#0), res: Local(HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).4)), segments: [PathSegment { ident: child#0, hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).10), res: Local(HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).4)), args: None, infer_args: true }] })), span: src/lib.rs:648:12: 648:17 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).11), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).12), kind: Match(Expr { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).23), kind: Call(Expr { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).22), kind: Path(LangItem(TryTraitBranch, src/lib.rs:648:22: 648:52 (#47))), span: src/lib.rs:648:22: 648:52 (#47) }, [Expr { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).13), kind: Call(Expr { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).14), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).16), kind: Path(Resolved(None, Path { span: src/lib.rs:648:22: 648:28 (#0), res: Def(Struct, DefId(21:70 ~ same_file[8af6]::Handle)), segments: [PathSegment { ident: Handle#0, hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).15), res: Def(Struct, DefId(21:70 ~ same_file[8af6]::Handle)), args: None, infer_args: true }] })), span: src/lib.rs:648:22: 648:28 (#0) }, PathSegment { ident: from_path#0, hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).17), res: Err, args: None, infer_args: true })), span: src/lib.rs:648:22: 648:39 (#0) }, [Expr { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).18), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).19), kind: Field(Expr { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).20), kind: Path(Resolved(None, Path { span: src/lib.rs:648:41: 648:45 (#0), res: Local(HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).21), res: Local(HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).2)), args: None, infer_args: true }] })), span: src/lib.rs:648:41: 648:45 (#0) }, path#0), span: src/lib.rs:648:41: 648:50 (#0) }), span: src/lib.rs:648:40: 648:50 (#0) }]), span: src/lib.rs:648:22: 648:51 (#0) }]), span: src/lib.rs:648:22: 648:52 (#47) }, [Arm { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).38), span: src/lib.rs:648:51: 648:52 (#48), pat: Pat { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).37), kind: Struct(LangItem(ControlFlowBreak, src/lib.rs:648:51: 648:52 (#48)), [PatField { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).36), ident: 0#48, pat: Pat { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).30), kind: Binding(BindingMode(No, Not), HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).30), residual#0, None), span: src/lib.rs:648:51: 648:52 (#48), default_binding_modes: true }, is_shorthand: false, span: src/lib.rs:648:51: 648:52 (#48) }], false), span: src/lib.rs:648:51: 648:52 (#48), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).35), kind: Ret(Some(Expr { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).34), kind: Call(Expr { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).33), kind: Path(LangItem(TryTraitFromResidual, src/lib.rs:648:51: 648:52 (#48))), span: src/lib.rs:648:51: 648:52 (#48) }, [Expr { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).32), kind: Path(Resolved(None, Path { span: src/lib.rs:648:51: 648:52 (#48), res: Local(HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).30)), segments: [PathSegment { ident: residual#0, hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).31), res: Local(HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).30)), args: None, infer_args: true }] })), span: src/lib.rs:648:51: 648:52 (#48) }]), span: src/lib.rs:648:22: 648:52 (#47) })), span: src/lib.rs:648:51: 648:52 (#48) } }, Arm { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).29), span: src/lib.rs:648:22: 648:52 (#0), pat: Pat { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).28), kind: Struct(LangItem(ControlFlowContinue, src/lib.rs:648:22: 648:52 (#47)), [PatField { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).27), ident: 0#47, pat: Pat { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).24), kind: Binding(BindingMode(No, Not), HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).24), val#0, None), span: src/lib.rs:648:22: 648:52 (#0), default_binding_modes: true }, is_shorthand: false, span: src/lib.rs:648:22: 648:52 (#47) }], false), span: src/lib.rs:648:22: 648:52 (#47), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).26), kind: Path(Resolved(None, Path { span: src/lib.rs:648:22: 648:52 (#0), res: Local(HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).24)), segments: [PathSegment { ident: val#0, hir_id: HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).25), res: Local(HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).24)), args: None, infer_args: true }] })), span: src/lib.rs:648:22: 648:52 (#0) } }], TryDesugar(HirId(DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same).23))), span: src/lib.rs:648:22: 648:52 (#0) }), span: src/lib.rs:648:21: 648:52 (#0) }
[DEBUG] Trying to get func ty of defid DefId(3:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(21:50 ~ same_file[8af6]::{impl#0}::from_path)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:221 ~ walkdir[daf8]::{impl#15}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11198 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field2_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:140 ~ walkdir[daf8]::{impl#4}::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9713 ~ core[7d5a]::option::{impl#0}::take)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:95 ~ walkdir[daf8]::util::device_num)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:80 ~ walkdir[daf8]::error::{impl#0}::from_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:2919 ~ core[7d5a]::clone::Clone::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3166 ~ core[7d5a]::convert::From::from)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:54 ~ walkdir[daf8]::dent::{impl#0}::from_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3166 ~ core[7d5a]::convert::From::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(6:7513 ~ alloc[5873]::vec::{impl#1}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(6:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:147 ~ walkdir[daf8]::{impl#5}::get_deferred_dir)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:140 ~ walkdir[daf8]::{impl#4}::next).185), kind: Field(Expr { hir_id: HirId(DefId(0:140 ~ walkdir[daf8]::{impl#4}::next).186), kind: Path(Resolved(None, Path { span: src/lib.rs:705:16: 705:20 (#0), res: Local(HirId(DefId(0:140 ~ walkdir[daf8]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:140 ~ walkdir[daf8]::{impl#4}::next).187), res: Local(HirId(DefId(0:140 ~ walkdir[daf8]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: src/lib.rs:705:16: 705:20 (#0) }, depth#0), span: src/lib.rs:705:16: 705:26 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:140 ~ walkdir[daf8]::{impl#4}::next).188), kind: Field(Expr { hir_id: HirId(DefId(0:140 ~ walkdir[daf8]::{impl#4}::next).189), kind: Field(Expr { hir_id: HirId(DefId(0:140 ~ walkdir[daf8]::{impl#4}::next).190), kind: Path(Resolved(None, Path { span: src/lib.rs:705:29: 705:33 (#0), res: Local(HirId(DefId(0:140 ~ walkdir[daf8]::{impl#4}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:140 ~ walkdir[daf8]::{impl#4}::next).191), res: Local(HirId(DefId(0:140 ~ walkdir[daf8]::{impl#4}::next).2)), args: None, infer_args: true }] })), span: src/lib.rs:705:29: 705:33 (#0) }, opts#0), span: src/lib.rs:705:29: 705:38 (#0) }, max_depth#0), span: src/lib.rs:705:29: 705:48 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:152 ~ walkdir[daf8]::{impl#5}::pop)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:9669 ~ core[7d5a]::option::{impl#0}::expect)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:13237 ~ core[7d5a]::slice::{impl#0}::last_mut)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:152 ~ walkdir[daf8]::{impl#5}::pop)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(6:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:147 ~ walkdir[daf8]::{impl#5}::get_deferred_dir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:143 ~ walkdir[daf8]::{impl#5}::skip_current_dir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:7513 ~ alloc[5873]::vec::{impl#1}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:152 ~ walkdir[daf8]::{impl#5}::pop)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:144 ~ walkdir[daf8]::{impl#5}::filter_entry)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).7), kind: Field(Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).8), kind: Field(Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).9), kind: Path(Resolved(None, Path { span: src/lib.rs:845:12: 845:16 (#0), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).10), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).2)), args: None, infer_args: true }] })), span: src/lib.rs:845:12: 845:16 (#0) }, opts#0), span: src/lib.rs:845:12: 845:21 (#0) }, follow_links#0), span: src/lib.rs:845:12: 845:34 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).11), kind: MethodCall(PathSegment { ident: is_symlink#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).12), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).13), kind: MethodCall(PathSegment { ident: file_type#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).14), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).15), kind: Path(Resolved(None, Path { span: src/lib.rs:845:38: 845:42 (#0), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), segments: [PathSegment { ident: dent#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).16), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), args: None, infer_args: true }] })), span: src/lib.rs:845:38: 845:42 (#0) }, [], src/lib.rs:845:43: 845:54 (#0)), span: src/lib.rs:845:38: 845:54 (#0) }, [], src/lib.rs:845:55: 845:67 (#0)), span: src/lib.rs:845:38: 845:67 (#0) }
[DEBUG] Trying to get func ty of defid DefId(2:2560 ~ std[e3cd]::fs::{impl#25}::is_symlink)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:46 ~ walkdir[daf8]::dent::{impl#0}::file_type)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:153 ~ walkdir[daf8]::{impl#5}::follow)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:3166 ~ core[7d5a]::convert::From::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).57), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).58), kind: MethodCall(PathSegment { ident: is_symlink#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).59), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).60), kind: MethodCall(PathSegment { ident: file_type#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).61), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).62), kind: Path(Resolved(None, Path { span: src/lib.rs:848:30: 848:34 (#0), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), segments: [PathSegment { ident: dent#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).63), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), args: None, infer_args: true }] })), span: src/lib.rs:848:30: 848:34 (#0) }, [], src/lib.rs:848:35: 848:46 (#0)), span: src/lib.rs:848:30: 848:46 (#0) }, [], src/lib.rs:848:47: 848:59 (#0)), span: src/lib.rs:848:30: 848:59 (#0) }), span: src/lib.rs:848:29: 848:59 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).64), kind: MethodCall(PathSegment { ident: is_dir#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).65), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).66), kind: Path(Resolved(None, Path { span: src/lib.rs:848:63: 848:67 (#0), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), segments: [PathSegment { ident: dent#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).67), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), args: None, infer_args: true }] })), span: src/lib.rs:848:63: 848:67 (#0) }, [], src/lib.rs:848:68: 848:76 (#0)), span: src/lib.rs:848:63: 848:76 (#0) }
[DEBUG] Trying to get func ty of defid DefId(2:2560 ~ std[e3cd]::fs::{impl#25}::is_symlink)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:46 ~ walkdir[daf8]::dent::{impl#0}::file_type)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:50 ~ walkdir[daf8]::dent::{impl#0}::is_dir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).76), kind: Field(Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).77), kind: Field(Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).78), kind: Path(Resolved(None, Path { span: src/lib.rs:850:16: 850:20 (#0), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).79), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).2)), args: None, infer_args: true }] })), span: src/lib.rs:850:16: 850:20 (#0) }, opts#0), span: src/lib.rs:850:16: 850:25 (#0) }, same_file_system#0), span: src/lib.rs:850:16: 850:42 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).80), kind: Binary(Spanned { node: Gt, span: src/lib.rs:850:59: 850:60 (#0) }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).81), kind: MethodCall(PathSegment { ident: depth#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).82), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).83), kind: Path(Resolved(None, Path { span: src/lib.rs:850:46: 850:50 (#0), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), segments: [PathSegment { ident: dent#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).84), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), args: None, infer_args: true }] })), span: src/lib.rs:850:46: 850:50 (#0) }, [], src/lib.rs:850:51: 850:58 (#0)), span: src/lib.rs:850:46: 850:58 (#0) }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).85), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: src/lib.rs:850:61: 850:62 (#0) }), span: src/lib.rs:850:61: 850:62 (#0) }), span: src/lib.rs:850:46: 850:62 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).81), kind: MethodCall(PathSegment { ident: depth#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).82), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).83), kind: Path(Resolved(None, Path { span: src/lib.rs:850:46: 850:50 (#0), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), segments: [PathSegment { ident: dent#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).84), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), args: None, infer_args: true }] })), span: src/lib.rs:850:46: 850:50 (#0) }, [], src/lib.rs:850:51: 850:58 (#0)), span: src/lib.rs:850:46: 850:58 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).85), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: src/lib.rs:850:61: 850:62 (#0) }), span: src/lib.rs:850:61: 850:62 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:49 ~ walkdir[daf8]::dent::{impl#0}::depth)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"walkdir"}), Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:158 ~ walkdir[daf8]::{impl#5}::is_same_file_system)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:3166 ~ core[7d5a]::convert::From::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:148 ~ walkdir[daf8]::{impl#5}::push)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:3166 ~ core[7d5a]::convert::From::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:148 ~ walkdir[daf8]::{impl#5}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:3166 ~ core[7d5a]::convert::From::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).194), kind: Binary(Spanned { node: And, span: src/lib.rs:858:13: 858:15 (#0) }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).195), kind: Binary(Spanned { node: Eq, span: src/lib.rs:857:32: 857:34 (#0) }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).196), kind: MethodCall(PathSegment { ident: depth#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).197), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).198), kind: Path(Resolved(None, Path { span: src/lib.rs:857:19: 857:23 (#0), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), segments: [PathSegment { ident: dent#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).199), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), args: None, infer_args: true }] })), span: src/lib.rs:857:19: 857:23 (#0) }, [], src/lib.rs:857:24: 857:31 (#0)), span: src/lib.rs:857:19: 857:31 (#0) }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).200), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: src/lib.rs:857:35: 857:36 (#0) }), span: src/lib.rs:857:35: 857:36 (#0) }), span: src/lib.rs:857:19: 857:36 (#0) }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).201), kind: MethodCall(PathSegment { ident: is_symlink#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).202), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).203), kind: MethodCall(PathSegment { ident: file_type#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).204), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).205), kind: Path(Resolved(None, Path { span: src/lib.rs:858:16: 858:20 (#0), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), segments: [PathSegment { ident: dent#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).206), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), args: None, infer_args: true }] })), span: src/lib.rs:858:16: 858:20 (#0) }, [], src/lib.rs:858:21: 858:32 (#0)), span: src/lib.rs:858:16: 858:32 (#0) }, [], src/lib.rs:858:33: 858:45 (#0)), span: src/lib.rs:858:16: 858:45 (#0) }), span: src/lib.rs:857:19: 858:45 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).207), kind: Field(Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).208), kind: Field(Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).209), kind: Path(Resolved(None, Path { span: src/lib.rs:859:16: 859:20 (#0), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).210), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).2)), args: None, infer_args: true }] })), span: src/lib.rs:859:16: 859:20 (#0) }, opts#0), span: src/lib.rs:859:16: 859:25 (#0) }, follow_root_links#0), span: src/lib.rs:859:16: 859:43 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).195), kind: Binary(Spanned { node: Eq, span: src/lib.rs:857:32: 857:34 (#0) }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).196), kind: MethodCall(PathSegment { ident: depth#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).197), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).198), kind: Path(Resolved(None, Path { span: src/lib.rs:857:19: 857:23 (#0), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), segments: [PathSegment { ident: dent#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).199), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), args: None, infer_args: true }] })), span: src/lib.rs:857:19: 857:23 (#0) }, [], src/lib.rs:857:24: 857:31 (#0)), span: src/lib.rs:857:19: 857:31 (#0) }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).200), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: src/lib.rs:857:35: 857:36 (#0) }), span: src/lib.rs:857:35: 857:36 (#0) }), span: src/lib.rs:857:19: 857:36 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).201), kind: MethodCall(PathSegment { ident: is_symlink#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).202), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).203), kind: MethodCall(PathSegment { ident: file_type#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).204), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).205), kind: Path(Resolved(None, Path { span: src/lib.rs:858:16: 858:20 (#0), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), segments: [PathSegment { ident: dent#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).206), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), args: None, infer_args: true }] })), span: src/lib.rs:858:16: 858:20 (#0) }, [], src/lib.rs:858:21: 858:32 (#0)), span: src/lib.rs:858:16: 858:32 (#0) }, [], src/lib.rs:858:33: 858:45 (#0)), span: src/lib.rs:858:16: 858:45 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).196), kind: MethodCall(PathSegment { ident: depth#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).197), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).198), kind: Path(Resolved(None, Path { span: src/lib.rs:857:19: 857:23 (#0), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), segments: [PathSegment { ident: dent#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).199), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).4)), args: None, infer_args: true }] })), span: src/lib.rs:857:19: 857:23 (#0) }, [], src/lib.rs:857:24: 857:31 (#0)), span: src/lib.rs:857:19: 857:31 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).200), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: src/lib.rs:857:35: 857:36 (#0) }), span: src/lib.rs:857:35: 857:36 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:49 ~ walkdir[daf8]::dent::{impl#0}::depth)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"walkdir"}), Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2560 ~ std[e3cd]::fs::{impl#25}::is_symlink)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:46 ~ walkdir[daf8]::dent::{impl#0}::file_type)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:43 ~ std[3c1d]::fs::metadata)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:40 ~ walkdir[daf8]::dent::{impl#0}::path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:80 ~ walkdir[daf8]::error::{impl#0}::from_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:49 ~ walkdir[daf8]::dent::{impl#0}::depth)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:185 ~ std[3c1d]::path::{impl#9}::to_path_buf)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:40 ~ walkdir[daf8]::dent::{impl#0}::path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3166 ~ core[7d5a]::convert::From::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:2558 ~ std[e3cd]::fs::{impl#25}::is_dir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:2532 ~ std[e3cd]::fs::{impl#17}::file_type)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:148 ~ walkdir[daf8]::{impl#5}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:3166 ~ core[7d5a]::convert::From::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).319), kind: Path(Resolved(None, Path { span: src/lib.rs:875:12: 875:25 (#0), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).69)), segments: [PathSegment { ident: is_normal_dir#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).320), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).69)), args: None, infer_args: true }] })), span: src/lib.rs:875:12: 875:25 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).321), kind: Field(Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).322), kind: Field(Expr { hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).323), kind: Path(Resolved(None, Path { span: src/lib.rs:875:29: 875:33 (#0), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).324), res: Local(HirId(DefId(0:146 ~ walkdir[daf8]::{impl#5}::handle_entry).2)), args: None, infer_args: true }] })), span: src/lib.rs:875:29: 875:33 (#0) }, opts#0), span: src/lib.rs:875:29: 875:38 (#0) }, contents_first#0), span: src/lib.rs:875:29: 875:53 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(6:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:147 ~ walkdir[daf8]::{impl#5}::get_deferred_dir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:147 ~ walkdir[daf8]::{impl#5}::get_deferred_dir).11), kind: Field(Expr { hir_id: HirId(DefId(0:147 ~ walkdir[daf8]::{impl#5}::get_deferred_dir).12), kind: Path(Resolved(None, Path { span: src/lib.rs:887:16: 887:20 (#0), res: Local(HirId(DefId(0:147 ~ walkdir[daf8]::{impl#5}::get_deferred_dir).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:147 ~ walkdir[daf8]::{impl#5}::get_deferred_dir).13), res: Local(HirId(DefId(0:147 ~ walkdir[daf8]::{impl#5}::get_deferred_dir).2)), args: None, infer_args: true }] })), span: src/lib.rs:887:16: 887:20 (#0) }, depth#0), span: src/lib.rs:887:16: 887:26 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:147 ~ walkdir[daf8]::{impl#5}::get_deferred_dir).14), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:147 ~ walkdir[daf8]::{impl#5}::get_deferred_dir).15), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:147 ~ walkdir[daf8]::{impl#5}::get_deferred_dir).16), kind: Field(Expr { hir_id: HirId(DefId(0:147 ~ walkdir[daf8]::{impl#5}::get_deferred_dir).17), kind: Path(Resolved(None, Path { span: src/lib.rs:887:29: 887:33 (#0), res: Local(HirId(DefId(0:147 ~ walkdir[daf8]::{impl#5}::get_deferred_dir).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:147 ~ walkdir[daf8]::{impl#5}::get_deferred_dir).18), res: Local(HirId(DefId(0:147 ~ walkdir[daf8]::{impl#5}::get_deferred_dir).2)), args: None, infer_args: true }] })), span: src/lib.rs:887:29: 887:33 (#0) }, deferred_dirs#0), span: src/lib.rs:887:29: 887:47 (#0) }, [], src/lib.rs:887:48: 887:53 (#0)), span: src/lib.rs:887:29: 887:53 (#0) }
[DEBUG] Trying to get func ty of defid DefId(6:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:9669 ~ core[7d5a]::option::{impl#0}::expect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:7504 ~ alloc[5873]::vec::{impl#1}::pop)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:148 ~ walkdir[daf8]::{impl#5}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9670 ~ core[7d5a]::option::{impl#0}::unwrap)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:25395 ~ core[7d5a]::num::{impl#11}::checked_sub)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(6:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).22), kind: Path(Resolved(None, Path { span: src/lib.rs:906:12: 906:16 (#0), res: Local(HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).19)), segments: [PathSegment { ident: free#0, hir_id: HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).23), res: Local(HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).19)), args: None, infer_args: true }] })), span: src/lib.rs:906:12: 906:16 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).24), kind: Field(Expr { hir_id: HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).25), kind: Field(Expr { hir_id: HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).26), kind: Path(Resolved(None, Path { span: src/lib.rs:906:20: 906:24 (#0), res: Local(HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).27), res: Local(HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).2)), args: None, infer_args: true }] })), span: src/lib.rs:906:20: 906:24 (#0) }, opts#0), span: src/lib.rs:906:20: 906:29 (#0) }, max_open#0), span: src/lib.rs:906:20: 906:38 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:164 ~ walkdir[daf8]::{impl#7}::close)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:35 ~ std[3c1d]::fs::read_dir)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:40 ~ walkdir[daf8]::dent::{impl#0}::path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:80 ~ walkdir[daf8]::error::{impl#0}::from_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:185 ~ std[3c1d]::path::{impl#9}::to_path_buf)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:40 ~ walkdir[daf8]::dent::{impl#0}::path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:8953 ~ core[7d5a]::iter::traits::iterator::Iterator::collect)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(6:5723 ~ alloc[5873]::slice::{impl#0}::sort_by)
[DEBUG] >> NOT FOUND! Getting extern def
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).138), kind: Path(Resolved(None, Path { span: src/lib.rs:917:45: 917:48 (#0), res: Local(HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).96)), segments: [PathSegment { ident: cmp#0, hir_id: HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).139), res: Local(HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).96)), args: None, infer_args: true }] })), span: src/lib.rs:917:45: 917:48 (#0) }
[DEBUG] Trying to get func ty of defid DefId(3:8709 ~ core[7d5a]::iter::traits::collect::IntoIterator::into_iter)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:136 ~ walkdir[daf8]::{impl#3}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:82 ~ walkdir[daf8]::error::{impl#0}::from_io)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(6:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:7502 ~ alloc[5873]::vec::{impl#1}::push)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).273), kind: Path(Resolved(None, Path { span: src/lib.rs:941:12: 941:16 (#0), res: Local(HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).19)), segments: [PathSegment { ident: free#0, hir_id: HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).274), res: Local(HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).19)), args: None, infer_args: true }] })), span: src/lib.rs:941:12: 941:16 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).275), kind: Field(Expr { hir_id: HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).276), kind: Field(Expr { hir_id: HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).277), kind: Path(Resolved(None, Path { span: src/lib.rs:941:20: 941:24 (#0), res: Local(HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).278), res: Local(HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).2)), args: None, infer_args: true }] })), span: src/lib.rs:941:20: 941:24 (#0) }, opts#0), span: src/lib.rs:941:20: 941:29 (#0) }, max_open#0), span: src/lib.rs:941:20: 941:38 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:9670 ~ core[7d5a]::option::{impl#0}::unwrap)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:25390 ~ core[7d5a]::num::{impl#11}::checked_add)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:152 ~ walkdir[daf8]::{impl#5}::pop)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9669 ~ core[7d5a]::option::{impl#0}::expect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:7504 ~ alloc[5873]::vec::{impl#1}::pop)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:9669 ~ core[7d5a]::option::{impl#0}::expect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(6:7504 ~ alloc[5873]::vec::{impl#1}::pop)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:3014 ~ core[7d5a]::cmp::min)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(6:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:153 ~ walkdir[daf8]::{impl#5}::follow)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:54 ~ walkdir[daf8]::dent::{impl#0}::from_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:185 ~ std[3c1d]::path::{impl#9}::to_path_buf)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:40 ~ walkdir[daf8]::dent::{impl#0}::path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:50 ~ walkdir[daf8]::dent::{impl#0}::is_dir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:154 ~ walkdir[daf8]::{impl#5}::check_loop)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:40 ~ walkdir[daf8]::dent::{impl#0}::path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:154 ~ walkdir[daf8]::{impl#5}::check_loop)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(21:50 ~ same_file[8af6]::{impl#0}::from_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:82 ~ walkdir[daf8]::error::{impl#0}::from_io)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:9103 ~ core[7d5a]::iter::traits::iterator::Iterator::rev)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:137 ~ walkdir[daf8]::{impl#3}::is_same)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:82 ~ walkdir[daf8]::error::{impl#0}::from_io)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:83 ~ walkdir[daf8]::error::{impl#0}::from_loop)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:3157 ~ core[7d5a]::convert::AsRef::as_ref)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:158 ~ walkdir[daf8]::{impl#5}::is_same_file_system)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10405 ~ core[7d5a]::result::{impl#0}::map_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:95 ~ walkdir[daf8]::util::device_num)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:40 ~ walkdir[daf8]::dent::{impl#0}::path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:81 ~ walkdir[daf8]::error::{impl#0}::from_entry)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:9669 ~ core[7d5a]::option::{impl#0}::expect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9676 ~ core[7d5a]::option::{impl#0}::map)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:158 ~ walkdir[daf8]::{impl#5}::is_same_file_system).63), kind: Path(Resolved(None, Path { span: src/lib.rs:997:22: 997:23 (#0), res: Local(HirId(DefId(0:158 ~ walkdir[daf8]::{impl#5}::is_same_file_system).61)), segments: [PathSegment { ident: d#0, hir_id: HirId(DefId(0:158 ~ walkdir[daf8]::{impl#5}::is_same_file_system).64), res: Local(HirId(DefId(0:158 ~ walkdir[daf8]::{impl#5}::is_same_file_system).61)), args: None, infer_args: true }] })), span: src/lib.rs:997:22: 997:23 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:158 ~ walkdir[daf8]::{impl#5}::is_same_file_system).65), kind: Path(Resolved(None, Path { span: src/lib.rs:997:27: 997:38 (#0), res: Local(HirId(DefId(0:158 ~ walkdir[daf8]::{impl#5}::is_same_file_system).48)), segments: [PathSegment { ident: dent_device#0, hir_id: HirId(DefId(0:158 ~ walkdir[daf8]::{impl#5}::is_same_file_system).66), res: Local(HirId(DefId(0:158 ~ walkdir[daf8]::{impl#5}::is_same_file_system).48)), args: None, infer_args: true }] })), span: src/lib.rs:997:27: 997:38 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).4), kind: Binary(Spanned { node: Lt, span: src/lib.rs:1002:20: 1002:21 (#0) }, Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).5), kind: Field(Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).6), kind: Path(Resolved(None, Path { span: src/lib.rs:1002:9: 1002:13 (#0), res: Local(HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).7), res: Local(HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).2)), args: None, infer_args: true }] })), span: src/lib.rs:1002:9: 1002:13 (#0) }, depth#0), span: src/lib.rs:1002:9: 1002:19 (#0) }, Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).8), kind: Field(Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).9), kind: Field(Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).10), kind: Path(Resolved(None, Path { span: src/lib.rs:1002:22: 1002:26 (#0), res: Local(HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).11), res: Local(HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).2)), args: None, infer_args: true }] })), span: src/lib.rs:1002:22: 1002:26 (#0) }, opts#0), span: src/lib.rs:1002:22: 1002:31 (#0) }, min_depth#0), span: src/lib.rs:1002:22: 1002:41 (#0) }), span: src/lib.rs:1002:9: 1002:41 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).12), kind: Binary(Spanned { node: Gt, span: src/lib.rs:1002:56: 1002:57 (#0) }, Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).13), kind: Field(Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).14), kind: Path(Resolved(None, Path { span: src/lib.rs:1002:45: 1002:49 (#0), res: Local(HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).15), res: Local(HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).2)), args: None, infer_args: true }] })), span: src/lib.rs:1002:45: 1002:49 (#0) }, depth#0), span: src/lib.rs:1002:45: 1002:55 (#0) }, Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).16), kind: Field(Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).17), kind: Field(Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).18), kind: Path(Resolved(None, Path { span: src/lib.rs:1002:58: 1002:62 (#0), res: Local(HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).19), res: Local(HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).2)), args: None, infer_args: true }] })), span: src/lib.rs:1002:58: 1002:62 (#0) }, opts#0), span: src/lib.rs:1002:58: 1002:67 (#0) }, max_depth#0), span: src/lib.rs:1002:58: 1002:77 (#0) }), span: src/lib.rs:1002:45: 1002:77 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).5), kind: Field(Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).6), kind: Path(Resolved(None, Path { span: src/lib.rs:1002:9: 1002:13 (#0), res: Local(HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).7), res: Local(HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).2)), args: None, infer_args: true }] })), span: src/lib.rs:1002:9: 1002:13 (#0) }, depth#0), span: src/lib.rs:1002:9: 1002:19 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).8), kind: Field(Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).9), kind: Field(Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).10), kind: Path(Resolved(None, Path { span: src/lib.rs:1002:22: 1002:26 (#0), res: Local(HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).11), res: Local(HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).2)), args: None, infer_args: true }] })), span: src/lib.rs:1002:22: 1002:26 (#0) }, opts#0), span: src/lib.rs:1002:22: 1002:31 (#0) }, min_depth#0), span: src/lib.rs:1002:22: 1002:41 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).13), kind: Field(Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).14), kind: Path(Resolved(None, Path { span: src/lib.rs:1002:45: 1002:49 (#0), res: Local(HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).15), res: Local(HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).2)), args: None, infer_args: true }] })), span: src/lib.rs:1002:45: 1002:49 (#0) }, depth#0), span: src/lib.rs:1002:45: 1002:55 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).16), kind: Field(Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).17), kind: Field(Expr { hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).18), kind: Path(Resolved(None, Path { span: src/lib.rs:1002:58: 1002:62 (#0), res: Local(HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).19), res: Local(HirId(DefId(0:161 ~ walkdir[daf8]::{impl#5}::skippable).2)), args: None, infer_args: true }] })), span: src/lib.rs:1002:58: 1002:62 (#0) }, opts#0), span: src/lib.rs:1002:58: 1002:67 (#0) }, max_depth#0), span: src/lib.rs:1002:58: 1002:77 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).138), kind: Path(Resolved(None, Path { span: src/lib.rs:917:45: 917:48 (#0), res: Local(HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).96)), segments: [PathSegment { ident: cmp#0, hir_id: HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).139), res: Local(HirId(DefId(0:148 ~ walkdir[daf8]::{impl#5}::push).96)), args: None, infer_args: true }] })), span: src/lib.rs:917:45: 917:48 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:164 ~ walkdir[daf8]::{impl#7}::close)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:8709 ~ core[7d5a]::iter::traits::collect::IntoIterator::into_iter)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:8953 ~ core[7d5a]::iter::traits::iterator::Iterator::collect)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:167 ~ walkdir[daf8]::{impl#8}::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9676 ~ core[7d5a]::option::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9713 ~ core[7d5a]::option::{impl#0}::take)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9676 ~ core[7d5a]::option::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:51 ~ walkdir[daf8]::dent::{impl#0}::from_entry)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:167 ~ walkdir[daf8]::{impl#8}::next).66), kind: Path(Resolved(None, Path { span: src/lib.rs:1026:51: 1026:56 (#0), res: Local(HirId(DefId(0:167 ~ walkdir[daf8]::{impl#8}::next).19)), segments: [PathSegment { ident: depth#0, hir_id: HirId(DefId(0:167 ~ walkdir[daf8]::{impl#8}::next).67), res: Local(HirId(DefId(0:167 ~ walkdir[daf8]::{impl#8}::next).19)), args: None, infer_args: true }] })), span: src/lib.rs:1026:51: 1026:56 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:167 ~ walkdir[daf8]::{impl#8}::next).68), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: src/lib.rs:1026:59: 1026:60 (#0) }), span: src/lib.rs:1026:59: 1026:60 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:82 ~ walkdir[daf8]::error::{impl#0}::from_io)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:167 ~ walkdir[daf8]::{impl#8}::next).85), kind: Path(Resolved(None, Path { span: src/lib.rs:1027:52: 1027:57 (#0), res: Local(HirId(DefId(0:167 ~ walkdir[daf8]::{impl#8}::next).19)), segments: [PathSegment { ident: depth#0, hir_id: HirId(DefId(0:167 ~ walkdir[daf8]::{impl#8}::next).86), res: Local(HirId(DefId(0:167 ~ walkdir[daf8]::{impl#8}::next).19)), args: None, infer_args: true }] })), span: src/lib.rs:1027:52: 1027:57 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:167 ~ walkdir[daf8]::{impl#8}::next).87), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: src/lib.rs:1027:60: 1027:61 (#0) }), span: src/lib.rs:1027:60: 1027:61 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:231 ~ walkdir[daf8]::{impl#16}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11198 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field2_finish)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:172 ~ walkdir[daf8]::{impl#9}::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:3166 ~ core[7d5a]::convert::From::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:172 ~ walkdir[daf8]::{impl#9}::next).52), kind: Field(Expr { hir_id: HirId(DefId(0:172 ~ walkdir[daf8]::{impl#9}::next).53), kind: Path(Resolved(None, Path { span: src/lib.rs:1079:18: 1079:22 (#0), res: Local(HirId(DefId(0:172 ~ walkdir[daf8]::{impl#9}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:172 ~ walkdir[daf8]::{impl#9}::next).54), res: Local(HirId(DefId(0:172 ~ walkdir[daf8]::{impl#9}::next).2)), args: None, infer_args: true }] })), span: src/lib.rs:1079:18: 1079:22 (#0) }, predicate#0), span: src/lib.rs:1079:17: 1079:33 (#0) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:50 ~ walkdir[daf8]::dent::{impl#0}::is_dir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:143 ~ walkdir[daf8]::{impl#5}::skip_current_dir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:172 ~ walkdir[daf8]::{impl#9}::next).52), kind: Field(Expr { hir_id: HirId(DefId(0:172 ~ walkdir[daf8]::{impl#9}::next).53), kind: Path(Resolved(None, Path { span: src/lib.rs:1079:18: 1079:22 (#0), res: Local(HirId(DefId(0:172 ~ walkdir[daf8]::{impl#9}::next).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:172 ~ walkdir[daf8]::{impl#9}::next).54), res: Local(HirId(DefId(0:172 ~ walkdir[daf8]::{impl#9}::next).2)), args: None, infer_args: true }] })), span: src/lib.rs:1079:18: 1079:22 (#0) }, predicate#0), span: src/lib.rs:1079:17: 1079:33 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:177 ~ walkdir[daf8]::{impl#11}::filter_entry)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:178 ~ walkdir[daf8]::{impl#11}::skip_current_dir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:143 ~ walkdir[daf8]::{impl#5}::skip_current_dir)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
