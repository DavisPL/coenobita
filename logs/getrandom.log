[DEBUG] Trying to get func ty of defid DefId(0:60 ~ getrandom[d83a]::error::{impl#5}::clone)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:62 ~ getrandom[d83a]::error::{impl#6}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:65 ~ getrandom[d83a]::error::{impl#8}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:65 ~ getrandom[d83a]::error::{impl#8}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:65 ~ getrandom[d83a]::error::{impl#8}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:17:27: 17:27 (#7), res: Local(HirId(DefId(0:65 ~ getrandom[d83a]::error::{impl#8}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:65 ~ getrandom[d83a]::error::{impl#8}::eq).8), res: Local(HirId(DefId(0:65 ~ getrandom[d83a]::error::{impl#8}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:17:27: 17:36 (#7) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:18:18: 18:28 (#7) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:65 ~ getrandom[d83a]::error::{impl#8}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:65 ~ getrandom[d83a]::error::{impl#8}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:17:27: 17:36 (#7), res: Local(HirId(DefId(0:65 ~ getrandom[d83a]::error::{impl#8}::eq).4)), segments: [PathSegment { ident: other#7, hir_id: HirId(DefId(0:65 ~ getrandom[d83a]::error::{impl#8}::eq).11), res: Local(HirId(DefId(0:65 ~ getrandom[d83a]::error::{impl#8}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:17:27: 17:36 (#7) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:18:18: 18:28 (#7) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:13 ~ getrandom[d83a]::error::internal_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:13 ~ getrandom[d83a]::error::internal_error).5), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:13 ~ getrandom[d83a]::error::internal_error).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:22:16: 22:21 (#0), res: Def(Struct, DefId(0:55 ~ getrandom[d83a]::error::Error)), segments: [PathSegment { ident: Error#0, hir_id: HirId(DefId(0:13 ~ getrandom[d83a]::error::internal_error).6), res: Def(Struct, DefId(0:55 ~ getrandom[d83a]::error::Error)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:22:16: 22:21 (#0) }, PathSegment { ident: INTERNAL_START#0, hir_id: HirId(DefId(0:13 ~ getrandom[d83a]::error::internal_error).8), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:22:16: 22:37 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:13 ~ getrandom[d83a]::error::internal_error).9), kind: Cast(Expr { hir_id: HirId(DefId(0:13 ~ getrandom[d83a]::error::internal_error).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:22:41: 22:42 (#0), res: Local(HirId(DefId(0:13 ~ getrandom[d83a]::error::internal_error).2)), segments: [PathSegment { ident: n#0, hir_id: HirId(DefId(0:13 ~ getrandom[d83a]::error::internal_error).11), res: Local(HirId(DefId(0:13 ~ getrandom[d83a]::error::internal_error).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:22:41: 22:42 (#0) }, Ty { hir_id: HirId(DefId(0:13 ~ getrandom[d83a]::error::internal_error).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:22:46: 22:49 (#0), res: PrimTy(Uint(U32)), segments: [PathSegment { ident: u32#0, hir_id: HirId(DefId(0:13 ~ getrandom[d83a]::error::internal_error).13), res: PrimTy(Uint(U32)), args: None, infer_args: false }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:22:46: 22:49 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:22:40: 22:50 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Specific({"getrandom"}), Specific({"getrandom"})), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:977 ~ core[7d5a]::num::nonzero::{impl#14}::new_unchecked)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:30 ~ getrandom[d83a]::error::{impl#0}::raw_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:30 ~ getrandom[d83a]::error::{impl#0}::raw_os_error).5), kind: MethodCall(PathSegment { ident: get#0, hir_id: HirId(DefId(0:30 ~ getrandom[d83a]::error::{impl#0}::raw_os_error).6), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:30 ~ getrandom[d83a]::error::{impl#0}::raw_os_error).7), kind: Field(Expr { hir_id: HirId(DefId(0:30 ~ getrandom[d83a]::error::{impl#0}::raw_os_error).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:75:12: 75:16 (#0), res: Local(HirId(DefId(0:30 ~ getrandom[d83a]::error::{impl#0}::raw_os_error).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:30 ~ getrandom[d83a]::error::{impl#0}::raw_os_error).9), res: Local(HirId(DefId(0:30 ~ getrandom[d83a]::error::{impl#0}::raw_os_error).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:75:12: 75:16 (#0) }, 0#0), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:75:12: 75:18 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:75:19: 75:24 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:75:12: 75:24 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:30 ~ getrandom[d83a]::error::{impl#0}::raw_os_error).10), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:30 ~ getrandom[d83a]::error::{impl#0}::raw_os_error).12), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:75:27: 75:31 (#0), res: SelfTyAlias { alias_to: DefId(0:14 ~ getrandom[d83a]::error::{impl#0}), forbid_generic: false, is_trait_impl: false }, segments: [PathSegment { ident: Self#0, hir_id: HirId(DefId(0:30 ~ getrandom[d83a]::error::{impl#0}::raw_os_error).11), res: SelfTyAlias { alias_to: DefId(0:14 ~ getrandom[d83a]::error::{impl#0}), forbid_generic: false, is_trait_impl: false }, args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:75:27: 75:31 (#0) }, PathSegment { ident: INTERNAL_START#0, hir_id: HirId(DefId(0:30 ~ getrandom[d83a]::error::{impl#0}::raw_os_error).13), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:75:27: 75:47 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:980 ~ core[7d5a]::num::nonzero::{impl#14}::get)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"getrandom"}), Specific({"getrandom"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:980 ~ core[7d5a]::num::nonzero::{impl#14}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:31 ~ getrandom[d83a]::error::{impl#0}::code)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:66 ~ getrandom[d83a]::error::os_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13279 ~ core[7d5a]::slice::{impl#0}::as_mut_ptr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).19), kind: Block(Block { stmts: [], expr: Some(Expr { hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).20), kind: Call(Expr { hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).21), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:103:25: 103:41 (#0), res: Def(Fn, DefId(5:1162 ~ libc[9eb8]::unix::bsd::{extern#0}::strerror_r)), segments: [PathSegment { ident: libc#0, hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).22), res: Def(Mod, DefId(5:0 ~ libc[9eb8])), args: None, infer_args: true }, PathSegment { ident: strerror_r#0, hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).23), res: Def(Fn, DefId(5:1162 ~ libc[9eb8]::unix::bsd::{extern#0}::strerror_r)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:103:25: 103:41 (#0) }, [Expr { hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).24), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:103:42: 103:47 (#0), res: Local(HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).2)), segments: [PathSegment { ident: errno#0, hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).25), res: Local(HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:103:42: 103:47 (#0) }, Expr { hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).26), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:103:49: 103:56 (#0), res: Local(HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).16)), segments: [PathSegment { ident: buf_ptr#0, hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).27), res: Local(HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).16)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:103:49: 103:56 (#0) }, Expr { hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).28), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).29), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).30), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:103:58: 103:61 (#0), res: Local(HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).4)), segments: [PathSegment { ident: buf#0, hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).31), res: Local(HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:103:58: 103:61 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:103:62: 103:67 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:103:58: 103:67 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:103:25: 103:68 (#0) }), hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).32), rules: UnsafeBlock(UserProvided), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:103:16: 103:70 (#0), targeted_by_break: false }, None), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:103:16: 103:70 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).33), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:103:74: 103:75 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:103:74: 103:75 (#0) }
[DEBUG] Trying to get func ty of defid DefId(5:1162 ~ libc[9eb8]::unix::bsd::{extern#0}::strerror_r)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"getrandom"}), Specific({"getrandom"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:9671 ~ core[7d5a]::option::{impl#0}::unwrap_or)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:9048 ~ core[7d5a]::iter::traits::iterator::Iterator::position)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13287 ~ core[7d5a]::slice::{impl#0}::iter)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).63), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:109:48: 109:49 (#0), res: Local(HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).60)), segments: [PathSegment { ident: b#0, hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).64), res: Local(HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).60)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:109:48: 109:49 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:66 ~ getrandom[d83a]::error::os_err).65), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:109:53: 109:54 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:109:53: 109:54 (#0) }
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Specific({"getrandom"}), Specific({"getrandom"})), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"getrandom"}), Specific({"getrandom"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10391 ~ core[7d5a]::result::{impl#0}::ok)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13518 ~ core[7d5a]::str::converts::from_utf8)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] [WARN] Silently failed to get type of local var
[DEBUG] Trying to get func ty of defid DefId(0:33 ~ getrandom[d83a]::error::{impl#1}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11194 ~ core[7d5a]::fmt::{impl#9}::debug_struct)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:30 ~ getrandom[d83a]::error::{impl#0}::raw_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:66 ~ getrandom[d83a]::error::os_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:40 ~ getrandom[d83a]::error::internal_desc)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:980 ~ core[7d5a]::num::nonzero::{impl#14}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:10787 ~ core[7d5a]::fmt::builders::{impl#3}::field)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:980 ~ core[7d5a]::num::nonzero::{impl#14}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:10794 ~ core[7d5a]::fmt::builders::{impl#3}::finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:36 ~ getrandom[d83a]::error::{impl#2}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:30 ~ getrandom[d83a]::error::{impl#0}::raw_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:66 ~ getrandom[d83a]::error::os_err)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:11142 ~ core[7d5a]::fmt::Display::fmt)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:11182 ~ core[7d5a]::fmt::{impl#9}::write_fmt)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:40 ~ getrandom[d83a]::error::internal_desc)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:11181 ~ core[7d5a]::fmt::{impl#9}::write_str)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:11182 ~ core[7d5a]::fmt::{impl#9}::write_fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11117 ~ core[7d5a]::fmt::{impl#2}::new_v1)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:11032 ~ core[7d5a]::fmt::rt::{impl#1}::new_display)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:980 ~ core[7d5a]::num::nonzero::{impl#14}::get)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:39 ~ getrandom[d83a]::error::{impl#3}::from)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:40 ~ getrandom[d83a]::error::internal_desc)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:45 ~ getrandom[d83a]::util::slice_assume_init_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:47 ~ getrandom[d83a]::util::uninit_slice_fill_zero)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:1990 ~ core[7d5a]::intrinsics::write_bytes)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13279 ~ core[7d5a]::slice::{impl#0}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:45 ~ getrandom[d83a]::util::slice_assume_init_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ getrandom[d83a]::util::slice_as_uninit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:50 ~ getrandom[d83a]::util::slice_as_uninit_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ getrandom[d83a]::util_libc::get_errno)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(5:3744 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::__error)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:79 ~ getrandom[d83a]::util_libc::last_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:97 ~ getrandom[d83a]::util_libc::get_errno)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:79 ~ getrandom[d83a]::util_libc::last_os_error).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:45:8: 45:13 (#0), res: Local(HirId(DefId(0:79 ~ getrandom[d83a]::util_libc::last_os_error).8)), segments: [PathSegment { ident: errno#0, hir_id: HirId(DefId(0:79 ~ getrandom[d83a]::util_libc::last_os_error).12), res: Local(HirId(DefId(0:79 ~ getrandom[d83a]::util_libc::last_os_error).8)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:45:8: 45:13 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:79 ~ getrandom[d83a]::util_libc::last_os_error).13), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:45:16: 45:17 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:45:16: 45:17 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"getrandom"}), Specific({"getrandom"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:3166 ~ core[7d5a]::convert::From::from)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:9670 ~ core[7d5a]::option::{impl#0}::unwrap)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:976 ~ core[7d5a]::num::nonzero::{impl#14}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13229 ~ core[7d5a]::slice::{impl#0}::is_empty)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:60:19: 60:27 (#0), res: Local(HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).4)), segments: [PathSegment { ident: sys_fill#0, hir_id: HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).15), res: Local(HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:60:19: 60:27 (#0) }
[DEBUG] Trying to get func ty of defid DefId(1:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:9688 ~ core[7d5a]::option::{impl#0}::ok_or)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13272 ~ core[7d5a]::slice::{impl#0}::get_mut)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] lang item being silently ignored, 
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:79 ~ getrandom[d83a]::util_libc::last_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).80), kind: MethodCall(PathSegment { ident: raw_os_error#0, hir_id: HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).81), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).82), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:66:20: 66:23 (#0), res: Local(HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).77)), segments: [PathSegment { ident: err#0, hir_id: HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).83), res: Local(HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).77)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:66:20: 66:23 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:66:24: 66:38 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:66:20: 66:38 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).84), kind: Call(Expr { hir_id: HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).85), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:66:42: 66:46 (#0), res: Def(Ctor(Variant, Fn), DefId(1:37174 ~ core[7d5a]::option::Option::Some::{constructor#0})), segments: [PathSegment { ident: Some#0, hir_id: HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).86), res: Def(Ctor(Variant, Fn), DefId(1:37174 ~ core[7d5a]::option::Option::Some::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:66:42: 66:46 (#0) }, [Expr { hir_id: HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).87), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:66:47: 66:58 (#0), res: Def(Const, DefId(5:1959 ~ libc[9eb8]::unix::bsd::apple::EINTR)), segments: [PathSegment { ident: libc#0, hir_id: HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).88), res: Def(Mod, DefId(5:0 ~ libc[9eb8])), args: None, infer_args: true }, PathSegment { ident: EINTR#0, hir_id: HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).89), res: Def(Const, DefId(5:1959 ~ libc[9eb8]::unix::bsd::apple::EINTR)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:66:47: 66:58 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:66:42: 66:59 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:30 ~ getrandom[d83a]::error::{impl#0}::raw_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"getrandom"}), Universal), kind: Adt({"0": Ty { property: FlowPair(Universal, Universal), kind: Infer }}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[WARN] Cannot tell if expression is a function - Expr { hir_id: HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).14), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:60:19: 60:27 (#0), res: Local(HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).4)), segments: [PathSegment { ident: sys_fill#0, hir_id: HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).15), res: Local(HirId(DefId(0:80 ~ getrandom[d83a]::util_libc::sys_fill_exact).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:60:19: 60:27 (#0) }
[DEBUG] lang item being silently ignored, 
[DEBUG] Trying to get func ty of defid DefId(0:87 ~ getrandom[d83a]::util_libc::{impl#0}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:10610 ~ core[7d5a]::sync::atomic::{impl#6}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:88 ~ getrandom[d83a]::util_libc::{impl#0}::ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:10619 ~ core[7d5a]::sync::atomic::{impl#6}::load)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:14308 ~ core[7d5a]::str::{impl#0}::as_ptr)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(5:387 ~ libc[9eb8]::unix::{extern#2}::dlsym)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10620 ~ core[7d5a]::sync::atomic::{impl#6}::store)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:2389 ~ core[7d5a]::ptr::non_null::{impl#3}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:2389 ~ core[7d5a]::ptr::non_null::{impl#3}::new)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10674 ~ core[7d5a]::sync::atomic::fence)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Specific({"getrandom"}), Specific({"getrandom"})), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:13236 ~ core[7d5a]::slice::{impl#0}::last)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:14306 ~ core[7d5a]::str::{impl#0}::as_bytes)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).29), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).30), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#33), res: Local(HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).21)), segments: [PathSegment { ident: left_val#33, hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).31), res: Local(HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).21)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:23: 46:31 (#33) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:22: 46:31 (#33) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).32), kind: Unary(Deref, Expr { hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).33), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#33), res: Local(HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).22)), segments: [PathSegment { ident: right_val#33, hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).34), res: Local(HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).22)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:36: 46:45 (#33) }), span: /Users/georgeberdovskiy/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:35: 46:45 (#33) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"getrandom"}), Universal), kind: Adt({"0": Ty { property: FlowPair(Universal, Universal), kind: Infer }}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:10038 ~ core[7d5a]::panicking::assert_failed)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(5:247 ~ libc[9eb8]::unix::{extern#2}::open)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:14308 ~ core[7d5a]::str::{impl#0}::as_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).86), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:139:56: 139:70 (#0), res: Def(Const, DefId(5:931 ~ libc[9eb8]::unix::bsd::O_RDONLY)), segments: [PathSegment { ident: libc#0, hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).87), res: Def(Mod, DefId(5:0 ~ libc[9eb8])), args: None, infer_args: true }, PathSegment { ident: O_RDONLY#0, hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).88), res: Def(Const, DefId(5:931 ~ libc[9eb8]::unix::bsd::O_RDONLY)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:139:56: 139:70 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).89), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:139:73: 139:88 (#0), res: Def(Const, DefId(5:1856 ~ libc[9eb8]::unix::bsd::apple::O_CLOEXEC)), segments: [PathSegment { ident: libc#0, hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).90), res: Def(Mod, DefId(5:0 ~ libc[9eb8])), args: None, infer_args: true }, PathSegment { ident: O_CLOEXEC#0, hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).91), res: Def(Const, DefId(5:1856 ~ libc[9eb8]::unix::bsd::apple::O_CLOEXEC)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:139:73: 139:88 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).96), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:140:12: 140:14 (#0), res: Local(HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).93)), segments: [PathSegment { ident: fd#0, hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).97), res: Local(HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).93)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:140:12: 140:14 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).98), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:140:18: 140:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:140:18: 140:19 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"getrandom"}), Specific({"getrandom"})), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:79 ~ getrandom[d83a]::util_libc::last_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).118), kind: MethodCall(PathSegment { ident: raw_os_error#0, hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).119), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).120), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:145:12: 145:15 (#0), res: Local(HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).115)), segments: [PathSegment { ident: err#0, hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).121), res: Local(HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).115)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:145:12: 145:15 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:145:16: 145:30 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:145:12: 145:30 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).122), kind: Call(Expr { hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).123), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:145:34: 145:38 (#0), res: Def(Ctor(Variant, Fn), DefId(1:37174 ~ core[7d5a]::option::Option::Some::{constructor#0})), segments: [PathSegment { ident: Some#0, hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).124), res: Def(Ctor(Variant, Fn), DefId(1:37174 ~ core[7d5a]::option::Option::Some::{constructor#0})), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:145:34: 145:38 (#0) }, [Expr { hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).125), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:145:39: 145:50 (#0), res: Def(Const, DefId(5:1959 ~ libc[9eb8]::unix::bsd::apple::EINTR)), segments: [PathSegment { ident: libc#0, hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).126), res: Def(Mod, DefId(5:0 ~ libc[9eb8])), args: None, infer_args: true }, PathSegment { ident: EINTR#0, hir_id: HirId(DefId(0:89 ~ getrandom[d83a]::util_libc::open_readonly).127), res: Def(Const, DefId(5:1959 ~ libc[9eb8]::unix::bsd::apple::EINTR)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:145:39: 145:50 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util_libc.rs:145:34: 145:51 (#0) }
[DEBUG] Trying to get func ty of defid DefId(0:30 ~ getrandom[d83a]::error::{impl#0}::raw_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"getrandom"}), Universal), kind: Adt({"0": Ty { property: FlowPair(Universal, Universal), kind: Infer }}) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:95 ~ getrandom[d83a]::imp::getrandom_inner)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13291 ~ core[7d5a]::slice::{impl#0}::chunks_mut)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(5:3878 ~ libc[9eb8]::unix::bsd::apple::{extern#0}::getentropy)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:13279 ~ core[7d5a]::slice::{impl#0}::as_mut_ptr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13228 ~ core[7d5a]::slice::{impl#0}::len)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:95 ~ getrandom[d83a]::imp::getrandom_inner).39), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/getentropy.rs:16:12: 16:15 (#0), res: Local(HirId(DefId(0:95 ~ getrandom[d83a]::imp::getrandom_inner).36)), segments: [PathSegment { ident: ret#0, hir_id: HirId(DefId(0:95 ~ getrandom[d83a]::imp::getrandom_inner).40), res: Local(HirId(DefId(0:95 ~ getrandom[d83a]::imp::getrandom_inner).36)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/getentropy.rs:16:12: 16:15 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:95 ~ getrandom[d83a]::imp::getrandom_inner).41), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/getentropy.rs:16:19: 16:20 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/getentropy.rs:16:19: 16:20 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"getrandom"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:79 ~ getrandom[d83a]::util_libc::last_os_error)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:53 ~ getrandom[d83a]::getrandom)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:54 ~ getrandom[d83a]::getrandom_uninit)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:50 ~ getrandom[d83a]::util::slice_as_uninit_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:54 ~ getrandom[d83a]::getrandom_uninit)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:13229 ~ core[7d5a]::slice::{impl#0}::is_empty)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:95 ~ getrandom[d83a]::imp::getrandom_inner)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(1:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:45 ~ getrandom[d83a]::util::slice_assume_init_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
