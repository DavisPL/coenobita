[DEBUG] Trying to get func ty of defid DefId(0:4 ~ build_script_build[f67d]::main)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:5695 ~ std[e3cd]::process::{impl#22}::output)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:5671 ~ std[e3cd]::process::{impl#22}::arg)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:5669 ~ std[e3cd]::process::{impl#22}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(6:5966 ~ alloc[5873]::string::{impl#0}::from_utf8)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:14335 ~ core[7d5a]::str::{impl#0}::starts_with)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:8890 ~ core[7d5a]::iter::traits::iterator::Iterator::next)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:8934 ~ core[7d5a]::iter::traits::iterator::Iterator::skip)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:14347 ~ core[7d5a]::str::{impl#0}::split)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:8953 ~ core[7d5a]::iter::traits::iterator::Iterator::collect)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:14347 ~ core[7d5a]::str::{impl#0}::split)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).81), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).82), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).83), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:14:16: 14:17 (#0), res: Local(HirId(DefId(0:4 ~ build_script_build[f67d]::main).78)), segments: [PathSegment { ident: s#0, hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).84), res: Local(HirId(DefId(0:4 ~ build_script_build[f67d]::main).78)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:14:16: 14:17 (#0) }, [], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:14:18: 14:23 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:14:16: 14:23 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).85), kind: Lit(Spanned { node: Int(Pu128(3), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:14:26: 14:27 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:14:26: 14:27 (#0) }
[DEBUG] Trying to get func ty of defid DefId(6:7512 ~ alloc[5873]::vec::{impl#1}::len)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"root"}), Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).94), kind: Binary(Spanned { node: Eq, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:21: 17:23 (#0) }, Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).95), kind: Index(Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).96), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:16: 17:17 (#0), res: Local(HirId(DefId(0:4 ~ build_script_build[f67d]::main).78)), segments: [PathSegment { ident: s#0, hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).97), res: Local(HirId(DefId(0:4 ~ build_script_build[f67d]::main).78)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:16: 17:17 (#0) }, Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).98), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:18: 17:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:18: 17:19 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:17: 17:20 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:16: 17:20 (#0) }, Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).99), kind: Lit(Spanned { node: Str("1", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:24: 17:27 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:24: 17:27 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:16: 17:27 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).100), kind: MethodCall(PathSegment { ident: unwrap_or_else#0, hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).101), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).102), kind: MethodCall(PathSegment { ident: map#0, hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).103), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).104), kind: Call(Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).105), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).107), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:31: 17:34 (#0), res: PrimTy(Uint(U32)), segments: [PathSegment { ident: u32#0, hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).106), res: PrimTy(Uint(U32)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:31: 17:34 (#0) }, PathSegment { ident: from_str_radix#0, hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).108), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:31: 17:50 (#0) }, [Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).109), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).110), kind: Index(Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).111), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:52: 17:53 (#0), res: Local(HirId(DefId(0:4 ~ build_script_build[f67d]::main).78)), segments: [PathSegment { ident: s#0, hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).112), res: Local(HirId(DefId(0:4 ~ build_script_build[f67d]::main).78)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:52: 17:53 (#0) }, Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).113), kind: Lit(Spanned { node: Int(Pu128(1), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:54: 17:55 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:54: 17:55 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:53: 17:56 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:52: 17:56 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:51: 17:56 (#0) }, Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).114), kind: Lit(Spanned { node: Int(Pu128(10), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:58: 17:60 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:58: 17:60 (#0) }]), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:31: 17:61 (#0) }, [Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).115), kind: Closure(Closure { def_id: DefId(0:5 ~ build_script_build[f67d]::main::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).122), kind: Infer, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:18:41: 18:43 (#0) }], output: DefaultReturn(/Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:18:44: 18:44 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).118) }, fn_decl_span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:18:40: 18:44 (#0), fn_arg_span: Some(/Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:18:40: 18:44 (#0)), kind: Closure }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:18:40: 18:52 (#0) }], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:18:36: 18:53 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:31: 18:53 (#0) }, [Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).123), kind: Closure(Closure { def_id: DefId(0:6 ~ build_script_build[f67d]::main::{closure#1}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).127), kind: Infer, span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:19:52: 19:53 (#0) }], output: DefaultReturn(/Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:19:54: 19:54 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).126) }, fn_decl_span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:19:51: 19:54 (#0), fn_arg_span: Some(/Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:19:51: 19:54 (#0)), kind: Closure }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:19:51: 19:60 (#0) }], /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:19:36: 19:61 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:31: 19:61 (#0) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).95), kind: Index(Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).96), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:16: 17:17 (#0), res: Local(HirId(DefId(0:4 ~ build_script_build[f67d]::main).78)), segments: [PathSegment { ident: s#0, hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).97), res: Local(HirId(DefId(0:4 ~ build_script_build[f67d]::main).78)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:16: 17:17 (#0) }, Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).98), kind: Lit(Spanned { node: Int(Pu128(0), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:18: 17:19 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:18: 17:19 (#0) }, /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:17: 17:20 (#0)), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:16: 17:20 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).99), kind: Lit(Spanned { node: Str("1", Cooked), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:24: 17:27 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:17:24: 17:27 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"root"}), Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:10436 ~ core[7d5a]::result::{impl#0}::unwrap_or_else)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:25591 ~ core[7d5a]::num::{impl#36}::from_str_radix)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).119), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:18:45: 18:47 (#0), res: Local(HirId(DefId(0:4 ~ build_script_build[f67d]::main).117)), segments: [PathSegment { ident: nb#0, hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).120), res: Local(HirId(DefId(0:4 ~ build_script_build[f67d]::main).117)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:18:45: 18:47 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:4 ~ build_script_build[f67d]::main).121), kind: Lit(Spanned { node: Int(Pu128(30), Unsuffixed), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:18:50: 18:52 (#0) }), span: /Users/georgeberdovskiy/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs:18:50: 18:52 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Specific({"root"}), Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:3625 ~ std[e3cd]::io::stdio::_print)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:11113 ~ core[7d5a]::fmt::{impl#2}::new_const)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
